unit ChartbundleJS;

interface

uses Interfaces, Classes;

type
  TChartbundleJS = class(TInterfacedObject,iModelJS)
    private
      FPack : TStringList;
    public
      constructor Create;
      destructor Destroy; override;
      class function New : iModelJS;
	    procedure ChartbundleJS_1;
      procedure ChartbundleJS_2;
      procedure ChartbundleJS_3;
      procedure ChartbundleJS_4;
      procedure ChartbundleJS_5;
      procedure ChartbundleJS_6;
      procedure ChartbundleJS_7;
      procedure ChartbundleJS_8;
      procedure ChartbundleJS_9;
      procedure ChartbundleJS_10;
      procedure ChartbundleJS_11;
      procedure ChartbundleJS_12;
      procedure ChartbundleJS_13;
      procedure ChartbundleJS_14;
      procedure ChartbundleJS_15;
      procedure ChartbundleJS_16;
      procedure ChartbundleJS_17;
      procedure ChartbundleJS_18;
      procedure ChartbundleJS_19;
      procedure ChartbundleJS_20;
      procedure ChartbundleJS_21;
      procedure ChartbundleJS_22;
      procedure ChartbundleJS_23;
      procedure ChartbundleJS_24;
      procedure ChartbundleJS_25;
      procedure ChartbundleJS_26;
      procedure ChartbundleJS_27;
      procedure ChartbundleJS_28;
      procedure ChartbundleJS_29;
      procedure ChartbundleJS_30;
      procedure ChartbundleJS_31;
      procedure ChartbundleJS_32;
      procedure ChartbundleJS_33;
      procedure ChartbundleJS_34;
      procedure ChartbundleJS_35;
      procedure ChartbundleJS_36;
      procedure ChartbundleJS_37;
      procedure ChartbundleJS_38;
      procedure ChartbundleJS_39;
      procedure ChartbundleJS_40;
      procedure ChartbundleJS_41;
      procedure ChartbundleJS_42;
      procedure ChartbundleJS_43;
      procedure ChartbundleJS_44;
      procedure ChartbundleJS_45;
      procedure ChartbundleJS_46;
      procedure ChartbundleJS_47;
      procedure ChartbundleJS_48;
      procedure ChartbundleJS_49;
      procedure ChartbundleJS_50;
      procedure ChartbundleJS_51;
      procedure ChartbundleJS_52;
      procedure ChartbundleJS_53;
      procedure ChartbundleJS_54;
      procedure ChartbundleJS_55;
      procedure ChartbundleJS_56;
      procedure ChartbundleJS_57;
      function PackJS : String;
      function CDN(Value : Boolean) : iModelJS;
  end;

implementation

uses
  SysUtils;

{ TChartbundleJS }

constructor TChartbundleJS.Create;
begin
  FPack := TStringList.Create;
end;

destructor TChartbundleJS.Destroy;
begin
  freeandnil(fpack);
  inherited;
end;

class function TChartbundleJS.New: iModelJS;
begin
  Result := Self.Create;
end;

function TChartbundleJS.CDN(Value: Boolean): iModelJS;
begin
  Result := Self;
end;

procedure TChartbundleJS.ChartbundleJS_1;
begin
  FPack.Add('<script>'+#13);
  FPack.add('/*!');
  FPack.add(' * Chart.js');
  FPack.add(' * http://chartjs.org/');
  FPack.add(' * Version: 2.7.2');
  FPack.add(' *');
  FPack.add(' * Copyright 2018 Chart.js Contributors');
  FPack.add(' * Released under the MIT license');
  FPack.add(' * https://github.com/chartjs/Chart.js/blob/master/LICENSE.md');
  FPack.add(' */');
  FPack.add('(function(f){if(typeof exports==="object"&&typeof module!=="undefined"){module.exports=f()}else if(typeof define==="function"&&define.amd){define([],f)}else{var g;if(typeof window!=="undefined"){g=window}');
  FPack.add('else if(typeof global!=="undefined"){g=global}else if(typeof self!=="undefined"){g=self}else{g=this}g.Chart = f()}})(function(){var define,module,exports;return (function(){function e(t,n,r)');
  FPack.add('{function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module ''"+o+"''");throw f.code="MODULE_NOT_FOUND",f}');
  FPack.add('var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;');
  FPack.add('o++)s(r[o]);return s}return e})()({1:[function(require,module,exports){');
  FPack.add('/* MIT license */');
  FPack.add('var colorNames = require(5);');
  FPack.add('');
  FPack.add('module.exports = {');
  FPack.add('   getRgba: getRgba,');
  FPack.add('   getHsla: getHsla,');
  FPack.add('   getRgb: getRgb,');
  FPack.add('   getHsl: getHsl,');
  FPack.add('   getHwb: getHwb,');
  FPack.add('   getAlpha: getAlpha,');
  FPack.add('');
  FPack.add('   hexString: hexString,');
  FPack.add('   rgbString: rgbString,');
  FPack.add('   rgbaString: rgbaString,');
  FPack.add('   percentString: percentString,');
  FPack.add('   percentaString: percentaString,');
  FPack.add('   hslString: hslString,');
  FPack.add('   hslaString: hslaString,');
  FPack.add('   hwbString: hwbString,');
  FPack.add('   keyword: keyword');
  FPack.add('}');
  FPack.add('');
  FPack.add('function getRgba(string) {');
  FPack.add('   if (!string) {');
  FPack.add('      return;');
  FPack.add('   }');
  FPack.add('   var abbr =  /^#([a-fA-F0-9]{3})$/i,');
  FPack.add('       hex =  /^#([a-fA-F0-9]{6})$/i,');
  FPack.add('       rgba = /^rgba?\(\s*([+-]?\d+)\s*,\s*([+-]?\d+)\s*,\s*([+-]?\d+)\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)$/i,');
  FPack.add('       per = /^rgba?\(\s*([+-]?[\d\.]+)\%\s*,\s*([+-]?[\d\.]+)\%\s*,\s*([+-]?[\d\.]+)\%\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)$/i,');
  FPack.add('       keyword = /(\w+)/;');
  FPack.add('');
  FPack.add('   var rgb = [0, 0, 0],');
  FPack.add('       a = 1,');
  FPack.add('       match = string.match(abbr);');
  FPack.add('   if (match) {');
  FPack.add('      match = match[1];');
  FPack.add('      for (var i = 0; i < rgb.length; i++) {');
  FPack.add('         rgb[i] = parseInt(match[i] + match[i], 16);');
  FPack.add('      }');
  FPack.add('   }');
  FPack.add('   else if (match = string.match(hex)) {');
  FPack.add('      match = match[1];');
  FPack.add('      for (var i = 0; i < rgb.length; i++) {');
  FPack.add('         rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);');
  FPack.add('      }');
  FPack.add('   }');
  FPack.add('   else if (match = string.match(rgba)) {');
  FPack.add('      for (var i = 0; i < rgb.length; i++) {');
  FPack.add('         rgb[i] = parseInt(match[i + 1]);');
  FPack.add('      }');
  FPack.add('      a = parseFloat(match[4]);');
  FPack.add('   }');
  FPack.add('   else if (match = string.match(per)) {');
  FPack.add('      for (var i = 0; i < rgb.length; i++) {');
  FPack.add('         rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);');
  FPack.add('      }');
  FPack.add('      a = parseFloat(match[4]);');
  FPack.add('   }');
  FPack.add('   else if (match = string.match(keyword)) {');
  FPack.add('      if (match[1] == "transparent") {');
  FPack.add('         return [0, 0, 0, 0];');
  FPack.add('      }');
  FPack.add('      rgb = colorNames[match[1]];');
  FPack.add('      if (!rgb) {');
  FPack.add('         return;');
  FPack.add('      }');
  FPack.add('   }');
  FPack.add('');
  FPack.add('   for (var i = 0; i < rgb.length; i++) {');
  FPack.add('      rgb[i] = scale(rgb[i], 0, 255);');
  FPack.add('   }');
  FPack.add('   if (!a && a != 0) {');
  FPack.add('      a = 1;');
  FPack.add('   }');
  FPack.add('   else {');
  FPack.add('      a = scale(a, 0, 1);');
  FPack.add('   }');
  FPack.add('   rgb[3] = a;');
  FPack.add('   return rgb;');
  FPack.add('}');
  FPack.add('');
  FPack.add('function getHsla(string) {');
  FPack.add('   if (!string) {');
  FPack.add('      return;');
  FPack.add('   }');
  FPack.add('   var hsl = /^hsla?\(\s*([+-]?\d+)(?:deg)?\s*,\s*([+-]?[\d\.]+)%\s*,\s*([+-]?[\d\.]+)%\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)/;');
  FPack.add('   var match = string.match(hsl);');
  FPack.add('   if (match) {');
  FPack.add('      var alpha = parseFloat(match[4]);');
  FPack.add('      var h = scale(parseInt(match[1]), 0, 360),');
  FPack.add('          s = scale(parseFloat(match[2]), 0, 100),');
  FPack.add('          l = scale(parseFloat(match[3]), 0, 100),');
  FPack.add('          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);');
  FPack.add('      return [h, s, l, a];');
  FPack.add('   }');
  FPack.add('}');
  FPack.add('');
  FPack.add('function getHwb(string) {');
  FPack.add('   if (!string) {');
  FPack.add('      return;');
  FPack.add('   }');
  FPack.add('   var hwb = /^hwb\(\s*([+-]?\d+)(?:deg)?\s*,\s*([+-]?[\d\.]+)%\s*,\s*([+-]?[\d\.]+)%\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)/;');
  FPack.add('   var match = string.match(hwb);');
  FPack.add('   if (match) {');
  FPack.add('    var alpha = parseFloat(match[4]);');
  FPack.add('      var h = scale(parseInt(match[1]), 0, 360),');
  FPack.add('          w = scale(parseFloat(match[2]), 0, 100),');
  FPack.add('          b = scale(parseFloat(match[3]), 0, 100),');
  FPack.add('          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);');
  FPack.add('      return [h, w, b, a];');
  FPack.add('   }');
  FPack.add('}');
  FPack.add('');
  FPack.add('function getRgb(string) {');
  FPack.add('   var rgba = getRgba(string);');
  FPack.add('   return rgba && rgba.slice(0, 3);');
  FPack.add('}');
  FPack.add('');
  FPack.add('function getHsl(string) {');
  FPack.add('  var hsla = getHsla(string);');
  FPack.add('  return hsla && hsla.slice(0, 3);');
  FPack.add('}');
  FPack.add('');
  FPack.add('function getAlpha(string) {');
  FPack.add('   var vals = getRgba(string);');
  FPack.add('   if (vals) {');
  FPack.add('      return vals[3];');
  FPack.add('   }');
  FPack.add('   else if (vals = getHsla(string)) {');
  FPack.add('      return vals[3];');
  FPack.add('   }');
  FPack.add('   else if (vals = getHwb(string)) {');
  FPack.add('      return vals[3];');
  FPack.add('   }');
  FPack.add('}');
  FPack.add('');
  FPack.add('// generators');
  FPack.add('function hexString(rgb) {');
  FPack.add('   return "#" + hexDouble(rgb[0]) + hexDouble(rgb[1])');
  FPack.add('              + hexDouble(rgb[2]);');
  FPack.add('}');
  FPack.add('');
  FPack.add('function rgbString(rgba, alpha) {');
  FPack.add('   if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {');
  FPack.add('      return rgbaString(rgba, alpha);');
  FPack.add('   }');
  FPack.add('   return "rgb(" + rgba[0] + ", " + rgba[1] + ", " + rgba[2] + ")";');
  FPack.add('}');
  FPack.add('');
  FPack.add('function rgbaString(rgba, alpha) {');
  FPack.add('   if (alpha === undefined) {');
  FPack.add('      alpha = (rgba[3] !== undefined ? rgba[3] : 1);');
  FPack.add('   }');
  FPack.add('   return "rgba(" + rgba[0] + ", " + rgba[1] + ", " + rgba[2]');
  FPack.add('           + ", " + alpha + ")";');
  FPack.add('}');
  FPack.add('');
  FPack.add('function percentString(rgba, alpha) {');
  FPack.add('   if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {');
  FPack.add('      return percentaString(rgba, alpha);');
  FPack.add('   }');
  FPack.add('   var r = Math.round(rgba[0]/255 * 100),');
  FPack.add('       g = Math.round(rgba[1]/255 * 100),');
  FPack.add('       b = Math.round(rgba[2]/255 * 100);');
  FPack.add('');
  FPack.add('   return "rgb(" + r + "%, " + g + "%, " + b + "%)";');
  FPack.add('}');
  FPack.add('');
  FPack.add('function percentaString(rgba, alpha) {');
  FPack.add('   var r = Math.round(rgba[0]/255 * 100),');
  FPack.add('       g = Math.round(rgba[1]/255 * 100),');
  FPack.add('       b = Math.round(rgba[2]/255 * 100);');
  FPack.add('   return "rgba(" + r + "%, " + g + "%, " + b + "%, " + (alpha || rgba[3] || 1) + ")";');
  FPack.add('}');
  FPack.add('');
  FPack.add('function hslString(hsla, alpha) {');
  FPack.add('   if (alpha < 1 || (hsla[3] && hsla[3] < 1)) {');
  FPack.add('      return hslaString(hsla, alpha);');
  FPack.add('   }');
  FPack.add('   return "hsl(" + hsla[0] + ", " + hsla[1] + "%, " + hsla[2] + "%)";');
  FPack.add('}');
  FPack.add('');
  FPack.add('function hslaString(hsla, alpha) {');
  FPack.add('   if (alpha === undefined) {');
  FPack.add('      alpha = (hsla[3] !== undefined ? hsla[3] : 1);');
  FPack.add('   }');
  FPack.add('   return "hsla(" + hsla[0] + ", " + hsla[1] + "%, " + hsla[2] + "%, "');
  FPack.add('           + alpha + ")";');
  FPack.add('}');
  FPack.add('');
  FPack.add('// hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax');
  FPack.add('// (hwb have alpha optional & 1 is default value)');
  FPack.add('function hwbString(hwb, alpha) {');
  FPack.add('   if (alpha === undefined) {');
  FPack.add('      alpha = (hwb[3] !== undefined ? hwb[3] : 1);');
  FPack.add('   }');
  FPack.add('   return "hwb(" + hwb[0] + ", " + hwb[1] + "%, " + hwb[2] + "%"');
  FPack.add('           + (alpha !== undefined && alpha !== 1 ? ", " + alpha : "") + ")";');
  FPack.add('}');
  FPack.add('');
  FPack.add('function keyword(rgb) {');
  FPack.add('  return reverseNames[rgb.slice(0, 3)];');
  FPack.add('}');
  FPack.add('');
  FPack.add('// helpers');
  FPack.add('function scale(num, min, max) {');
  FPack.add('   return Math.min(Math.max(min, num), max);');
  FPack.add('}');
  FPack.add('');
  FPack.add('function hexDouble(num) {');
  FPack.add('  var str = num.toString(16).toUpperCase();');
  FPack.add('  return (str.length < 2) ? "0" + str : str;');
  FPack.add('}');
  FPack.add('');
  FPack.add('');
  FPack.add('//create a list of reverse color names');
  FPack.add('var reverseNames = {};');
  FPack.add('for (var name in colorNames) {');
  FPack.add('   reverseNames[colorNames[name]] = name;');
  FPack.add('}');
  FPack.add('');
  FPack.add('},{"5":5}],2:[function(require,module,exports){');
  FPack.add('/* MIT license */');
  FPack.add('var convert = require(4);');
  FPack.add('var string = require(1);');
  FPack.add('');
  FPack.add('var Color = function (obj) {');
  FPack.add('	if (obj instanceof Color) {');
  FPack.add('		return obj;');
  FPack.add('	}');
  FPack.add('	if (!(this instanceof Color)) {');
  FPack.add('		return new Color(obj);');
  FPack.add('	}');
  FPack.add('');
  FPack.add('	this.valid = false;');
  FPack.add('	this.values = {');
  FPack.add('		rgb: [0, 0, 0],');
  FPack.add('		hsl: [0, 0, 0],');
  FPack.add('		hsv: [0, 0, 0],');
  FPack.add('		hwb: [0, 0, 0],');
  FPack.add('		cmyk: [0, 0, 0, 0],');
  FPack.add('		alpha: 1');
  FPack.add('	};');
  FPack.add('');
  FPack.add('	// parse Color() argument');
  FPack.add('	var vals;');
  FPack.add('	if (typeof obj === ''string'') {');
  FPack.add('		vals = string.getRgba(obj);');
  FPack.add('		if (vals) {');
  FPack.add('			this.setValues(''rgb'', vals);');
  FPack.add('		} else if (vals = string.getHsla(obj)) {');
  FPack.add('			this.setValues(''hsl'', vals);');
  FPack.add('		} else if (vals = string.getHwb(obj)) {');
  FPack.add('			this.setValues(''hwb'', vals);');
  FPack.add('		}');
  FPack.add('	} else if (typeof obj === ''object'') {');
  FPack.add('		vals = obj;');
  FPack.add('		if (vals.r !== undefined || vals.red !== undefined) {');
  FPack.add('			this.setValues(''rgb'', vals);');
  FPack.add('		} else if (vals.l !== undefined || vals.lightness !== undefined) {');
  FPack.add('			this.setValues(''hsl'', vals);');
  FPack.add('		} else if (vals.v !== undefined || vals.value !== undefined) {');
  FPack.add('			this.setValues(''hsv'', vals);');
  FPack.add('		} else if (vals.w !== undefined || vals.whiteness !== undefined) {');
  FPack.add('			this.setValues(''hwb'', vals);');
  FPack.add('		} else if (vals.c !== undefined || vals.cyan !== undefined) {');
  FPack.add('			this.setValues(''cmyk'', vals);');
  FPack.add('		}');
  FPack.add('	}');
  FPack.add('};');
  FPack.add('');
  FPack.add('Color.prototype = {');
  FPack.add('	isValid: function () {');
  FPack.add('		return this.valid;');
  FPack.add('	},');
  FPack.add('	rgb: function () {');
  FPack.add('		return this.setSpace(''rgb'', arguments);');
  FPack.add('	},');
  FPack.add('	hsl: function () {');
  FPack.add('		return this.setSpace(''hsl'', arguments);');
  FPack.add('	},');
  FPack.add('	hsv: function () {');
  FPack.add('		return this.setSpace(''hsv'', arguments);');
  FPack.add('	},');
  FPack.add('	hwb: function () {');
  FPack.add('		return this.setSpace(''hwb'', arguments);');
  FPack.add('	},');
  FPack.add('	cmyk: function () {');
  FPack.add('		return this.setSpace(''cmyk'', arguments);');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	rgbArray: function () {');
  FPack.add('		return this.values.rgb;');
  FPack.add('	},');
  FPack.add('	hslArray: function () {');
  FPack.add('		return this.values.hsl;');
  FPack.add('	},');
  FPack.add('	hsvArray: function () {');
  FPack.add('		return this.values.hsv;');
  FPack.add('	},');
  FPack.add('	hwbArray: function () {');
  FPack.add('		var values = this.values;');
  FPack.add('		if (values.alpha !== 1) {');
  FPack.add('			return values.hwb.concat([values.alpha]);');
  FPack.add('		}');
  FPack.add('		return values.hwb;');
  FPack.add('	},');
  FPack.add('	cmykArray: function () {');
  FPack.add('		return this.values.cmyk;');
  FPack.add('	},');
  FPack.add('	rgbaArray: function () {');
  FPack.add('		var values = this.values;');
  FPack.add('		return values.rgb.concat([values.alpha]);');
  FPack.add('	},');
  FPack.add('	hslaArray: function () {');
  FPack.add('		var values = this.values;');
  FPack.add('		return values.hsl.concat([values.alpha]);');
  FPack.add('	},');
  FPack.add('	alpha: function (val) {');
  FPack.add('		if (val === undefined) {');
end;

procedure TChartbundleJS.ChartbundleJS_2;
begin
  FPack.add('			return this.values.alpha;');
  FPack.add('		}');
  FPack.add('		this.setValues(''alpha'', val);');
  FPack.add('		return this;');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	red: function (val) {');
  FPack.add('		return this.setChannel(''rgb'', 0, val);');
  FPack.add('	},');
  FPack.add('	green: function (val) {');
  FPack.add('		return this.setChannel(''rgb'', 1, val);');
  FPack.add('	},');
  FPack.add('	blue: function (val) {');
  FPack.add('		return this.setChannel(''rgb'', 2, val);');
  FPack.add('	},');
  FPack.add('	hue: function (val) {');
  FPack.add('		if (val) {');
  FPack.add('			val %= 360;');
  FPack.add('			val = val < 0 ? 360 + val : val;');
  FPack.add('		}');
  FPack.add('		return this.setChannel(''hsl'', 0, val);');
  FPack.add('	},');
  FPack.add('	saturation: function (val) {');
  FPack.add('		return this.setChannel(''hsl'', 1, val);');
  FPack.add('	},');
  FPack.add('	lightness: function (val) {');
  FPack.add('		return this.setChannel(''hsl'', 2, val);');
  FPack.add('	},');
  FPack.add('	saturationv: function (val) {');
  FPack.add('		return this.setChannel(''hsv'', 1, val);');
  FPack.add('	},');
  FPack.add('	whiteness: function (val) {');
  FPack.add('		return this.setChannel(''hwb'', 1, val);');
  FPack.add('	},');
  FPack.add('	blackness: function (val) {');
  FPack.add('		return this.setChannel(''hwb'', 2, val);');
  FPack.add('	},');
  FPack.add('	value: function (val) {');
  FPack.add('		return this.setChannel(''hsv'', 2, val);');
  FPack.add('	},');
  FPack.add('	cyan: function (val) {');
  FPack.add('		return this.setChannel(''cmyk'', 0, val);');
  FPack.add('	},');
  FPack.add('	magenta: function (val) {');
  FPack.add('		return this.setChannel(''cmyk'', 1, val);');
  FPack.add('	},');
  FPack.add('	yellow: function (val) {');
  FPack.add('		return this.setChannel(''cmyk'', 2, val);');
  FPack.add('	},');
  FPack.add('	black: function (val) {');
  FPack.add('		return this.setChannel(''cmyk'', 3, val);');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	hexString: function () {');
  FPack.add('		return string.hexString(this.values.rgb);');
  FPack.add('	},');
  FPack.add('	rgbString: function () {');
  FPack.add('		return string.rgbString(this.values.rgb, this.values.alpha);');
  FPack.add('	},');
  FPack.add('	rgbaString: function () {');
  FPack.add('		return string.rgbaString(this.values.rgb, this.values.alpha);');
  FPack.add('	},');
  FPack.add('	percentString: function () {');
  FPack.add('		return string.percentString(this.values.rgb, this.values.alpha);');
  FPack.add('	},');
  FPack.add('	hslString: function () {');
  FPack.add('		return string.hslString(this.values.hsl, this.values.alpha);');
  FPack.add('	},');
  FPack.add('	hslaString: function () {');
  FPack.add('		return string.hslaString(this.values.hsl, this.values.alpha);');
  FPack.add('	},');
  FPack.add('	hwbString: function () {');
  FPack.add('		return string.hwbString(this.values.hwb, this.values.alpha);');
  FPack.add('	},');
  FPack.add('	keyword: function () {');
  FPack.add('		return string.keyword(this.values.rgb, this.values.alpha);');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	rgbNumber: function () {');
  FPack.add('		var rgb = this.values.rgb;');
  FPack.add('		return (rgb[0] << 16) | (rgb[1] << 8) | rgb[2];');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	luminosity: function () {');
  FPack.add('		// http://www.w3.org/TR/WCAG20/#relativeluminancedef');
  FPack.add('		var rgb = this.values.rgb;');
  FPack.add('		var lum = [];');
  FPack.add('		for (var i = 0; i < rgb.length; i++) {');
  FPack.add('			var chan = rgb[i] / 255;');
  FPack.add('			lum[i] = (chan <= 0.03928) ? chan / 12.92 : Math.pow(((chan + 0.055) / 1.055), 2.4);');
  FPack.add('		}');
  FPack.add('		return 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	contrast: function (color2) {');
  FPack.add('		// http://www.w3.org/TR/WCAG20/#contrast-ratiodef');
  FPack.add('		var lum1 = this.luminosity();');
  FPack.add('		var lum2 = color2.luminosity();');
  FPack.add('		if (lum1 > lum2) {');
  FPack.add('			return (lum1 + 0.05) / (lum2 + 0.05);');
  FPack.add('		}');
  FPack.add('		return (lum2 + 0.05) / (lum1 + 0.05);');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	level: function (color2) {');
  FPack.add('		var contrastRatio = this.contrast(color2);');
  FPack.add('		if (contrastRatio >= 7.1) {');
  FPack.add('			return ''AAA'';');
  FPack.add('		}');
  FPack.add('');
  FPack.add('		return (contrastRatio >= 4.5) ? ''AA'' : '''';');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	dark: function () {');
  FPack.add('		// YIQ equation from http://24ways.org/2010/calculating-color-contrast');
  FPack.add('		var rgb = this.values.rgb;');
  FPack.add('		var yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;');
  FPack.add('		return yiq < 128;');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	light: function () {');
  FPack.add('		return !this.dark();');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	negate: function () {');
  FPack.add('		var rgb = [];');
  FPack.add('		for (var i = 0; i < 3; i++) {');
  FPack.add('			rgb[i] = 255 - this.values.rgb[i];');
  FPack.add('		}');
  FPack.add('		this.setValues(''rgb'', rgb);');
  FPack.add('		return this;');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	lighten: function (ratio) {');
  FPack.add('		var hsl = this.values.hsl;');
  FPack.add('		hsl[2] += hsl[2] * ratio;');
  FPack.add('		this.setValues(''hsl'', hsl);');
  FPack.add('		return this;');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	darken: function (ratio) {');
  FPack.add('		var hsl = this.values.hsl;');
  FPack.add('		hsl[2] -= hsl[2] * ratio;');
  FPack.add('		this.setValues(''hsl'', hsl);');
  FPack.add('		return this;');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	saturate: function (ratio) {');
  FPack.add('		var hsl = this.values.hsl;');
  FPack.add('		hsl[1] += hsl[1] * ratio;');
  FPack.add('		this.setValues(''hsl'', hsl);');
  FPack.add('		return this;');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	desaturate: function (ratio) {');
  FPack.add('		var hsl = this.values.hsl;');
  FPack.add('		hsl[1] -= hsl[1] * ratio;');
  FPack.add('		this.setValues(''hsl'', hsl);');
  FPack.add('		return this;');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	whiten: function (ratio) {');
  FPack.add('		var hwb = this.values.hwb;');
  FPack.add('		hwb[1] += hwb[1] * ratio;');
  FPack.add('		this.setValues(''hwb'', hwb);');
  FPack.add('		return this;');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	blacken: function (ratio) {');
  FPack.add('		var hwb = this.values.hwb;');
  FPack.add('		hwb[2] += hwb[2] * ratio;');
  FPack.add('		this.setValues(''hwb'', hwb);');
  FPack.add('		return this;');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	greyscale: function () {');
  FPack.add('		var rgb = this.values.rgb;');
  FPack.add('		// http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale');
  FPack.add('		var val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;');
  FPack.add('		this.setValues(''rgb'', [val, val, val]);');
  FPack.add('		return this;');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	clearer: function (ratio) {');
  FPack.add('		var alpha = this.values.alpha;');
  FPack.add('		this.setValues(''alpha'', alpha - (alpha * ratio));');
  FPack.add('		return this;');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	opaquer: function (ratio) {');
  FPack.add('		var alpha = this.values.alpha;');
  FPack.add('		this.setValues(''alpha'', alpha + (alpha * ratio));');
  FPack.add('		return this;');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	rotate: function (degrees) {');
  FPack.add('		var hsl = this.values.hsl;');
  FPack.add('		var hue = (hsl[0] + degrees) % 360;');
  FPack.add('		hsl[0] = hue < 0 ? 360 + hue : hue;');
  FPack.add('		this.setValues(''hsl'', hsl);');
  FPack.add('		return this;');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	/**');
  FPack.add('	 * Ported from sass implementation in C');
  FPack.add('	 * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209');
  FPack.add('	 */');
  FPack.add('	mix: function (mixinColor, weight) {');
  FPack.add('		var color1 = this;');
  FPack.add('		var color2 = mixinColor;');
  FPack.add('		var p = weight === undefined ? 0.5 : weight;');
  FPack.add('');
  FPack.add('		var w = 2 * p - 1;');
  FPack.add('		var a = color1.alpha() - color2.alpha();');
  FPack.add('');
  FPack.add('		var w1 = (((w * a === -1) ? w : (w + a) / (1 + w * a)) + 1) / 2.0;');
  FPack.add('		var w2 = 1 - w1;');
  FPack.add('');
  FPack.add('		return this');
  FPack.add('			.rgb(');
  FPack.add('				w1 * color1.red() + w2 * color2.red(),');
  FPack.add('				w1 * color1.green() + w2 * color2.green(),');
  FPack.add('				w1 * color1.blue() + w2 * color2.blue()');
  FPack.add('			)');
  FPack.add('			.alpha(color1.alpha() * p + color2.alpha() * (1 - p));');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	toJSON: function () {');
  FPack.add('		return this.rgb();');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	clone: function () {');
  FPack.add('		// NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,');
  FPack.add('		// making the final build way to big to embed in Chart.js. So let''s do it manually,');
  FPack.add('		// assuming that values to clone are 1 dimension arrays containing only numbers,');
  FPack.add('		// except ''alpha'' which is a number.');
  FPack.add('		var result = new Color();');
  FPack.add('		var source = this.values;');
  FPack.add('		var target = result.values;');
  FPack.add('		var value, type;');
  FPack.add('');
  FPack.add('		for (var prop in source) {');
  FPack.add('			if (source.hasOwnProperty(prop)) {');
  FPack.add('				value = source[prop];');
  FPack.add('				type = ({}).toString.call(value);');
  FPack.add('				if (type === ''[object Array]'') {');
  FPack.add('					target[prop] = value.slice(0);');
  FPack.add('				} else if (type === ''[object Number]'') {');
  FPack.add('					target[prop] = value;');
  FPack.add('				} else {');
  FPack.add('					console.error(''unexpected color value:'', value);');
  FPack.add('				}');
  FPack.add('			}');
  FPack.add('		}');
  FPack.add('');
  FPack.add('		return result;');
  FPack.add('	}');
  FPack.add('};');
  FPack.add('');
  FPack.add('Color.prototype.spaces = {');
  FPack.add('	rgb: [''red'', ''green'', ''blue''],');
  FPack.add('	hsl: [''hue'', ''saturation'', ''lightness''],');
  FPack.add('	hsv: [''hue'', ''saturation'', ''value''],');
  FPack.add('	hwb: [''hue'', ''whiteness'', ''blackness''],');
  FPack.add('	cmyk: [''cyan'', ''magenta'', ''yellow'', ''black'']');
  FPack.add('};');
  FPack.add('');
  FPack.add('Color.prototype.maxes = {');
  FPack.add('	rgb: [255, 255, 255],');
  FPack.add('	hsl: [360, 100, 100],');
  FPack.add('	hsv: [360, 100, 100],');
  FPack.add('	hwb: [360, 100, 100],');
  FPack.add('	cmyk: [100, 100, 100, 100]');
  FPack.add('};');
  FPack.add('');
  FPack.add('Color.prototype.getValues = function (space) {');
  FPack.add('	var values = this.values;');
  FPack.add('	var vals = {};');
  FPack.add('');
  FPack.add('	for (var i = 0; i < space.length; i++) {');
  FPack.add('		vals[space.charAt(i)] = values[space][i];');
  FPack.add('	}');
  FPack.add('');
  FPack.add('	if (values.alpha !== 1) {');
  FPack.add('		vals.a = values.alpha;');
  FPack.add('	}');
  FPack.add('');
  FPack.add('	// {r: 255, g: 255, b: 255, a: 0.4}');
  FPack.add('	return vals;');
  FPack.add('};');
  FPack.add('');
  FPack.add('Color.prototype.setValues = function (space, vals) {');
  FPack.add('	var values = this.values;');
  FPack.add('	var spaces = this.spaces;');
  FPack.add('	var maxes = this.maxes;');
  FPack.add('	var alpha = 1;');
  FPack.add('	var i;');
  FPack.add('');
  FPack.add('	this.valid = true;');
  FPack.add('');
  FPack.add('	if (space === ''alpha'') {');
  FPack.add('		alpha = vals;');
  FPack.add('	} else if (vals.length) {');
  FPack.add('		// [10, 10, 10]');
  FPack.add('		values[space] = vals.slice(0, space.length);');
  FPack.add('		alpha = vals[space.length];');
  FPack.add('	} else if (vals[space.charAt(0)] !== undefined) {');
  FPack.add('		// {r: 10, g: 10, b: 10}');
  FPack.add('		for (i = 0; i < space.length; i++) {');
  FPack.add('			values[space][i] = vals[space.charAt(i)];');
  FPack.add('		}');
  FPack.add('');
  FPack.add('		alpha = vals.a;');
  FPack.add('	} else if (vals[spaces[space][0]] !== undefined) {');
  FPack.add('		// {red: 10, green: 10, blue: 10}');
  FPack.add('		var chans = spaces[space];');
  FPack.add('');
  FPack.add('		for (i = 0; i < space.length; i++) {');
  FPack.add('			values[space][i] = vals[chans[i]];');
  FPack.add('		}');
  FPack.add('');
  FPack.add('		alpha = vals.alpha;');
  FPack.add('	}');
  FPack.add('');
  FPack.add('	values.alpha = Math.max(0, Math.min(1, (alpha === undefined ? values.alpha : alpha)));');
  FPack.add('');
  FPack.add('	if (space === ''alpha'') {');
  FPack.add('		return false;');
  FPack.add('	}');
  FPack.add('');
  FPack.add('	var capped;');
  FPack.add('');
  FPack.add('	// cap values of the space prior converting all values');
  FPack.add('	for (i = 0; i < space.length; i++) {');
  FPack.add('		capped = Math.max(0, Math.min(maxes[space][i], values[space][i]));');
  FPack.add('		values[space][i] = Math.round(capped);');
end;

procedure TChartbundleJS.ChartbundleJS_3;
begin
  FPack.add('	}');
  FPack.add('');
  FPack.add('	// convert to all the other color spaces');
  FPack.add('	for (var sname in spaces) {');
  FPack.add('		if (sname !== space) {');
  FPack.add('			values[sname] = convert[space][sname](values[space]);');
  FPack.add('		}');
  FPack.add('	}');
  FPack.add('');
  FPack.add('	return true;');
  FPack.add('};');
  FPack.add('');
  FPack.add('Color.prototype.setSpace = function (space, args) {');
  FPack.add('	var vals = args[0];');
  FPack.add('');
  FPack.add('	if (vals === undefined) {');
  FPack.add('		// color.rgb()');
  FPack.add('		return this.getValues(space);');
  FPack.add('	}');
  FPack.add('');
  FPack.add('	// color.rgb(10, 10, 10)');
  FPack.add('	if (typeof vals === ''number'') {');
  FPack.add('		vals = Array.prototype.slice.call(args);');
  FPack.add('	}');
  FPack.add('');
  FPack.add('	this.setValues(space, vals);');
  FPack.add('	return this;');
  FPack.add('};');
  FPack.add('');
  FPack.add('Color.prototype.setChannel = function (space, index, val) {');
  FPack.add('	var svalues = this.values[space];');
  FPack.add('	if (val === undefined) {');
  FPack.add('		// color.red()');
  FPack.add('		return svalues[index];');
  FPack.add('	} else if (val === svalues[index]) {');
  FPack.add('		// color.red(color.red())');
  FPack.add('		return this;');
  FPack.add('	}');
  FPack.add('');
  FPack.add('	// color.red(100)');
  FPack.add('	svalues[index] = val;');
  FPack.add('	this.setValues(space, svalues);');
  FPack.add('');
  FPack.add('	return this;');
  FPack.add('};');
  FPack.add('');
  FPack.add('if (typeof window !== ''undefined'') {');
  FPack.add('	window.Color = Color;');
  FPack.add('}');
  FPack.add('');
  FPack.add('module.exports = Color;');
  FPack.add('');
  FPack.add('},{"1":1,"4":4}],3:[function(require,module,exports){');
  FPack.add('/* MIT license */');
  FPack.add('');
  FPack.add('module.exports = {');
  FPack.add('  rgb2hsl: rgb2hsl,');
  FPack.add('  rgb2hsv: rgb2hsv,');
  FPack.add('  rgb2hwb: rgb2hwb,');
  FPack.add('  rgb2cmyk: rgb2cmyk,');
  FPack.add('  rgb2keyword: rgb2keyword,');
  FPack.add('  rgb2xyz: rgb2xyz,');
  FPack.add('  rgb2lab: rgb2lab,');
  FPack.add('  rgb2lch: rgb2lch,');
  FPack.add('');
  FPack.add('  hsl2rgb: hsl2rgb,');
  FPack.add('  hsl2hsv: hsl2hsv,');
  FPack.add('  hsl2hwb: hsl2hwb,');
  FPack.add('  hsl2cmyk: hsl2cmyk,');
  FPack.add('  hsl2keyword: hsl2keyword,');
  FPack.add('');
  FPack.add('  hsv2rgb: hsv2rgb,');
  FPack.add('  hsv2hsl: hsv2hsl,');
  FPack.add('  hsv2hwb: hsv2hwb,');
  FPack.add('  hsv2cmyk: hsv2cmyk,');
  FPack.add('  hsv2keyword: hsv2keyword,');
  FPack.add('');
  FPack.add('  hwb2rgb: hwb2rgb,');
  FPack.add('  hwb2hsl: hwb2hsl,');
  FPack.add('  hwb2hsv: hwb2hsv,');
  FPack.add('  hwb2cmyk: hwb2cmyk,');
  FPack.add('  hwb2keyword: hwb2keyword,');
  FPack.add('');
  FPack.add('  cmyk2rgb: cmyk2rgb,');
  FPack.add('  cmyk2hsl: cmyk2hsl,');
  FPack.add('  cmyk2hsv: cmyk2hsv,');
  FPack.add('  cmyk2hwb: cmyk2hwb,');
  FPack.add('  cmyk2keyword: cmyk2keyword,');
  FPack.add('');
  FPack.add('  keyword2rgb: keyword2rgb,');
  FPack.add('  keyword2hsl: keyword2hsl,');
  FPack.add('  keyword2hsv: keyword2hsv,');
  FPack.add('  keyword2hwb: keyword2hwb,');
  FPack.add('  keyword2cmyk: keyword2cmyk,');
  FPack.add('  keyword2lab: keyword2lab,');
  FPack.add('  keyword2xyz: keyword2xyz,');
  FPack.add('');
  FPack.add('  xyz2rgb: xyz2rgb,');
  FPack.add('  xyz2lab: xyz2lab,');
  FPack.add('  xyz2lch: xyz2lch,');
  FPack.add('');
  FPack.add('  lab2xyz: lab2xyz,');
  FPack.add('  lab2rgb: lab2rgb,');
  FPack.add('  lab2lch: lab2lch,');
  FPack.add('');
  FPack.add('  lch2lab: lch2lab,');
  FPack.add('  lch2xyz: lch2xyz,');
  FPack.add('  lch2rgb: lch2rgb');
  FPack.add('}');
  FPack.add('');
  FPack.add('');
  FPack.add('function rgb2hsl(rgb) {');
  FPack.add('  var r = rgb[0]/255,');
  FPack.add('      g = rgb[1]/255,');
  FPack.add('      b = rgb[2]/255,');
  FPack.add('      min = Math.min(r, g, b),');
  FPack.add('      max = Math.max(r, g, b),');
  FPack.add('      delta = max - min,');
  FPack.add('      h, s, l;');
  FPack.add('');
  FPack.add('  if (max == min)');
  FPack.add('    h = 0;');
  FPack.add('  else if (r == max)');
  FPack.add('    h = (g - b) / delta;');
  FPack.add('  else if (g == max)');
  FPack.add('    h = 2 + (b - r) / delta;');
  FPack.add('  else if (b == max)');
  FPack.add('    h = 4 + (r - g)/ delta;');
  FPack.add('');
  FPack.add('  h = Math.min(h * 60, 360);');
  FPack.add('');
  FPack.add('  if (h < 0)');
  FPack.add('    h += 360;');
  FPack.add('');
  FPack.add('  l = (min + max) / 2;');
  FPack.add('');
  FPack.add('  if (max == min)');
  FPack.add('    s = 0;');
  FPack.add('  else if (l <= 0.5)');
  FPack.add('    s = delta / (max + min);');
  FPack.add('  else');
  FPack.add('    s = delta / (2 - max - min);');
  FPack.add('');
  FPack.add('  return [h, s * 100, l * 100];');
  FPack.add('}');
  FPack.add('');
  FPack.add('function rgb2hsv(rgb) {');
  FPack.add('  var r = rgb[0],');
  FPack.add('      g = rgb[1],');
  FPack.add('      b = rgb[2],');
  FPack.add('      min = Math.min(r, g, b),');
  FPack.add('      max = Math.max(r, g, b),');
  FPack.add('      delta = max - min,');
  FPack.add('      h, s, v;');
  FPack.add('');
  FPack.add('  if (max == 0)');
  FPack.add('    s = 0;');
  FPack.add('  else');
  FPack.add('    s = (delta/max * 1000)/10;');
  FPack.add('');
  FPack.add('  if (max == min)');
  FPack.add('    h = 0;');
  FPack.add('  else if (r == max)');
  FPack.add('    h = (g - b) / delta;');
  FPack.add('  else if (g == max)');
  FPack.add('    h = 2 + (b - r) / delta;');
  FPack.add('  else if (b == max)');
  FPack.add('    h = 4 + (r - g) / delta;');
  FPack.add('');
  FPack.add('  h = Math.min(h * 60, 360);');
  FPack.add('');
  FPack.add('  if (h < 0)');
  FPack.add('    h += 360;');
  FPack.add('');
  FPack.add('  v = ((max / 255) * 1000) / 10;');
  FPack.add('');
  FPack.add('  return [h, s, v];');
  FPack.add('}');
  FPack.add('');
  FPack.add('function rgb2hwb(rgb) {');
  FPack.add('  var r = rgb[0],');
  FPack.add('      g = rgb[1],');
  FPack.add('      b = rgb[2],');
  FPack.add('      h = rgb2hsl(rgb)[0],');
  FPack.add('      w = 1/255 * Math.min(r, Math.min(g, b)),');
  FPack.add('      b = 1 - 1/255 * Math.max(r, Math.max(g, b));');
  FPack.add('');
  FPack.add('  return [h, w * 100, b * 100];');
  FPack.add('}');
  FPack.add('');
  FPack.add('function rgb2cmyk(rgb) {');
  FPack.add('  var r = rgb[0] / 255,');
  FPack.add('      g = rgb[1] / 255,');
  FPack.add('      b = rgb[2] / 255,');
  FPack.add('      c, m, y, k;');
  FPack.add('');
  FPack.add('  k = Math.min(1 - r, 1 - g, 1 - b);');
  FPack.add('  c = (1 - r - k) / (1 - k) || 0;');
  FPack.add('  m = (1 - g - k) / (1 - k) || 0;');
  FPack.add('  y = (1 - b - k) / (1 - k) || 0;');
  FPack.add('  return [c * 100, m * 100, y * 100, k * 100];');
  FPack.add('}');
  FPack.add('');
  FPack.add('function rgb2keyword(rgb) {');
  FPack.add('  return reverseKeywords[JSON.stringify(rgb)];');
  FPack.add('}');
  FPack.add('');
  FPack.add('function rgb2xyz(rgb) {');
  FPack.add('  var r = rgb[0] / 255,');
  FPack.add('      g = rgb[1] / 255,');
  FPack.add('      b = rgb[2] / 255;');
  FPack.add('');
  FPack.add('  // assume sRGB');
  FPack.add('  r = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);');
  FPack.add('  g = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);');
  FPack.add('  b = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);');
  FPack.add('');
  FPack.add('  var x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);');
  FPack.add('  var y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);');
  FPack.add('  var z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);');
  FPack.add('');
  FPack.add('  return [x * 100, y *100, z * 100];');
  FPack.add('}');
  FPack.add('');
  FPack.add('function rgb2lab(rgb) {');
  FPack.add('  var xyz = rgb2xyz(rgb),');
  FPack.add('        x = xyz[0],');
  FPack.add('        y = xyz[1],');
  FPack.add('        z = xyz[2],');
  FPack.add('        l, a, b;');
  FPack.add('');
  FPack.add('  x /= 95.047;');
  FPack.add('  y /= 100;');
  FPack.add('  z /= 108.883;');
  FPack.add('');
  FPack.add('  x = x > 0.008856 ? Math.pow(x, 1/3) : (7.787 * x) + (16 / 116);');
  FPack.add('  y = y > 0.008856 ? Math.pow(y, 1/3) : (7.787 * y) + (16 / 116);');
  FPack.add('  z = z > 0.008856 ? Math.pow(z, 1/3) : (7.787 * z) + (16 / 116);');
  FPack.add('');
  FPack.add('  l = (116 * y) - 16;');
  FPack.add('  a = 500 * (x - y);');
  FPack.add('  b = 200 * (y - z);');
  FPack.add('');
  FPack.add('  return [l, a, b];');
  FPack.add('}');
  FPack.add('');
  FPack.add('function rgb2lch(args) {');
  FPack.add('  return lab2lch(rgb2lab(args));');
  FPack.add('}');
  FPack.add('');
  FPack.add('function hsl2rgb(hsl) {');
  FPack.add('  var h = hsl[0] / 360,');
  FPack.add('      s = hsl[1] / 100,');
  FPack.add('      l = hsl[2] / 100,');
  FPack.add('      t1, t2, t3, rgb, val;');
  FPack.add('');
  FPack.add('  if (s == 0) {');
  FPack.add('    val = l * 255;');
  FPack.add('    return [val, val, val];');
  FPack.add('  }');
  FPack.add('');
  FPack.add('  if (l < 0.5)');
  FPack.add('    t2 = l * (1 + s);');
  FPack.add('  else');
  FPack.add('    t2 = l + s - l * s;');
  FPack.add('  t1 = 2 * l - t2;');
  FPack.add('');
  FPack.add('  rgb = [0, 0, 0];');
  FPack.add('  for (var i = 0; i < 3; i++) {');
  FPack.add('    t3 = h + 1 / 3 * - (i - 1);');
  FPack.add('    t3 < 0 && t3++;');
  FPack.add('    t3 > 1 && t3--;');
  FPack.add('');
  FPack.add('    if (6 * t3 < 1)');
  FPack.add('      val = t1 + (t2 - t1) * 6 * t3;');
  FPack.add('    else if (2 * t3 < 1)');
  FPack.add('      val = t2;');
  FPack.add('    else if (3 * t3 < 2)');
  FPack.add('      val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;');
  FPack.add('    else');
  FPack.add('      val = t1;');
  FPack.add('');
  FPack.add('    rgb[i] = val * 255;');
  FPack.add('  }');
  FPack.add('');
  FPack.add('  return rgb;');
  FPack.add('}');
  FPack.add('');
  FPack.add('function hsl2hsv(hsl) {');
  FPack.add('  var h = hsl[0],');
  FPack.add('      s = hsl[1] / 100,');
  FPack.add('      l = hsl[2] / 100,');
  FPack.add('      sv, v;');
  FPack.add('');
  FPack.add('  if(l === 0) {');
  FPack.add('      // no need to do calc on black');
  FPack.add('      // also avoids divide by 0 error');
  FPack.add('      return [0, 0, 0];');
  FPack.add('  }');
  FPack.add('');
  FPack.add('  l *= 2;');
  FPack.add('  s *= (l <= 1) ? l : 2 - l;');
  FPack.add('  v = (l + s) / 2;');
  FPack.add('  sv = (2 * s) / (l + s);');
  FPack.add('  return [h, sv * 100, v * 100];');
  FPack.add('}');
  FPack.add('');
  FPack.add('function hsl2hwb(args) {');
  FPack.add('  return rgb2hwb(hsl2rgb(args));');
  FPack.add('}');
  FPack.add('');
  FPack.add('function hsl2cmyk(args) {');
  FPack.add('  return rgb2cmyk(hsl2rgb(args));');
  FPack.add('}');
  FPack.add('');
  FPack.add('function hsl2keyword(args) {');
  FPack.add('  return rgb2keyword(hsl2rgb(args));');
  FPack.add('}');
  FPack.add('');
  FPack.add('');
  FPack.add('function hsv2rgb(hsv) {');
  FPack.add('  var h = hsv[0] / 60,');
  FPack.add('      s = hsv[1] / 100,');
  FPack.add('      v = hsv[2] / 100,');
  FPack.add('      hi = Math.floor(h) % 6;');
  FPack.add('');
  FPack.add('  var f = h - Math.floor(h),');
  FPack.add('      p = 255 * v * (1 - s),');
  FPack.add('      q = 255 * v * (1 - (s * f)),');
  FPack.add('      t = 255 * v * (1 - (s * (1 - f))),');
  FPack.add('      v = 255 * v;');
  FPack.add('');
  FPack.add('  switch(hi) {');
  FPack.add('    case 0:');
  FPack.add('      return [v, t, p];');
  FPack.add('    case 1:');
end;

procedure TChartbundleJS.ChartbundleJS_4;
begin
  FPack.add('      return [q, v, p];');
  FPack.add('    case 2:');
  FPack.add('      return [p, v, t];');
  FPack.add('    case 3:');
  FPack.add('      return [p, q, v];');
  FPack.add('    case 4:');
  FPack.add('      return [t, p, v];');
  FPack.add('    case 5:');
  FPack.add('      return [v, p, q];');
  FPack.add('  }');
  FPack.add('}');
  FPack.add('');
  FPack.add('function hsv2hsl(hsv) {');
  FPack.add('  var h = hsv[0],');
  FPack.add('      s = hsv[1] / 100,');
  FPack.add('      v = hsv[2] / 100,');
  FPack.add('      sl, l;');
  FPack.add('');
  FPack.add('  l = (2 - s) * v;');
  FPack.add('  sl = s * v;');
  FPack.add('  sl /= (l <= 1) ? l : 2 - l;');
  FPack.add('  sl = sl || 0;');
  FPack.add('  l /= 2;');
  FPack.add('  return [h, sl * 100, l * 100];');
  FPack.add('}');
  FPack.add('');
  FPack.add('function hsv2hwb(args) {');
  FPack.add('  return rgb2hwb(hsv2rgb(args))');
  FPack.add('}');
  FPack.add('');
  FPack.add('function hsv2cmyk(args) {');
  FPack.add('  return rgb2cmyk(hsv2rgb(args));');
  FPack.add('}');
  FPack.add('');
  FPack.add('function hsv2keyword(args) {');
  FPack.add('  return rgb2keyword(hsv2rgb(args));');
  FPack.add('}');
  FPack.add('');
  FPack.add('// http://dev.w3.org/csswg/css-color/#hwb-to-rgb');
  FPack.add('function hwb2rgb(hwb) {');
  FPack.add('  var h = hwb[0] / 360,');
  FPack.add('      wh = hwb[1] / 100,');
  FPack.add('      bl = hwb[2] / 100,');
  FPack.add('      ratio = wh + bl,');
  FPack.add('      i, v, f, n;');
  FPack.add('');
  FPack.add('  // wh + bl cant be > 1');
  FPack.add('  if (ratio > 1) {');
  FPack.add('    wh /= ratio;');
  FPack.add('    bl /= ratio;');
  FPack.add('  }');
  FPack.add('');
  FPack.add('  i = Math.floor(6 * h);');
  FPack.add('  v = 1 - bl;');
  FPack.add('  f = 6 * h - i;');
  FPack.add('  if ((i & 0x01) != 0) {');
  FPack.add('    f = 1 - f;');
  FPack.add('  }');
  FPack.add('  n = wh + f * (v - wh);  // linear interpolation');
  FPack.add('');
  FPack.add('  switch (i) {');
  FPack.add('    default:');
  FPack.add('    case 6:');
  FPack.add('    case 0: r = v; g = n; b = wh; break;');
  FPack.add('    case 1: r = n; g = v; b = wh; break;');
  FPack.add('    case 2: r = wh; g = v; b = n; break;');
  FPack.add('    case 3: r = wh; g = n; b = v; break;');
  FPack.add('    case 4: r = n; g = wh; b = v; break;');
  FPack.add('    case 5: r = v; g = wh; b = n; break;');
  FPack.add('  }');
  FPack.add('');
  FPack.add('  return [r * 255, g * 255, b * 255];');
  FPack.add('}');
  FPack.add('');
  FPack.add('function hwb2hsl(args) {');
  FPack.add('  return rgb2hsl(hwb2rgb(args));');
  FPack.add('}');
  FPack.add('');
  FPack.add('function hwb2hsv(args) {');
  FPack.add('  return rgb2hsv(hwb2rgb(args));');
  FPack.add('}');
  FPack.add('');
  FPack.add('function hwb2cmyk(args) {');
  FPack.add('  return rgb2cmyk(hwb2rgb(args));');
  FPack.add('}');
  FPack.add('');
  FPack.add('function hwb2keyword(args) {');
  FPack.add('  return rgb2keyword(hwb2rgb(args));');
  FPack.add('}');
  FPack.add('');
  FPack.add('function cmyk2rgb(cmyk) {');
  FPack.add('  var c = cmyk[0] / 100,');
  FPack.add('      m = cmyk[1] / 100,');
  FPack.add('      y = cmyk[2] / 100,');
  FPack.add('      k = cmyk[3] / 100,');
  FPack.add('      r, g, b;');
  FPack.add('');
  FPack.add('  r = 1 - Math.min(1, c * (1 - k) + k);');
  FPack.add('  g = 1 - Math.min(1, m * (1 - k) + k);');
  FPack.add('  b = 1 - Math.min(1, y * (1 - k) + k);');
  FPack.add('  return [r * 255, g * 255, b * 255];');
  FPack.add('}');
  FPack.add('');
  FPack.add('function cmyk2hsl(args) {');
  FPack.add('  return rgb2hsl(cmyk2rgb(args));');
  FPack.add('}');
  FPack.add('');
  FPack.add('function cmyk2hsv(args) {');
  FPack.add('  return rgb2hsv(cmyk2rgb(args));');
  FPack.add('}');
  FPack.add('');
  FPack.add('function cmyk2hwb(args) {');
  FPack.add('  return rgb2hwb(cmyk2rgb(args));');
  FPack.add('}');
  FPack.add('');
  FPack.add('function cmyk2keyword(args) {');
  FPack.add('  return rgb2keyword(cmyk2rgb(args));');
  FPack.add('}');
  FPack.add('');
  FPack.add('');
  FPack.add('function xyz2rgb(xyz) {');
  FPack.add('  var x = xyz[0] / 100,');
  FPack.add('      y = xyz[1] / 100,');
  FPack.add('      z = xyz[2] / 100,');
  FPack.add('      r, g, b;');
  FPack.add('');
  FPack.add('  r = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);');
  FPack.add('  g = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);');
  FPack.add('  b = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);');
  FPack.add('');
  FPack.add('  // assume sRGB');
  FPack.add('  r = r > 0.0031308 ? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)');
  FPack.add('    : r = (r * 12.92);');
  FPack.add('');
  FPack.add('  g = g > 0.0031308 ? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)');
  FPack.add('    : g = (g * 12.92);');
  FPack.add('');
  FPack.add('  b = b > 0.0031308 ? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)');
  FPack.add('    : b = (b * 12.92);');
  FPack.add('');
  FPack.add('  r = Math.min(Math.max(0, r), 1);');
  FPack.add('  g = Math.min(Math.max(0, g), 1);');
  FPack.add('  b = Math.min(Math.max(0, b), 1);');
  FPack.add('');
  FPack.add('  return [r * 255, g * 255, b * 255];');
  FPack.add('}');
  FPack.add('');
  FPack.add('function xyz2lab(xyz) {');
  FPack.add('  var x = xyz[0],');
  FPack.add('      y = xyz[1],');
  FPack.add('      z = xyz[2],');
  FPack.add('      l, a, b;');
  FPack.add('');
  FPack.add('  x /= 95.047;');
  FPack.add('  y /= 100;');
  FPack.add('  z /= 108.883;');
  FPack.add('');
  FPack.add('  x = x > 0.008856 ? Math.pow(x, 1/3) : (7.787 * x) + (16 / 116);');
  FPack.add('  y = y > 0.008856 ? Math.pow(y, 1/3) : (7.787 * y) + (16 / 116);');
  FPack.add('  z = z > 0.008856 ? Math.pow(z, 1/3) : (7.787 * z) + (16 / 116);');
  FPack.add('');
  FPack.add('  l = (116 * y) - 16;');
  FPack.add('  a = 500 * (x - y);');
  FPack.add('  b = 200 * (y - z);');
  FPack.add('');
  FPack.add('  return [l, a, b];');
  FPack.add('}');
  FPack.add('');
  FPack.add('function xyz2lch(args) {');
  FPack.add('  return lab2lch(xyz2lab(args));');
  FPack.add('}');
  FPack.add('');
  FPack.add('function lab2xyz(lab) {');
  FPack.add('  var l = lab[0],');
  FPack.add('      a = lab[1],');
  FPack.add('      b = lab[2],');
  FPack.add('      x, y, z, y2;');
  FPack.add('');
  FPack.add('  if (l <= 8) {');
  FPack.add('    y = (l * 100) / 903.3;');
  FPack.add('    y2 = (7.787 * (y / 100)) + (16 / 116);');
  FPack.add('  } else {');
  FPack.add('    y = 100 * Math.pow((l + 16) / 116, 3);');
  FPack.add('    y2 = Math.pow(y / 100, 1/3);');
  FPack.add('  }');
  FPack.add('');
  FPack.add('  x = x / 95.047 <= 0.008856 ? x = (95.047 * ((a / 500) + y2 - (16 / 116))) / 7.787 : 95.047 * Math.pow((a / 500) + y2, 3);');
  FPack.add('');
  FPack.add('  z = z / 108.883 <= 0.008859 ? z = (108.883 * (y2 - (b / 200) - (16 / 116))) / 7.787 : 108.883 * Math.pow(y2 - (b / 200), 3);');
  FPack.add('');
  FPack.add('  return [x, y, z];');
  FPack.add('}');
  FPack.add('');
  FPack.add('function lab2lch(lab) {');
  FPack.add('  var l = lab[0],');
  FPack.add('      a = lab[1],');
  FPack.add('      b = lab[2],');
  FPack.add('      hr, h, c;');
  FPack.add('');
  FPack.add('  hr = Math.atan2(b, a);');
  FPack.add('  h = hr * 360 / 2 / Math.PI;');
  FPack.add('  if (h < 0) {');
  FPack.add('    h += 360;');
  FPack.add('  }');
  FPack.add('  c = Math.sqrt(a * a + b * b);');
  FPack.add('  return [l, c, h];');
  FPack.add('}');
  FPack.add('');
  FPack.add('function lab2rgb(args) {');
  FPack.add('  return xyz2rgb(lab2xyz(args));');
  FPack.add('}');
  FPack.add('');
  FPack.add('function lch2lab(lch) {');
  FPack.add('  var l = lch[0],');
  FPack.add('      c = lch[1],');
  FPack.add('      h = lch[2],');
  FPack.add('      a, b, hr;');
  FPack.add('');
  FPack.add('  hr = h / 360 * 2 * Math.PI;');
  FPack.add('  a = c * Math.cos(hr);');
  FPack.add('  b = c * Math.sin(hr);');
  FPack.add('  return [l, a, b];');
  FPack.add('}');
  FPack.add('');
  FPack.add('function lch2xyz(args) {');
  FPack.add('  return lab2xyz(lch2lab(args));');
  FPack.add('}');
  FPack.add('');
  FPack.add('function lch2rgb(args) {');
  FPack.add('  return lab2rgb(lch2lab(args));');
  FPack.add('}');
  FPack.add('');
  FPack.add('function keyword2rgb(keyword) {');
  FPack.add('  return cssKeywords[keyword];');
  FPack.add('}');
  FPack.add('');
  FPack.add('function keyword2hsl(args) {');
  FPack.add('  return rgb2hsl(keyword2rgb(args));');
  FPack.add('}');
  FPack.add('');
  FPack.add('function keyword2hsv(args) {');
  FPack.add('  return rgb2hsv(keyword2rgb(args));');
  FPack.add('}');
  FPack.add('');
  FPack.add('function keyword2hwb(args) {');
  FPack.add('  return rgb2hwb(keyword2rgb(args));');
  FPack.add('}');
  FPack.add('');
  FPack.add('function keyword2cmyk(args) {');
  FPack.add('  return rgb2cmyk(keyword2rgb(args));');
  FPack.add('}');
  FPack.add('');
  FPack.add('function keyword2lab(args) {');
  FPack.add('  return rgb2lab(keyword2rgb(args));');
  FPack.add('}');
  FPack.add('');
  FPack.add('function keyword2xyz(args) {');
  FPack.add('  return rgb2xyz(keyword2rgb(args));');
  FPack.add('}');
  FPack.add('');
  FPack.add('var cssKeywords = {');
  FPack.add('  aliceblue:  [240,248,255],');
  FPack.add('  antiquewhite: [250,235,215],');
  FPack.add('  aqua: [0,255,255],');
  FPack.add('  aquamarine: [127,255,212],');
  FPack.add('  azure:  [240,255,255],');
  FPack.add('  beige:  [245,245,220],');
  FPack.add('  bisque: [255,228,196],');
  FPack.add('  black:  [0,0,0],');
  FPack.add('  blanchedalmond: [255,235,205],');
  FPack.add('  blue: [0,0,255],');
  FPack.add('  blueviolet: [138,43,226],');
  FPack.add('  brown:  [165,42,42],');
  FPack.add('  burlywood:  [222,184,135],');
  FPack.add('  cadetblue:  [95,158,160],');
  FPack.add('  chartreuse: [127,255,0],');
  FPack.add('  chocolate:  [210,105,30],');
  FPack.add('  coral:  [255,127,80],');
  FPack.add('  cornflowerblue: [100,149,237],');
  FPack.add('  cornsilk: [255,248,220],');
  FPack.add('  crimson:  [220,20,60],');
  FPack.add('  cyan: [0,255,255],');
  FPack.add('  darkblue: [0,0,139],');
  FPack.add('  darkcyan: [0,139,139],');
  FPack.add('  darkgoldenrod:  [184,134,11],');
  FPack.add('  darkgray: [169,169,169],');
  FPack.add('  darkgreen:  [0,100,0],');
  FPack.add('  darkgrey: [169,169,169],');
  FPack.add('  darkkhaki:  [189,183,107],');
  FPack.add('  darkmagenta:  [139,0,139],');
  FPack.add('  darkolivegreen: [85,107,47],');
  FPack.add('  darkorange: [255,140,0],');
  FPack.add('  darkorchid: [153,50,204],');
  FPack.add('  darkred:  [139,0,0],');
  FPack.add('  darksalmon: [233,150,122],');
  FPack.add('  darkseagreen: [143,188,143],');
  FPack.add('  darkslateblue:  [72,61,139],');
  FPack.add('  darkslategray:  [47,79,79],');
  FPack.add('  darkslategrey:  [47,79,79],');
  FPack.add('  darkturquoise:  [0,206,209],');
  FPack.add('  darkviolet: [148,0,211],');
  FPack.add('  deeppink: [255,20,147],');
  FPack.add('  deepskyblue:  [0,191,255],');
  FPack.add('  dimgray:  [105,105,105],');
  FPack.add('  dimgrey:  [105,105,105],');
  FPack.add('  dodgerblue: [30,144,255],');
  FPack.add('  firebrick:  [178,34,34],');
  FPack.add('  floralwhite:  [255,250,240],');
  FPack.add('  forestgreen:  [34,139,34],');
  FPack.add('  fuchsia:  [255,0,255],');
  FPack.add('  gainsboro:  [220,220,220],');
  FPack.add('  ghostwhite: [248,248,255],');
  FPack.add('  gold: [255,215,0],');
  FPack.add('  goldenrod:  [218,165,32],');
  FPack.add('  gray: [128,128,128],');
  FPack.add('  green:  [0,128,0],');
  FPack.add('  greenyellow:  [173,255,47],');
  FPack.add('  grey: [128,128,128],');
  FPack.add('  honeydew: [240,255,240],');
  FPack.add('  hotpink:  [255,105,180],');
  FPack.add('  indianred:  [205,92,92],');
  FPack.add('  indigo: [75,0,130],');
  FPack.add('  ivory:  [255,255,240],');
  FPack.add('  khaki:  [240,230,140],');
  FPack.add('  lavender: [230,230,250],');
  FPack.add('  lavenderblush:  [255,240,245],');
  FPack.add('  lawngreen:  [124,252,0],');
  FPack.add('  lemonchiffon: [255,250,205],');
  FPack.add('  lightblue:  [173,216,230],');
  FPack.add('  lightcoral: [240,128,128],');
  FPack.add('  lightcyan:  [224,255,255],');
  FPack.add('  lightgoldenrodyellow: [250,250,210],');
  FPack.add('  lightgray:  [211,211,211],');
  FPack.add('  lightgreen: [144,238,144],');
  FPack.add('  lightgrey:  [211,211,211],');
  FPack.add('  lightpink:  [255,182,193],');
end;

procedure TChartbundleJS.ChartbundleJS_5;
begin
  FPack.add('  lightsalmon:  [255,160,122],');
  FPack.add('  lightseagreen:  [32,178,170],');
  FPack.add('  lightskyblue: [135,206,250],');
  FPack.add('  lightslategray: [119,136,153],');
  FPack.add('  lightslategrey: [119,136,153],');
  FPack.add('  lightsteelblue: [176,196,222],');
  FPack.add('  lightyellow:  [255,255,224],');
  FPack.add('  lime: [0,255,0],');
  FPack.add('  limegreen:  [50,205,50],');
  FPack.add('  linen:  [250,240,230],');
  FPack.add('  magenta:  [255,0,255],');
  FPack.add('  maroon: [128,0,0],');
  FPack.add('  mediumaquamarine: [102,205,170],');
  FPack.add('  mediumblue: [0,0,205],');
  FPack.add('  mediumorchid: [186,85,211],');
  FPack.add('  mediumpurple: [147,112,219],');
  FPack.add('  mediumseagreen: [60,179,113],');
  FPack.add('  mediumslateblue:  [123,104,238],');
  FPack.add('  mediumspringgreen:  [0,250,154],');
  FPack.add('  mediumturquoise:  [72,209,204],');
  FPack.add('  mediumvioletred:  [199,21,133],');
  FPack.add('  midnightblue: [25,25,112],');
  FPack.add('  mintcream:  [245,255,250],');
  FPack.add('  mistyrose:  [255,228,225],');
  FPack.add('  moccasin: [255,228,181],');
  FPack.add('  navajowhite:  [255,222,173],');
  FPack.add('  navy: [0,0,128],');
  FPack.add('  oldlace:  [253,245,230],');
  FPack.add('  olive:  [128,128,0],');
  FPack.add('  olivedrab:  [107,142,35],');
  FPack.add('  orange: [255,165,0],');
  FPack.add('  orangered:  [255,69,0],');
  FPack.add('  orchid: [218,112,214],');
  FPack.add('  palegoldenrod:  [238,232,170],');
  FPack.add('  palegreen:  [152,251,152],');
  FPack.add('  paleturquoise:  [175,238,238],');
  FPack.add('  palevioletred:  [219,112,147],');
  FPack.add('  papayawhip: [255,239,213],');
  FPack.add('  peachpuff:  [255,218,185],');
  FPack.add('  peru: [205,133,63],');
  FPack.add('  pink: [255,192,203],');
  FPack.add('  plum: [221,160,221],');
  FPack.add('  powderblue: [176,224,230],');
  FPack.add('  purple: [128,0,128],');
  FPack.add('  rebeccapurple: [102, 51, 153],');
  FPack.add('  red:  [255,0,0],');
  FPack.add('  rosybrown:  [188,143,143],');
  FPack.add('  royalblue:  [65,105,225],');
  FPack.add('  saddlebrown:  [139,69,19],');
  FPack.add('  salmon: [250,128,114],');
  FPack.add('  sandybrown: [244,164,96],');
  FPack.add('  seagreen: [46,139,87],');
  FPack.add('  seashell: [255,245,238],');
  FPack.add('  sienna: [160,82,45],');
  FPack.add('  silver: [192,192,192],');
  FPack.add('  skyblue:  [135,206,235],');
  FPack.add('  slateblue:  [106,90,205],');
  FPack.add('  slategray:  [112,128,144],');
  FPack.add('  slategrey:  [112,128,144],');
  FPack.add('  snow: [255,250,250],');
  FPack.add('  springgreen:  [0,255,127],');
  FPack.add('  steelblue:  [70,130,180],');
  FPack.add('  tan:  [210,180,140],');
  FPack.add('  teal: [0,128,128],');
  FPack.add('  thistle:  [216,191,216],');
  FPack.add('  tomato: [255,99,71],');
  FPack.add('  turquoise:  [64,224,208],');
  FPack.add('  violet: [238,130,238],');
  FPack.add('  wheat:  [245,222,179],');
  FPack.add('  white:  [255,255,255],');
  FPack.add('  whitesmoke: [245,245,245],');
  FPack.add('  yellow: [255,255,0],');
  FPack.add('  yellowgreen:  [154,205,50]');
  FPack.add('};');
  FPack.add('');
  FPack.add('var reverseKeywords = {};');
  FPack.add('for (var key in cssKeywords) {');
  FPack.add('  reverseKeywords[JSON.stringify(cssKeywords[key])] = key;');
  FPack.add('}');
  FPack.add('');
  FPack.add('},{}],4:[function(require,module,exports){');
  FPack.add('var conversions = require(3);');
  FPack.add('');
  FPack.add('var convert = function() {');
  FPack.add('   return new Converter();');
  FPack.add('}');
  FPack.add('');
  FPack.add('for (var func in conversions) {');
  FPack.add('  // export Raw versions');
  FPack.add('  convert[func + "Raw"] =  (function(func) {');
  FPack.add('    // accept array or plain args');
  FPack.add('    return function(arg) {');
  FPack.add('      if (typeof arg == "number")');
  FPack.add('        arg = Array.prototype.slice.call(arguments);');
  FPack.add('      return conversions[func](arg);');
  FPack.add('    }');
  FPack.add('  })(func);');
  FPack.add('');
  FPack.add('  var pair = /(\w+)2(\w+)/.exec(func),');
  FPack.add('      from = pair[1],');
  FPack.add('      to = pair[2];');
  FPack.add('');
  FPack.add('  // export rgb2hsl and ["rgb"]["hsl"]');
  FPack.add('  convert[from] = convert[from] || {};');
  FPack.add('');
  FPack.add('  convert[from][to] = convert[func] = (function(func) { ');
  FPack.add('    return function(arg) {');
  FPack.add('      if (typeof arg == "number")');
  FPack.add('        arg = Array.prototype.slice.call(arguments);');
  FPack.add('      ');
  FPack.add('      var val = conversions[func](arg);');
  FPack.add('      if (typeof val == "string" || val === undefined)');
  FPack.add('        return val; // keyword');
  FPack.add('');
  FPack.add('      for (var i = 0; i < val.length; i++)');
  FPack.add('        val[i] = Math.round(val[i]);');
  FPack.add('      return val;');
  FPack.add('    }');
  FPack.add('  })(func);');
  FPack.add('}');
  FPack.add('');
  FPack.add('');
  FPack.add('/* Converter does lazy conversion and caching */');
  FPack.add('var Converter = function() {');
  FPack.add('   this.convs = {};');
  FPack.add('};');
  FPack.add('');
  FPack.add('/* Either get the values for a space or');
  FPack.add('  set the values for a space, depending on args */');
  FPack.add('Converter.prototype.routeSpace = function(space, args) {');
  FPack.add('   var values = args[0];');
  FPack.add('   if (values === undefined) {');
  FPack.add('      // color.rgb()');
  FPack.add('      return this.getValues(space);');
  FPack.add('   }');
  FPack.add('   // color.rgb(10, 10, 10)');
  FPack.add('   if (typeof values == "number") {');
  FPack.add('      values = Array.prototype.slice.call(args);        ');
  FPack.add('   }');
  FPack.add('');
  FPack.add('   return this.setValues(space, values);');
  FPack.add('};');
  FPack.add('  ');
  FPack.add('/* Set the values for a space, invalidating cache */');
  FPack.add('Converter.prototype.setValues = function(space, values) {');
  FPack.add('   this.space = space;');
  FPack.add('   this.convs = {};');
  FPack.add('   this.convs[space] = values;');
  FPack.add('   return this;');
  FPack.add('};');
  FPack.add('');
  FPack.add('/* Get the values for a space. If there''s already');
  FPack.add('  a conversion for the space, fetch it, otherwise');
  FPack.add('  compute it */');
  FPack.add('Converter.prototype.getValues = function(space) {');
  FPack.add('   var vals = this.convs[space];');
  FPack.add('   if (!vals) {');
  FPack.add('      var fspace = this.space,');
  FPack.add('          from = this.convs[fspace];');
  FPack.add('      vals = convert[fspace][space](from);');
  FPack.add('');
  FPack.add('      this.convs[space] = vals;');
  FPack.add('   }');
  FPack.add('  return vals;');
  FPack.add('};');
  FPack.add('');
  FPack.add('["rgb", "hsl", "hsv", "cmyk", "keyword"].forEach(function(space) {');
  FPack.add('   Converter.prototype[space] = function(vals) {');
  FPack.add('      return this.routeSpace(space, arguments);');
  FPack.add('   }');
  FPack.add('});');
  FPack.add('');
  FPack.add('module.exports = convert;');
  FPack.add('},{"3":3}],5:[function(require,module,exports){');
  FPack.add('''use strict''');
  FPack.add('');
  FPack.add('module.exports = {');
  FPack.add('	"aliceblue": [240, 248, 255],');
  FPack.add('	"antiquewhite": [250, 235, 215],');
  FPack.add('	"aqua": [0, 255, 255],');
  FPack.add('	"aquamarine": [127, 255, 212],');
  FPack.add('	"azure": [240, 255, 255],');
  FPack.add('	"beige": [245, 245, 220],');
  FPack.add('	"bisque": [255, 228, 196],');
  FPack.add('	"black": [0, 0, 0],');
  FPack.add('	"blanchedalmond": [255, 235, 205],');
  FPack.add('	"blue": [0, 0, 255],');
  FPack.add('	"blueviolet": [138, 43, 226],');
  FPack.add('	"brown": [165, 42, 42],');
  FPack.add('	"burlywood": [222, 184, 135],');
  FPack.add('	"cadetblue": [95, 158, 160],');
  FPack.add('	"chartreuse": [127, 255, 0],');
  FPack.add('	"chocolate": [210, 105, 30],');
  FPack.add('	"coral": [255, 127, 80],');
  FPack.add('	"cornflowerblue": [100, 149, 237],');
  FPack.add('	"cornsilk": [255, 248, 220],');
  FPack.add('	"crimson": [220, 20, 60],');
  FPack.add('	"cyan": [0, 255, 255],');
  FPack.add('	"darkblue": [0, 0, 139],');
  FPack.add('	"darkcyan": [0, 139, 139],');
  FPack.add('	"darkgoldenrod": [184, 134, 11],');
  FPack.add('	"darkgray": [169, 169, 169],');
  FPack.add('	"darkgreen": [0, 100, 0],');
  FPack.add('	"darkgrey": [169, 169, 169],');
  FPack.add('	"darkkhaki": [189, 183, 107],');
  FPack.add('	"darkmagenta": [139, 0, 139],');
  FPack.add('	"darkolivegreen": [85, 107, 47],');
  FPack.add('	"darkorange": [255, 140, 0],');
  FPack.add('	"darkorchid": [153, 50, 204],');
  FPack.add('	"darkred": [139, 0, 0],');
  FPack.add('	"darksalmon": [233, 150, 122],');
  FPack.add('	"darkseagreen": [143, 188, 143],');
  FPack.add('	"darkslateblue": [72, 61, 139],');
  FPack.add('	"darkslategray": [47, 79, 79],');
  FPack.add('	"darkslategrey": [47, 79, 79],');
  FPack.add('	"darkturquoise": [0, 206, 209],');
  FPack.add('	"darkviolet": [148, 0, 211],');
  FPack.add('	"deeppink": [255, 20, 147],');
  FPack.add('	"deepskyblue": [0, 191, 255],');
  FPack.add('	"dimgray": [105, 105, 105],');
  FPack.add('	"dimgrey": [105, 105, 105],');
  FPack.add('	"dodgerblue": [30, 144, 255],');
  FPack.add('	"firebrick": [178, 34, 34],');
  FPack.add('	"floralwhite": [255, 250, 240],');
  FPack.add('	"forestgreen": [34, 139, 34],');
  FPack.add('	"fuchsia": [255, 0, 255],');
  FPack.add('	"gainsboro": [220, 220, 220],');
  FPack.add('	"ghostwhite": [248, 248, 255],');
  FPack.add('	"gold": [255, 215, 0],');
  FPack.add('	"goldenrod": [218, 165, 32],');
  FPack.add('	"gray": [128, 128, 128],');
  FPack.add('	"green": [0, 128, 0],');
  FPack.add('	"greenyellow": [173, 255, 47],');
  FPack.add('	"grey": [128, 128, 128],');
  FPack.add('	"honeydew": [240, 255, 240],');
  FPack.add('	"hotpink": [255, 105, 180],');
  FPack.add('	"indianred": [205, 92, 92],');
  FPack.add('	"indigo": [75, 0, 130],');
  FPack.add('	"ivory": [255, 255, 240],');
  FPack.add('	"khaki": [240, 230, 140],');
  FPack.add('	"lavender": [230, 230, 250],');
  FPack.add('	"lavenderblush": [255, 240, 245],');
  FPack.add('	"lawngreen": [124, 252, 0],');
  FPack.add('	"lemonchiffon": [255, 250, 205],');
  FPack.add('	"lightblue": [173, 216, 230],');
  FPack.add('	"lightcoral": [240, 128, 128],');
  FPack.add('	"lightcyan": [224, 255, 255],');
  FPack.add('	"lightgoldenrodyellow": [250, 250, 210],');
  FPack.add('	"lightgray": [211, 211, 211],');
  FPack.add('	"lightgreen": [144, 238, 144],');
  FPack.add('	"lightgrey": [211, 211, 211],');
  FPack.add('	"lightpink": [255, 182, 193],');
  FPack.add('	"lightsalmon": [255, 160, 122],');
  FPack.add('	"lightseagreen": [32, 178, 170],');
  FPack.add('	"lightskyblue": [135, 206, 250],');
  FPack.add('	"lightslategray": [119, 136, 153],');
  FPack.add('	"lightslategrey": [119, 136, 153],');
  FPack.add('	"lightsteelblue": [176, 196, 222],');
  FPack.add('	"lightyellow": [255, 255, 224],');
  FPack.add('	"lime": [0, 255, 0],');
  FPack.add('	"limegreen": [50, 205, 50],');
  FPack.add('	"linen": [250, 240, 230],');
  FPack.add('	"magenta": [255, 0, 255],');
  FPack.add('	"maroon": [128, 0, 0],');
  FPack.add('	"mediumaquamarine": [102, 205, 170],');
  FPack.add('	"mediumblue": [0, 0, 205],');
  FPack.add('	"mediumorchid": [186, 85, 211],');
  FPack.add('	"mediumpurple": [147, 112, 219],');
  FPack.add('	"mediumseagreen": [60, 179, 113],');
  FPack.add('	"mediumslateblue": [123, 104, 238],');
  FPack.add('	"mediumspringgreen": [0, 250, 154],');
  FPack.add('	"mediumturquoise": [72, 209, 204],');
  FPack.add('	"mediumvioletred": [199, 21, 133],');
  FPack.add('	"midnightblue": [25, 25, 112],');
  FPack.add('	"mintcream": [245, 255, 250],');
  FPack.add('	"mistyrose": [255, 228, 225],');
  FPack.add('	"moccasin": [255, 228, 181],');
  FPack.add('	"navajowhite": [255, 222, 173],');
  FPack.add('	"navy": [0, 0, 128],');
  FPack.add('	"oldlace": [253, 245, 230],');
  FPack.add('	"olive": [128, 128, 0],');
  FPack.add('	"olivedrab": [107, 142, 35],');
  FPack.add('	"orange": [255, 165, 0],');
  FPack.add('	"orangered": [255, 69, 0],');
  FPack.add('	"orchid": [218, 112, 214],');
  FPack.add('	"palegoldenrod": [238, 232, 170],');
  FPack.add('	"palegreen": [152, 251, 152],');
  FPack.add('	"paleturquoise": [175, 238, 238],');
  FPack.add('	"palevioletred": [219, 112, 147],');
  FPack.add('	"papayawhip": [255, 239, 213],');
  FPack.add('	"peachpuff": [255, 218, 185],');
  FPack.add('	"peru": [205, 133, 63],');
  FPack.add('	"pink": [255, 192, 203],');
  FPack.add('	"plum": [221, 160, 221],');
  FPack.add('	"powderblue": [176, 224, 230],');
  FPack.add('	"purple": [128, 0, 128],');
  FPack.add('	"rebeccapurple": [102, 51, 153],');
  FPack.add('	"red": [255, 0, 0],');
  FPack.add('	"rosybrown": [188, 143, 143],');
  FPack.add('	"royalblue": [65, 105, 225],');
  FPack.add('	"saddlebrown": [139, 69, 19],');
  FPack.add('	"salmon": [250, 128, 114],');
  FPack.add('	"sandybrown": [244, 164, 96],');
  FPack.add('	"seagreen": [46, 139, 87],');
  FPack.add('	"seashell": [255, 245, 238],');
  FPack.add('	"sienna": [160, 82, 45],');
  FPack.add('	"silver": [192, 192, 192],');
  FPack.add('	"skyblue": [135, 206, 235],');
  FPack.add('	"slateblue": [106, 90, 205],');
  FPack.add('	"slategray": [112, 128, 144],');
  FPack.add('	"slategrey": [112, 128, 144],');
  FPack.add('	"snow": [255, 250, 250],');
  FPack.add('	"springgreen": [0, 255, 127],');
  FPack.add('	"steelblue": [70, 130, 180],');
  FPack.add('	"tan": [210, 180, 140],');
  FPack.add('	"teal": [0, 128, 128],');
  FPack.add('	"thistle": [216, 191, 216],');
  FPack.add('	"tomato": [255, 99, 71],');
  FPack.add('	"turquoise": [64, 224, 208],');
  FPack.add('	"violet": [238, 130, 238],');
  FPack.add('	"wheat": [245, 222, 179],');
  FPack.add('	"white": [255, 255, 255],');
  FPack.add('	"whitesmoke": [245, 245, 245],');
  FPack.add('	"yellow": [255, 255, 0],');
  FPack.add('	"yellowgreen": [154, 205, 50]');
  FPack.add('};');
  FPack.add('');
  FPack.add('},{}],6:[function(require,module,exports){');
  FPack.add('//! moment.js');
  FPack.add('//! version : 2.20.1');
  FPack.add('//! authors : Tim Wood, Iskren Chernev, Moment.js contributors');
  FPack.add('//! license : MIT');
  FPack.add('//! momentjs.com');
  FPack.add('');
  FPack.add(';(function (global, factory) {');
  FPack.add('    typeof exports === ''object'' && typeof module !== ''undefined'' ? module.exports = factory() :');
end;

procedure TChartbundleJS.ChartbundleJS_6;
begin
  FPack.add('    typeof define === ''function'' && define.amd ? define(factory) :');
  FPack.add('    global.moment = factory()');
  FPack.add('}(this, (function () { ''use strict'';');
  FPack.add('');
  FPack.add('var hookCallback;');
  FPack.add('');
  FPack.add('function hooks () {');
  FPack.add('    return hookCallback.apply(null, arguments);');
  FPack.add('}');
  FPack.add('');
  FPack.add('// This is done to register the method called with moment()');
  FPack.add('// without creating circular dependencies.');
  FPack.add('function setHookCallback (callback) {');
  FPack.add('    hookCallback = callback;');
  FPack.add('}');
  FPack.add('');
  FPack.add('function isArray(input) {');
  FPack.add('    return input instanceof Array || Object.prototype.toString.call(input) === ''[object Array]'';');
  FPack.add('}');
  FPack.add('');
  FPack.add('function isObject(input) {');
  FPack.add('    // IE8 will treat undefined and null as object if it wasn''t for');
  FPack.add('    // input != null');
  FPack.add('    return input != null && Object.prototype.toString.call(input) === ''[object Object]'';');
  FPack.add('}');
  FPack.add('');
  FPack.add('function isObjectEmpty(obj) {');
  FPack.add('    if (Object.getOwnPropertyNames) {');
  FPack.add('        return (Object.getOwnPropertyNames(obj).length === 0);');
  FPack.add('    } else {');
  FPack.add('        var k;');
  FPack.add('        for (k in obj) {');
  FPack.add('            if (obj.hasOwnProperty(k)) {');
  FPack.add('                return false;');
  FPack.add('            }');
  FPack.add('        }');
  FPack.add('        return true;');
  FPack.add('    }');
  FPack.add('}');
  FPack.add('');
  FPack.add('function isUndefined(input) {');
  FPack.add('    return input === void 0;');
  FPack.add('}');
  FPack.add('');
  FPack.add('function isNumber(input) {');
  FPack.add('    return typeof input === ''number'' || Object.prototype.toString.call(input) === ''[object Number]'';');
  FPack.add('}');
  FPack.add('');
  FPack.add('function isDate(input) {');
  FPack.add('    return input instanceof Date || Object.prototype.toString.call(input) === ''[object Date]'';');
  FPack.add('}');
  FPack.add('');
  FPack.add('function map(arr, fn) {');
  FPack.add('    var res = [], i;');
  FPack.add('    for (i = 0; i < arr.length; ++i) {');
  FPack.add('        res.push(fn(arr[i], i));');
  FPack.add('    }');
  FPack.add('    return res;');
  FPack.add('}');
  FPack.add('');
  FPack.add('function hasOwnProp(a, b) {');
  FPack.add('    return Object.prototype.hasOwnProperty.call(a, b);');
  FPack.add('}');
  FPack.add('');
  FPack.add('function extend(a, b) {');
  FPack.add('    for (var i in b) {');
  FPack.add('        if (hasOwnProp(b, i)) {');
  FPack.add('            a[i] = b[i];');
  FPack.add('        }');
  FPack.add('    }');
  FPack.add('');
  FPack.add('    if (hasOwnProp(b, ''toString'')) {');
  FPack.add('        a.toString = b.toString;');
  FPack.add('    }');
  FPack.add('');
  FPack.add('    if (hasOwnProp(b, ''valueOf'')) {');
  FPack.add('        a.valueOf = b.valueOf;');
  FPack.add('    }');
  FPack.add('');
  FPack.add('    return a;');
  FPack.add('}');
  FPack.add('');
  FPack.add('function createUTC (input, format, locale, strict) {');
  FPack.add('    return createLocalOrUTC(input, format, locale, strict, true).utc();');
  FPack.add('}');
  FPack.add('');
  FPack.add('function defaultParsingFlags() {');
  FPack.add('    // We need to deep clone this object.');
  FPack.add('    return {');
  FPack.add('        empty           : false,');
  FPack.add('        unusedTokens    : [],');
  FPack.add('        unusedInput     : [],');
  FPack.add('        overflow        : -2,');
  FPack.add('        charsLeftOver   : 0,');
  FPack.add('        nullInput       : false,');
  FPack.add('        invalidMonth    : null,');
  FPack.add('        invalidFormat   : false,');
  FPack.add('        userInvalidated : false,');
  FPack.add('        iso             : false,');
  FPack.add('        parsedDateParts : [],');
  FPack.add('        meridiem        : null,');
  FPack.add('        rfc2822         : false,');
  FPack.add('        weekdayMismatch : false');
  FPack.add('    };');
  FPack.add('}');
  FPack.add('');
  FPack.add('function getParsingFlags(m) {');
  FPack.add('    if (m._pf == null) {');
  FPack.add('        m._pf = defaultParsingFlags();');
  FPack.add('    }');
  FPack.add('    return m._pf;');
  FPack.add('}');
  FPack.add('');
  FPack.add('var some;');
  FPack.add('if (Array.prototype.some) {');
  FPack.add('    some = Array.prototype.some;');
  FPack.add('} else {');
  FPack.add('    some = function (fun) {');
  FPack.add('        var t = Object(this);');
  FPack.add('        var len = t.length >>> 0;');
  FPack.add('');
  FPack.add('        for (var i = 0; i < len; i++) {');
  FPack.add('            if (i in t && fun.call(this, t[i], i, t)) {');
  FPack.add('                return true;');
  FPack.add('            }');
  FPack.add('        }');
  FPack.add('');
  FPack.add('        return false;');
  FPack.add('    };');
  FPack.add('}');
  FPack.add('');
  FPack.add('function isValid(m) {');
  FPack.add('    if (m._isValid == null) {');
  FPack.add('        var flags = getParsingFlags(m);');
  FPack.add('        var parsedParts = some.call(flags.parsedDateParts, function (i) {');
  FPack.add('            return i != null;');
  FPack.add('        });');
  FPack.add('        var isNowValid = !isNaN(m._d.getTime()) &&');
  FPack.add('            flags.overflow < 0 &&');
  FPack.add('            !flags.empty &&');
  FPack.add('            !flags.invalidMonth &&');
  FPack.add('            !flags.invalidWeekday &&');
  FPack.add('            !flags.weekdayMismatch &&');
  FPack.add('            !flags.nullInput &&');
  FPack.add('            !flags.invalidFormat &&');
  FPack.add('            !flags.userInvalidated &&');
  FPack.add('            (!flags.meridiem || (flags.meridiem && parsedParts));');
  FPack.add('');
  FPack.add('        if (m._strict) {');
  FPack.add('            isNowValid = isNowValid &&');
  FPack.add('                flags.charsLeftOver === 0 &&');
  FPack.add('                flags.unusedTokens.length === 0 &&');
  FPack.add('                flags.bigHour === undefined;');
  FPack.add('        }');
  FPack.add('');
  FPack.add('        if (Object.isFrozen == null || !Object.isFrozen(m)) {');
  FPack.add('            m._isValid = isNowValid;');
  FPack.add('        }');
  FPack.add('        else {');
  FPack.add('            return isNowValid;');
  FPack.add('        }');
  FPack.add('    }');
  FPack.add('    return m._isValid;');
  FPack.add('}');
  FPack.add('');
  FPack.add('function createInvalid (flags) {');
  FPack.add('    var m = createUTC(NaN);');
  FPack.add('    if (flags != null) {');
  FPack.add('        extend(getParsingFlags(m), flags);');
  FPack.add('    }');
  FPack.add('    else {');
  FPack.add('        getParsingFlags(m).userInvalidated = true;');
  FPack.add('    }');
  FPack.add('');
  FPack.add('    return m;');
  FPack.add('}');
  FPack.add('');
  FPack.add('// Plugins that add properties should also add the key here (null value),');
  FPack.add('// so we can properly clone ourselves.');
  FPack.add('var momentProperties = hooks.momentProperties = [];');
  FPack.add('');
  FPack.add('function copyConfig(to, from) {');
  FPack.add('    var i, prop, val;');
  FPack.add('');
  FPack.add('    if (!isUndefined(from._isAMomentObject)) {');
  FPack.add('        to._isAMomentObject = from._isAMomentObject;');
  FPack.add('    }');
  FPack.add('    if (!isUndefined(from._i)) {');
  FPack.add('        to._i = from._i;');
  FPack.add('    }');
  FPack.add('    if (!isUndefined(from._f)) {');
  FPack.add('        to._f = from._f;');
  FPack.add('    }');
  FPack.add('    if (!isUndefined(from._l)) {');
  FPack.add('        to._l = from._l;');
  FPack.add('    }');
  FPack.add('    if (!isUndefined(from._strict)) {');
  FPack.add('        to._strict = from._strict;');
  FPack.add('    }');
  FPack.add('    if (!isUndefined(from._tzm)) {');
  FPack.add('        to._tzm = from._tzm;');
  FPack.add('    }');
  FPack.add('    if (!isUndefined(from._isUTC)) {');
  FPack.add('        to._isUTC = from._isUTC;');
  FPack.add('    }');
  FPack.add('    if (!isUndefined(from._offset)) {');
  FPack.add('        to._offset = from._offset;');
  FPack.add('    }');
  FPack.add('    if (!isUndefined(from._pf)) {');
  FPack.add('        to._pf = getParsingFlags(from);');
  FPack.add('    }');
  FPack.add('    if (!isUndefined(from._locale)) {');
  FPack.add('        to._locale = from._locale;');
  FPack.add('    }');
  FPack.add('');
  FPack.add('    if (momentProperties.length > 0) {');
  FPack.add('        for (i = 0; i < momentProperties.length; i++) {');
  FPack.add('            prop = momentProperties[i];');
  FPack.add('            val = from[prop];');
  FPack.add('            if (!isUndefined(val)) {');
  FPack.add('                to[prop] = val;');
  FPack.add('            }');
  FPack.add('        }');
  FPack.add('    }');
  FPack.add('');
  FPack.add('    return to;');
  FPack.add('}');
  FPack.add('');
  FPack.add('var updateInProgress = false;');
  FPack.add('');
  FPack.add('// Moment prototype object');
  FPack.add('function Moment(config) {');
  FPack.add('    copyConfig(this, config);');
  FPack.add('    this._d = new Date(config._d != null ? config._d.getTime() : NaN);');
  FPack.add('    if (!this.isValid()) {');
  FPack.add('        this._d = new Date(NaN);');
  FPack.add('    }');
  FPack.add('    // Prevent infinite loop in case updateOffset creates new moment');
  FPack.add('    // objects.');
  FPack.add('    if (updateInProgress === false) {');
  FPack.add('        updateInProgress = true;');
  FPack.add('        hooks.updateOffset(this);');
  FPack.add('        updateInProgress = false;');
  FPack.add('    }');
  FPack.add('}');
  FPack.add('');
  FPack.add('function isMoment (obj) {');
  FPack.add('    return obj instanceof Moment || (obj != null && obj._isAMomentObject != null);');
  FPack.add('}');
  FPack.add('');
  FPack.add('function absFloor (number) {');
  FPack.add('    if (number < 0) {');
  FPack.add('        // -0 -> 0');
  FPack.add('        return Math.ceil(number) || 0;');
  FPack.add('    } else {');
  FPack.add('        return Math.floor(number);');
  FPack.add('    }');
  FPack.add('}');
  FPack.add('');
  FPack.add('function toInt(argumentForCoercion) {');
  FPack.add('    var coercedNumber = +argumentForCoercion,');
  FPack.add('        value = 0;');
  FPack.add('');
  FPack.add('    if (coercedNumber !== 0 && isFinite(coercedNumber)) {');
  FPack.add('        value = absFloor(coercedNumber);');
  FPack.add('    }');
  FPack.add('');
  FPack.add('    return value;');
  FPack.add('}');
  FPack.add('');
  FPack.add('// compare two arrays, return the number of differences');
  FPack.add('function compareArrays(array1, array2, dontConvert) {');
  FPack.add('    var len = Math.min(array1.length, array2.length),');
  FPack.add('        lengthDiff = Math.abs(array1.length - array2.length),');
  FPack.add('        diffs = 0,');
  FPack.add('        i;');
  FPack.add('    for (i = 0; i < len; i++) {');
  FPack.add('        if ((dontConvert && array1[i] !== array2[i]) ||');
  FPack.add('            (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {');
  FPack.add('            diffs++;');
  FPack.add('        }');
  FPack.add('    }');
  FPack.add('    return diffs + lengthDiff;');
  FPack.add('}');
  FPack.add('');
  FPack.add('function warn(msg) {');
  FPack.add('    if (hooks.suppressDeprecationWarnings === false &&');
  FPack.add('            (typeof console !==  ''undefined'') && console.warn) {');
  FPack.add('        console.warn(''Deprecation warning: '' + msg);');
  FPack.add('    }');
  FPack.add('}');
  FPack.add('');
  FPack.add('function deprecate(msg, fn) {');
  FPack.add('    var firstTime = true;');
  FPack.add('');
  FPack.add('    return extend(function () {');
  FPack.add('        if (hooks.deprecationHandler != null) {');
  FPack.add('            hooks.deprecationHandler(null, msg);');
  FPack.add('        }');
  FPack.add('        if (firstTime) {');
  FPack.add('            var args = [];');
  FPack.add('            var arg;');
  FPack.add('            for (var i = 0; i < arguments.length; i++) {');
  FPack.add('                arg = '''';');
  FPack.add('                if (typeof arguments[i] === ''object'') {');
  FPack.add('                    arg += ''\n['' + i + ''] '';');
  FPack.add('                    for (var key in arguments[0]) {');
  FPack.add('                        arg += key + '': '' + arguments[0][key] + '', '';');
  FPack.add('                    }');
  FPack.add('                    arg = arg.slice(0, -2); // Remove trailing comma and space');
  FPack.add('                } else {');
  FPack.add('                    arg = arguments[i];');
  FPack.add('                }');
  FPack.add('                args.push(arg);');
  FPack.add('            }');
  FPack.add('            warn(msg + ''\nArguments: '' + Array.prototype.slice.call(args).join('''') + ''\n'' + (new Error()).stack);');
  FPack.add('            firstTime = false;');
  FPack.add('        }');
  FPack.add('        return fn.apply(this, arguments);');
  FPack.add('    }, fn);');
  FPack.add('}');
  FPack.add('');
  FPack.add('var deprecations = {};');
  FPack.add('');
  FPack.add('function deprecateSimple(name, msg) {');
  FPack.add('    if (hooks.deprecationHandler != null) {');
  FPack.add('        hooks.deprecationHandler(name, msg);');
  FPack.add('    }');
  FPack.add('    if (!deprecations[name]) {');
  FPack.add('        warn(msg);');
  FPack.add('        deprecations[name] = true;');
  FPack.add('    }');
  FPack.add('}');
  FPack.add('');
  FPack.add('hooks.suppressDeprecationWarnings = false;');
  FPack.add('hooks.deprecationHandler = null;');
end;

procedure TChartbundleJS.ChartbundleJS_7;
begin
  FPack.add('');
  FPack.add('function isFunction(input) {');
  FPack.add('    return input instanceof Function || Object.prototype.toString.call(input) === ''[object Function]'';');
  FPack.add('}');
  FPack.add('');
  FPack.add('function set (config) {');
  FPack.add('    var prop, i;');
  FPack.add('    for (i in config) {');
  FPack.add('        prop = config[i];');
  FPack.add('        if (isFunction(prop)) {');
  FPack.add('            this[i] = prop;');
  FPack.add('        } else {');
  FPack.add('            this[''_'' + i] = prop;');
  FPack.add('        }');
  FPack.add('    }');
  FPack.add('    this._config = config;');
  FPack.add('    // Lenient ordinal parsing accepts just a number in addition to');
  FPack.add('    // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.');
  FPack.add('    // TODO: Remove "ordinalParse" fallback in next major release.');
  FPack.add('    this._dayOfMonthOrdinalParseLenient = new RegExp(');
  FPack.add('        (this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) +');
  FPack.add('            ''|'' + (/\d{1,2}/).source);');
  FPack.add('}');
  FPack.add('');
  FPack.add('function mergeConfigs(parentConfig, childConfig) {');
  FPack.add('    var res = extend({}, parentConfig), prop;');
  FPack.add('    for (prop in childConfig) {');
  FPack.add('        if (hasOwnProp(childConfig, prop)) {');
  FPack.add('            if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {');
  FPack.add('                res[prop] = {};');
  FPack.add('                extend(res[prop], parentConfig[prop]);');
  FPack.add('                extend(res[prop], childConfig[prop]);');
  FPack.add('            } else if (childConfig[prop] != null) {');
  FPack.add('                res[prop] = childConfig[prop];');
  FPack.add('            } else {');
  FPack.add('                delete res[prop];');
  FPack.add('            }');
  FPack.add('        }');
  FPack.add('    }');
  FPack.add('    for (prop in parentConfig) {');
  FPack.add('        if (hasOwnProp(parentConfig, prop) &&');
  FPack.add('                !hasOwnProp(childConfig, prop) &&');
  FPack.add('                isObject(parentConfig[prop])) {');
  FPack.add('            // make sure changes to properties don''t modify parent config');
  FPack.add('            res[prop] = extend({}, res[prop]);');
  FPack.add('        }');
  FPack.add('    }');
  FPack.add('    return res;');
  FPack.add('}');
  FPack.add('');
  FPack.add('function Locale(config) {');
  FPack.add('    if (config != null) {');
  FPack.add('        this.set(config);');
  FPack.add('    }');
  FPack.add('}');
  FPack.add('');
  FPack.add('var keys;');
  FPack.add('');
  FPack.add('if (Object.keys) {');
  FPack.add('    keys = Object.keys;');
  FPack.add('} else {');
  FPack.add('    keys = function (obj) {');
  FPack.add('        var i, res = [];');
  FPack.add('        for (i in obj) {');
  FPack.add('            if (hasOwnProp(obj, i)) {');
  FPack.add('                res.push(i);');
  FPack.add('            }');
  FPack.add('        }');
  FPack.add('        return res;');
  FPack.add('    };');
  FPack.add('}');
  FPack.add('');
  FPack.add('var defaultCalendar = {');
  FPack.add('    sameDay : ''[Today at] LT'',');
  FPack.add('    nextDay : ''[Tomorrow at] LT'',');
  FPack.add('    nextWeek : ''dddd [at] LT'',');
  FPack.add('    lastDay : ''[Yesterday at] LT'',');
  FPack.add('    lastWeek : ''[Last] dddd [at] LT'',');
  FPack.add('    sameElse : ''L''');
  FPack.add('};');
  FPack.add('');
  FPack.add('function calendar (key, mom, now) {');
  FPack.add('    var output = this._calendar[key] || this._calendar[''sameElse''];');
  FPack.add('    return isFunction(output) ? output.call(mom, now) : output;');
  FPack.add('}');
  FPack.add('');
  FPack.add('var defaultLongDateFormat = {');
  FPack.add('    LTS  : ''h:mm:ss A'',');
  FPack.add('    LT   : ''h:mm A'',');
  FPack.add('    L    : ''MM/DD/YYYY'',');
  FPack.add('    LL   : ''MMMM D, YYYY'',');
  FPack.add('    LLL  : ''MMMM D, YYYY h:mm A'',');
  FPack.add('    LLLL : ''dddd, MMMM D, YYYY h:mm A''');
  FPack.add('};');
  FPack.add('');
  FPack.add('function longDateFormat (key) {');
  FPack.add('    var format = this._longDateFormat[key],');
  FPack.add('        formatUpper = this._longDateFormat[key.toUpperCase()];');
  FPack.add('');
  FPack.add('    if (format || !formatUpper) {');
  FPack.add('        return format;');
  FPack.add('    }');
  FPack.add('');
  FPack.add('    this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {');
  FPack.add('        return val.slice(1);');
  FPack.add('    });');
  FPack.add('');
  FPack.add('    return this._longDateFormat[key];');
  FPack.add('}');
  FPack.add('');
  FPack.add('var defaultInvalidDate = ''Invalid date'';');
  FPack.add('');
  FPack.add('function invalidDate () {');
  FPack.add('    return this._invalidDate;');
  FPack.add('}');
  FPack.add('');
  FPack.add('var defaultOrdinal = ''%d'';');
  FPack.add('var defaultDayOfMonthOrdinalParse = /\d{1,2}/;');
  FPack.add('');
  FPack.add('function ordinal (number) {');
  FPack.add('    return this._ordinal.replace(''%d'', number);');
  FPack.add('}');
  FPack.add('');
  FPack.add('var defaultRelativeTime = {');
  FPack.add('    future : ''in %s'',');
  FPack.add('    past   : ''%s ago'',');
  FPack.add('    s  : ''a few seconds'',');
  FPack.add('    ss : ''%d seconds'',');
  FPack.add('    m  : ''a minute'',');
  FPack.add('    mm : ''%d minutes'',');
  FPack.add('    h  : ''an hour'',');
  FPack.add('    hh : ''%d hours'',');
  FPack.add('    d  : ''a day'',');
  FPack.add('    dd : ''%d days'',');
  FPack.add('    M  : ''a month'',');
  FPack.add('    MM : ''%d months'',');
  FPack.add('    y  : ''a year'',');
  FPack.add('    yy : ''%d years''');
  FPack.add('};');
  FPack.add('');
  FPack.add('function relativeTime (number, withoutSuffix, string, isFuture) {');
  FPack.add('    var output = this._relativeTime[string];');
  FPack.add('    return (isFunction(output)) ?');
  FPack.add('        output(number, withoutSuffix, string, isFuture) :');
  FPack.add('        output.replace(/%d/i, number);');
  FPack.add('}');
  FPack.add('');
  FPack.add('function pastFuture (diff, output) {');
  FPack.add('    var format = this._relativeTime[diff > 0 ? ''future'' : ''past''];');
  FPack.add('    return isFunction(format) ? format(output) : format.replace(/%s/i, output);');
  FPack.add('}');
  FPack.add('');
  FPack.add('var aliases = {};');
  FPack.add('');
  FPack.add('function addUnitAlias (unit, shorthand) {');
  FPack.add('    var lowerCase = unit.toLowerCase();');
  FPack.add('    aliases[lowerCase] = aliases[lowerCase + ''s''] = aliases[shorthand] = unit;');
  FPack.add('}');
  FPack.add('');
  FPack.add('function normalizeUnits(units) {');
  FPack.add('    return typeof units === ''string'' ? aliases[units] || aliases[units.toLowerCase()] : undefined;');
  FPack.add('}');
  FPack.add('');
  FPack.add('function normalizeObjectUnits(inputObject) {');
  FPack.add('    var normalizedInput = {},');
  FPack.add('        normalizedProp,');
  FPack.add('        prop;');
  FPack.add('');
  FPack.add('    for (prop in inputObject) {');
  FPack.add('        if (hasOwnProp(inputObject, prop)) {');
  FPack.add('            normalizedProp = normalizeUnits(prop);');
  FPack.add('            if (normalizedProp) {');
  FPack.add('                normalizedInput[normalizedProp] = inputObject[prop];');
  FPack.add('            }');
  FPack.add('        }');
  FPack.add('    }');
  FPack.add('');
  FPack.add('    return normalizedInput;');
  FPack.add('}');
  FPack.add('');
  FPack.add('var priorities = {};');
  FPack.add('');
  FPack.add('function addUnitPriority(unit, priority) {');
  FPack.add('    priorities[unit] = priority;');
  FPack.add('}');
  FPack.add('');
  FPack.add('function getPrioritizedUnits(unitsObj) {');
  FPack.add('    var units = [];');
  FPack.add('    for (var u in unitsObj) {');
  FPack.add('        units.push({unit: u, priority: priorities[u]});');
  FPack.add('    }');
  FPack.add('    units.sort(function (a, b) {');
  FPack.add('        return a.priority - b.priority;');
  FPack.add('    });');
  FPack.add('    return units;');
  FPack.add('}');
  FPack.add('');
  FPack.add('function zeroFill(number, targetLength, forceSign) {');
  FPack.add('    var absNumber = '''' + Math.abs(number),');
  FPack.add('        zerosToFill = targetLength - absNumber.length,');
  FPack.add('        sign = number >= 0;');
  FPack.add('    return (sign ? (forceSign ? ''+'' : '''') : ''-'') +');
  FPack.add('        Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;');
  FPack.add('}');
  FPack.add('');
  FPack.add('var formattingTokens = /(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;');
  FPack.add('');
  FPack.add('var localFormattingTokens = /(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g;');
  FPack.add('');
  FPack.add('var formatFunctions = {};');
  FPack.add('');
  FPack.add('var formatTokenFunctions = {};');
  FPack.add('');
  FPack.add('// token:    ''M''');
  FPack.add('// padded:   [''MM'', 2]');
  FPack.add('// ordinal:  ''Mo''');
  FPack.add('// callback: function () { this.month() + 1 }');
  FPack.add('function addFormatToken (token, padded, ordinal, callback) {');
  FPack.add('    var func = callback;');
  FPack.add('    if (typeof callback === ''string'') {');
  FPack.add('        func = function () {');
  FPack.add('            return this[callback]();');
  FPack.add('        };');
  FPack.add('    }');
  FPack.add('    if (token) {');
  FPack.add('        formatTokenFunctions[token] = func;');
  FPack.add('    }');
  FPack.add('    if (padded) {');
  FPack.add('        formatTokenFunctions[padded[0]] = function () {');
  FPack.add('            return zeroFill(func.apply(this, arguments), padded[1], padded[2]);');
  FPack.add('        };');
  FPack.add('    }');
  FPack.add('    if (ordinal) {');
  FPack.add('        formatTokenFunctions[ordinal] = function () {');
  FPack.add('            return this.localeData().ordinal(func.apply(this, arguments), token);');
  FPack.add('        };');
  FPack.add('    }');
  FPack.add('}');
  FPack.add('');
  FPack.add('function removeFormattingTokens(input) {');
  FPack.add('    if (input.match(/\[[\s\S]/)) {');
  FPack.add('        return input.replace(/^\[|\]$/g, '''');');
  FPack.add('    }');
  FPack.add('    return input.replace(/\\/g, '''');');
  FPack.add('}');
  FPack.add('');
  FPack.add('function makeFormatFunction(format) {');
  FPack.add('    var array = format.match(formattingTokens), i, length;');
  FPack.add('');
  FPack.add('    for (i = 0, length = array.length; i < length; i++) {');
  FPack.add('        if (formatTokenFunctions[array[i]]) {');
  FPack.add('            array[i] = formatTokenFunctions[array[i]];');
  FPack.add('        } else {');
  FPack.add('            array[i] = removeFormattingTokens(array[i]);');
  FPack.add('        }');
  FPack.add('    }');
  FPack.add('');
  FPack.add('    return function (mom) {');
  FPack.add('        var output = '''', i;');
  FPack.add('        for (i = 0; i < length; i++) {');
  FPack.add('            output += isFunction(array[i]) ? array[i].call(mom, format) : array[i];');
  FPack.add('        }');
  FPack.add('        return output;');
  FPack.add('    };');
  FPack.add('}');
  FPack.add('');
  FPack.add('// format date using native date object');
  FPack.add('function formatMoment(m, format) {');
  FPack.add('    if (!m.isValid()) {');
  FPack.add('        return m.localeData().invalidDate();');
  FPack.add('    }');
  FPack.add('');
  FPack.add('    format = expandFormat(format, m.localeData());');
  FPack.add('    formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);');
  FPack.add('');
  FPack.add('    return formatFunctions[format](m);');
  FPack.add('}');
  FPack.add('');
  FPack.add('function expandFormat(format, locale) {');
  FPack.add('    var i = 5;');
  FPack.add('');
  FPack.add('    function replaceLongDateFormatTokens(input) {');
  FPack.add('        return locale.longDateFormat(input) || input;');
  FPack.add('    }');
  FPack.add('');
  FPack.add('    localFormattingTokens.lastIndex = 0;');
  FPack.add('    while (i >= 0 && localFormattingTokens.test(format)) {');
  FPack.add('        format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);');
  FPack.add('        localFormattingTokens.lastIndex = 0;');
  FPack.add('        i -= 1;');
  FPack.add('    }');
  FPack.add('');
  FPack.add('    return format;');
  FPack.add('}');
  FPack.add('');
  FPack.add('var match1         = /\d/;            //       0 - 9');
  FPack.add('var match2         = /\d\d/;          //      00 - 99');
  FPack.add('var match3         = /\d{3}/;         //     000 - 999');
  FPack.add('var match4         = /\d{4}/;         //    0000 - 9999');
  FPack.add('var match6         = /[+-]?\d{6}/;    // -999999 - 999999');
  FPack.add('var match1to2      = /\d\d?/;         //       0 - 99');
  FPack.add('var match3to4      = /\d\d\d\d?/;     //     999 - 9999');
  FPack.add('var match5to6      = /\d\d\d\d\d\d?/; //   99999 - 999999');
  FPack.add('var match1to3      = /\d{1,3}/;       //       0 - 999');
  FPack.add('var match1to4      = /\d{1,4}/;       //       0 - 9999');
  FPack.add('var match1to6      = /[+-]?\d{1,6}/;  // -999999 - 999999');
  FPack.add('');
  FPack.add('var matchUnsigned  = /\d+/;           //       0 - inf');
  FPack.add('var matchSigned    = /[+-]?\d+/;      //    -inf - inf');
  FPack.add('');
  FPack.add('var matchOffset    = /Z|[+-]\d\d:?\d\d/gi; // +00:00 -00:00 +0000 -0000 or Z');
  FPack.add('var matchShortOffset = /Z|[+-]\d\d(?::?\d\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z');
  FPack.add('');
  FPack.add('var matchTimestamp = /[+-]?\d+(\.\d{1,3})?/; // 123456789 123456789.123');
  FPack.add('');
  FPack.add('// any word (or two) characters or numbers including two/three word month in arabic.');
  FPack.add('// includes scottish gaelic two word and hyphenated months');
  FPack.add('var matchWord = /[0-9]{0,256}[''a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFF07\uFF10-\uFFEF]{1,256}|[\u0600-\u06FF\/]{1,256}(\s*?[\u0600-\u06FF]{1,256}){1,2}/i;');
  FPack.add('');
  FPack.add('');
  FPack.add('var regexes = {};');
  FPack.add('');
  FPack.add('function addRegexToken (token, regex, strictRegex) {');
  FPack.add('    regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {');
  FPack.add('        return (isStrict && strictRegex) ? strictRegex : regex;');
  FPack.add('    };');
  FPack.add('}');
  FPack.add('');
  FPack.add('function getParseRegexForToken (token, config) {');
  FPack.add('    if (!hasOwnProp(regexes, token)) {');
  FPack.add('        return new RegExp(unescapeFormat(token));');
  FPack.add('    }');
  FPack.add('');
  FPack.add('    return regexes[token](config._strict, config._locale);');
  FPack.add('}');
  FPack.add('');
end;

procedure TChartbundleJS.ChartbundleJS_8;
begin
  FPack.add('// Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript');
  FPack.add('function unescapeFormat(s) {');
  FPack.add('    return regexEscape(s.replace(''\\'', '''').replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g, function (matched, p1, p2, p3, p4) {');
  FPack.add('        return p1 || p2 || p3 || p4;');
  FPack.add('    }));');
  FPack.add('}');
  FPack.add('');
  FPack.add('function regexEscape(s) {');
  FPack.add('    return s.replace(/[-\/\\^$*+?.()|[\]{}]/g, ''\\$&'');');
  FPack.add('}');
  FPack.add('');
  FPack.add('var tokens = {};');
  FPack.add('');
  FPack.add('function addParseToken (token, callback) {');
  FPack.add('    var i, func = callback;');
  FPack.add('    if (typeof token === ''string'') {');
  FPack.add('        token = [token];');
  FPack.add('    }');
  FPack.add('    if (isNumber(callback)) {');
  FPack.add('        func = function (input, array) {');
  FPack.add('            array[callback] = toInt(input);');
  FPack.add('        };');
  FPack.add('    }');
  FPack.add('    for (i = 0; i < token.length; i++) {');
  FPack.add('        tokens[token[i]] = func;');
  FPack.add('    }');
  FPack.add('}');
  FPack.add('');
  FPack.add('function addWeekParseToken (token, callback) {');
  FPack.add('    addParseToken(token, function (input, array, config, token) {');
  FPack.add('        config._w = config._w || {};');
  FPack.add('        callback(input, config._w, config, token);');
  FPack.add('    });');
  FPack.add('}');
  FPack.add('');
  FPack.add('function addTimeToArrayFromToken(token, input, config) {');
  FPack.add('    if (input != null && hasOwnProp(tokens, token)) {');
  FPack.add('        tokens[token](input, config._a, config, token);');
  FPack.add('    }');
  FPack.add('}');
  FPack.add('');
  FPack.add('var YEAR = 0;');
  FPack.add('var MONTH = 1;');
  FPack.add('var DATE = 2;');
  FPack.add('var HOUR = 3;');
  FPack.add('var MINUTE = 4;');
  FPack.add('var SECOND = 5;');
  FPack.add('var MILLISECOND = 6;');
  FPack.add('var WEEK = 7;');
  FPack.add('var WEEKDAY = 8;');
  FPack.add('');
  FPack.add('// FORMATTING');
  FPack.add('');
  FPack.add('addFormatToken(''Y'', 0, 0, function () {');
  FPack.add('    var y = this.year();');
  FPack.add('    return y <= 9999 ? '''' + y : ''+'' + y;');
  FPack.add('});');
  FPack.add('');
  FPack.add('addFormatToken(0, [''YY'', 2], 0, function () {');
  FPack.add('    return this.year() % 100;');
  FPack.add('});');
  FPack.add('');
  FPack.add('addFormatToken(0, [''YYYY'',   4],       0, ''year'');');
  FPack.add('addFormatToken(0, [''YYYYY'',  5],       0, ''year'');');
  FPack.add('addFormatToken(0, [''YYYYYY'', 6, true], 0, ''year'');');
  FPack.add('');
  FPack.add('// ALIASES');
  FPack.add('');
  FPack.add('addUnitAlias(''year'', ''y'');');
  FPack.add('');
  FPack.add('// PRIORITIES');
  FPack.add('');
  FPack.add('addUnitPriority(''year'', 1);');
  FPack.add('');
  FPack.add('// PARSING');
  FPack.add('');
  FPack.add('addRegexToken(''Y'',      matchSigned);');
  FPack.add('addRegexToken(''YY'',     match1to2, match2);');
  FPack.add('addRegexToken(''YYYY'',   match1to4, match4);');
  FPack.add('addRegexToken(''YYYYY'',  match1to6, match6);');
  FPack.add('addRegexToken(''YYYYYY'', match1to6, match6);');
  FPack.add('');
  FPack.add('addParseToken([''YYYYY'', ''YYYYYY''], YEAR);');
  FPack.add('addParseToken(''YYYY'', function (input, array) {');
  FPack.add('    array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);');
  FPack.add('});');
  FPack.add('addParseToken(''YY'', function (input, array) {');
  FPack.add('    array[YEAR] = hooks.parseTwoDigitYear(input);');
  FPack.add('});');
  FPack.add('addParseToken(''Y'', function (input, array) {');
  FPack.add('    array[YEAR] = parseInt(input, 10);');
  FPack.add('});');
  FPack.add('');
  FPack.add('// HELPERS');
  FPack.add('');
  FPack.add('function daysInYear(year) {');
  FPack.add('    return isLeapYear(year) ? 366 : 365;');
  FPack.add('}');
  FPack.add('');
  FPack.add('function isLeapYear(year) {');
  FPack.add('    return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;');
  FPack.add('}');
  FPack.add('');
  FPack.add('// HOOKS');
  FPack.add('');
  FPack.add('hooks.parseTwoDigitYear = function (input) {');
  FPack.add('    return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);');
  FPack.add('};');
  FPack.add('');
  FPack.add('// MOMENTS');
  FPack.add('');
  FPack.add('var getSetYear = makeGetSet(''FullYear'', true);');
  FPack.add('');
  FPack.add('function getIsLeapYear () {');
  FPack.add('    return isLeapYear(this.year());');
  FPack.add('}');
  FPack.add('');
  FPack.add('function makeGetSet (unit, keepTime) {');
  FPack.add('    return function (value) {');
  FPack.add('        if (value != null) {');
  FPack.add('            set$1(this, unit, value);');
  FPack.add('            hooks.updateOffset(this, keepTime);');
  FPack.add('            return this;');
  FPack.add('        } else {');
  FPack.add('            return get(this, unit);');
  FPack.add('        }');
  FPack.add('    };');
  FPack.add('}');
  FPack.add('');
  FPack.add('function get (mom, unit) {');
  FPack.add('    return mom.isValid() ?');
  FPack.add('        mom._d[''get'' + (mom._isUTC ? ''UTC'' : '''') + unit]() : NaN;');
  FPack.add('}');
  FPack.add('');
  FPack.add('function set$1 (mom, unit, value) {');
  FPack.add('    if (mom.isValid() && !isNaN(value)) {');
  FPack.add('        if (unit === ''FullYear'' && isLeapYear(mom.year()) && mom.month() === 1 && mom.date() === 29) {');
  FPack.add('            mom._d[''set'' + (mom._isUTC ? ''UTC'' : '''') + unit](value, mom.month(), daysInMonth(value, mom.month()));');
  FPack.add('        }');
  FPack.add('        else {');
  FPack.add('            mom._d[''set'' + (mom._isUTC ? ''UTC'' : '''') + unit](value);');
  FPack.add('        }');
  FPack.add('    }');
  FPack.add('}');
  FPack.add('');
  FPack.add('// MOMENTS');
  FPack.add('');
  FPack.add('function stringGet (units) {');
  FPack.add('    units = normalizeUnits(units);');
  FPack.add('    if (isFunction(this[units])) {');
  FPack.add('        return this[units]();');
  FPack.add('    }');
  FPack.add('    return this;');
  FPack.add('}');
  FPack.add('');
  FPack.add('');
  FPack.add('function stringSet (units, value) {');
  FPack.add('    if (typeof units === ''object'') {');
  FPack.add('        units = normalizeObjectUnits(units);');
  FPack.add('        var prioritized = getPrioritizedUnits(units);');
  FPack.add('        for (var i = 0; i < prioritized.length; i++) {');
  FPack.add('            this[prioritized[i].unit](units[prioritized[i].unit]);');
  FPack.add('        }');
  FPack.add('    } else {');
  FPack.add('        units = normalizeUnits(units);');
  FPack.add('        if (isFunction(this[units])) {');
  FPack.add('            return this[units](value);');
  FPack.add('        }');
  FPack.add('    }');
  FPack.add('    return this;');
  FPack.add('}');
  FPack.add('');
  FPack.add('function mod(n, x) {');
  FPack.add('    return ((n % x) + x) % x;');
  FPack.add('}');
  FPack.add('');
  FPack.add('var indexOf;');
  FPack.add('');
  FPack.add('if (Array.prototype.indexOf) {');
  FPack.add('    indexOf = Array.prototype.indexOf;');
  FPack.add('} else {');
  FPack.add('    indexOf = function (o) {');
  FPack.add('        // I know');
  FPack.add('        var i;');
  FPack.add('        for (i = 0; i < this.length; ++i) {');
  FPack.add('            if (this[i] === o) {');
  FPack.add('                return i;');
  FPack.add('            }');
  FPack.add('        }');
  FPack.add('        return -1;');
  FPack.add('    };');
  FPack.add('}');
  FPack.add('');
  FPack.add('function daysInMonth(year, month) {');
  FPack.add('    if (isNaN(year) || isNaN(month)) {');
  FPack.add('        return NaN;');
  FPack.add('    }');
  FPack.add('    var modMonth = mod(month, 12);');
  FPack.add('    year += (month - modMonth) / 12;');
  FPack.add('    return modMonth === 1 ? (isLeapYear(year) ? 29 : 28) : (31 - modMonth % 7 % 2);');
  FPack.add('}');
  FPack.add('');
  FPack.add('// FORMATTING');
  FPack.add('');
  FPack.add('addFormatToken(''M'', [''MM'', 2], ''Mo'', function () {');
  FPack.add('    return this.month() + 1;');
  FPack.add('});');
  FPack.add('');
  FPack.add('addFormatToken(''MMM'', 0, 0, function (format) {');
  FPack.add('    return this.localeData().monthsShort(this, format);');
  FPack.add('});');
  FPack.add('');
  FPack.add('addFormatToken(''MMMM'', 0, 0, function (format) {');
  FPack.add('    return this.localeData().months(this, format);');
  FPack.add('});');
  FPack.add('');
  FPack.add('// ALIASES');
  FPack.add('');
  FPack.add('addUnitAlias(''month'', ''M'');');
  FPack.add('');
  FPack.add('// PRIORITY');
  FPack.add('');
  FPack.add('addUnitPriority(''month'', 8);');
  FPack.add('');
  FPack.add('// PARSING');
  FPack.add('');
  FPack.add('addRegexToken(''M'',    match1to2);');
  FPack.add('addRegexToken(''MM'',   match1to2, match2);');
  FPack.add('addRegexToken(''MMM'',  function (isStrict, locale) {');
  FPack.add('    return locale.monthsShortRegex(isStrict);');
  FPack.add('});');
  FPack.add('addRegexToken(''MMMM'', function (isStrict, locale) {');
  FPack.add('    return locale.monthsRegex(isStrict);');
  FPack.add('});');
  FPack.add('');
  FPack.add('addParseToken([''M'', ''MM''], function (input, array) {');
  FPack.add('    array[MONTH] = toInt(input) - 1;');
  FPack.add('});');
  FPack.add('');
  FPack.add('addParseToken([''MMM'', ''MMMM''], function (input, array, config, token) {');
  FPack.add('    var month = config._locale.monthsParse(input, token, config._strict);');
  FPack.add('    // if we didn''t find a month name, mark the date as invalid.');
  FPack.add('    if (month != null) {');
  FPack.add('        array[MONTH] = month;');
  FPack.add('    } else {');
  FPack.add('        getParsingFlags(config).invalidMonth = input;');
  FPack.add('    }');
  FPack.add('});');
  FPack.add('');
  FPack.add('// LOCALES');
  FPack.add('');
  FPack.add('var MONTHS_IN_FORMAT = /D[oD]?(\[[^\[\]]*\]|\s)+MMMM?/;');
  FPack.add('var defaultLocaleMonths = ''January_February_March_April_May_June_July_August_September_October_November_December''.split(''_'');');
  FPack.add('function localeMonths (m, format) {');
  FPack.add('    if (!m) {');
  FPack.add('        return isArray(this._months) ? this._months :');
  FPack.add('            this._months[''standalone''];');
  FPack.add('    }');
  FPack.add('    return isArray(this._months) ? this._months[m.month()] :');
  FPack.add('        this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? ''format'' : ''standalone''][m.month()];');
  FPack.add('}');
  FPack.add('');
  FPack.add('var defaultLocaleMonthsShort = ''Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec''.split(''_'');');
  FPack.add('function localeMonthsShort (m, format) {');
  FPack.add('    if (!m) {');
  FPack.add('        return isArray(this._monthsShort) ? this._monthsShort :');
  FPack.add('            this._monthsShort[''standalone''];');
  FPack.add('    }');
  FPack.add('    return isArray(this._monthsShort) ? this._monthsShort[m.month()] :');
  FPack.add('        this._monthsShort[MONTHS_IN_FORMAT.test(format) ? ''format'' : ''standalone''][m.month()];');
  FPack.add('}');
  FPack.add('');
  FPack.add('function handleStrictParse(monthName, format, strict) {');
  FPack.add('    var i, ii, mom, llc = monthName.toLocaleLowerCase();');
  FPack.add('    if (!this._monthsParse) {');
  FPack.add('        // this is not used');
  FPack.add('        this._monthsParse = [];');
  FPack.add('        this._longMonthsParse = [];');
  FPack.add('        this._shortMonthsParse = [];');
  FPack.add('        for (i = 0; i < 12; ++i) {');
  FPack.add('            mom = createUTC([2000, i]);');
  FPack.add('            this._shortMonthsParse[i] = this.monthsShort(mom, '''').toLocaleLowerCase();');
  FPack.add('            this._longMonthsParse[i] = this.months(mom, '''').toLocaleLowerCase();');
  FPack.add('        }');
  FPack.add('    }');
  FPack.add('');
  FPack.add('    if (strict) {');
  FPack.add('        if (format === ''MMM'') {');
  FPack.add('            ii = indexOf.call(this._shortMonthsParse, llc);');
  FPack.add('            return ii !== -1 ? ii : null;');
  FPack.add('        } else {');
  FPack.add('            ii = indexOf.call(this._longMonthsParse, llc);');
  FPack.add('            return ii !== -1 ? ii : null;');
  FPack.add('        }');
  FPack.add('    } else {');
  FPack.add('        if (format === ''MMM'') {');
  FPack.add('            ii = indexOf.call(this._shortMonthsParse, llc);');
  FPack.add('            if (ii !== -1) {');
  FPack.add('                return ii;');
  FPack.add('            }');
  FPack.add('            ii = indexOf.call(this._longMonthsParse, llc);');
  FPack.add('            return ii !== -1 ? ii : null;');
  FPack.add('        } else {');
  FPack.add('            ii = indexOf.call(this._longMonthsParse, llc);');
  FPack.add('            if (ii !== -1) {');
  FPack.add('                return ii;');
  FPack.add('            }');
  FPack.add('            ii = indexOf.call(this._shortMonthsParse, llc);');
  FPack.add('            return ii !== -1 ? ii : null;');
  FPack.add('        }');
  FPack.add('    }');
  FPack.add('}');
  FPack.add('');
  FPack.add('function localeMonthsParse (monthName, format, strict) {');
  FPack.add('    var i, mom, regex;');
  FPack.add('');
  FPack.add('    if (this._monthsParseExact) {');
  FPack.add('        return handleStrictParse.call(this, monthName, format, strict);');
  FPack.add('    }');
  FPack.add('');
  FPack.add('    if (!this._monthsParse) {');
  FPack.add('        this._monthsParse = [];');
  FPack.add('        this._longMonthsParse = [];');
  FPack.add('        this._shortMonthsParse = [];');
  FPack.add('    }');
  FPack.add('');
  FPack.add('    // TODO: add sorting');
  FPack.add('    // Sorting makes sure if one month (or abbr) is a prefix of another');
  FPack.add('    // see sorting in computeMonthsParse');
  FPack.add('    for (i = 0; i < 12; i++) {');
  FPack.add('        // make the regex if we don''t have it already');
  FPack.add('        mom = createUTC([2000, i]);');
  FPack.add('        if (strict && !this._longMonthsParse[i]) {');
  FPack.add('            this._longMonthsParse[i] = new RegExp(''^'' + this.months(mom, '''').replace(''.'', '''') + ''$'', ''i'');');
  FPack.add('            this._shortMonthsParse[i] = new RegExp(''^'' + this.monthsShort(mom, '''').replace(''.'', '''') + ''$'', ''i'');');
  FPack.add('        }');
end;

procedure TChartbundleJS.ChartbundleJS_9;
begin
  FPack.add('        if (!strict && !this._monthsParse[i]) {');
  FPack.add('            regex = ''^'' + this.months(mom, '''') + ''|^'' + this.monthsShort(mom, '''');');
  FPack.add('            this._monthsParse[i] = new RegExp(regex.replace(''.'', ''''), ''i'');');
  FPack.add('        }');
  FPack.add('        // test the regex');
  FPack.add('        if (strict && format === ''MMMM'' && this._longMonthsParse[i].test(monthName)) {');
  FPack.add('            return i;');
  FPack.add('        } else if (strict && format === ''MMM'' && this._shortMonthsParse[i].test(monthName)) {');
  FPack.add('            return i;');
  FPack.add('        } else if (!strict && this._monthsParse[i].test(monthName)) {');
  FPack.add('            return i;');
  FPack.add('        }');
  FPack.add('    }');
  FPack.add('}');
  FPack.add('');
  FPack.add('// MOMENTS');
  FPack.add('');
  FPack.add('function setMonth (mom, value) {');
  FPack.add('    var dayOfMonth;');
  FPack.add('');
  FPack.add('    if (!mom.isValid()) {');
  FPack.add('        // No op');
  FPack.add('        return mom;');
  FPack.add('    }');
  FPack.add('');
  FPack.add('    if (typeof value === ''string'') {');
  FPack.add('        if (/^\d+$/.test(value)) {');
  FPack.add('            value = toInt(value);');
  FPack.add('        } else {');
  FPack.add('            value = mom.localeData().monthsParse(value);');
  FPack.add('            // TODO: Another silent failure?');
  FPack.add('            if (!isNumber(value)) {');
  FPack.add('                return mom;');
  FPack.add('            }');
  FPack.add('        }');
  FPack.add('    }');
  FPack.add('');
  FPack.add('    dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));');
  FPack.add('    mom._d[''set'' + (mom._isUTC ? ''UTC'' : '''') + ''Month''](value, dayOfMonth);');
  FPack.add('    return mom;');
  FPack.add('}');
  FPack.add('');
  FPack.add('function getSetMonth (value) {');
  FPack.add('    if (value != null) {');
  FPack.add('        setMonth(this, value);');
  FPack.add('        hooks.updateOffset(this, true);');
  FPack.add('        return this;');
  FPack.add('    } else {');
  FPack.add('        return get(this, ''Month'');');
  FPack.add('    }');
  FPack.add('}');
  FPack.add('');
  FPack.add('function getDaysInMonth () {');
  FPack.add('    return daysInMonth(this.year(), this.month());');
  FPack.add('}');
  FPack.add('');
  FPack.add('var defaultMonthsShortRegex = matchWord;');
  FPack.add('function monthsShortRegex (isStrict) {');
  FPack.add('    if (this._monthsParseExact) {');
  FPack.add('        if (!hasOwnProp(this, ''_monthsRegex'')) {');
  FPack.add('            computeMonthsParse.call(this);');
  FPack.add('        }');
  FPack.add('        if (isStrict) {');
  FPack.add('            return this._monthsShortStrictRegex;');
  FPack.add('        } else {');
  FPack.add('            return this._monthsShortRegex;');
  FPack.add('        }');
  FPack.add('    } else {');
  FPack.add('        if (!hasOwnProp(this, ''_monthsShortRegex'')) {');
  FPack.add('            this._monthsShortRegex = defaultMonthsShortRegex;');
  FPack.add('        }');
  FPack.add('        return this._monthsShortStrictRegex && isStrict ?');
  FPack.add('            this._monthsShortStrictRegex : this._monthsShortRegex;');
  FPack.add('    }');
  FPack.add('}');
  FPack.add('');
  FPack.add('var defaultMonthsRegex = matchWord;');
  FPack.add('function monthsRegex (isStrict) {');
  FPack.add('    if (this._monthsParseExact) {');
  FPack.add('        if (!hasOwnProp(this, ''_monthsRegex'')) {');
  FPack.add('            computeMonthsParse.call(this);');
  FPack.add('        }');
  FPack.add('        if (isStrict) {');
  FPack.add('            return this._monthsStrictRegex;');
  FPack.add('        } else {');
  FPack.add('            return this._monthsRegex;');
  FPack.add('        }');
  FPack.add('    } else {');
  FPack.add('        if (!hasOwnProp(this, ''_monthsRegex'')) {');
  FPack.add('            this._monthsRegex = defaultMonthsRegex;');
  FPack.add('        }');
  FPack.add('        return this._monthsStrictRegex && isStrict ?');
  FPack.add('            this._monthsStrictRegex : this._monthsRegex;');
  FPack.add('    }');
  FPack.add('}');
  FPack.add('');
  FPack.add('function computeMonthsParse () {');
  FPack.add('    function cmpLenRev(a, b) {');
  FPack.add('        return b.length - a.length;');
  FPack.add('    }');
  FPack.add('');
  FPack.add('    var shortPieces = [], longPieces = [], mixedPieces = [],');
  FPack.add('        i, mom;');
  FPack.add('    for (i = 0; i < 12; i++) {');
  FPack.add('        // make the regex if we don''t have it already');
  FPack.add('        mom = createUTC([2000, i]);');
  FPack.add('        shortPieces.push(this.monthsShort(mom, ''''));');
  FPack.add('        longPieces.push(this.months(mom, ''''));');
  FPack.add('        mixedPieces.push(this.months(mom, ''''));');
  FPack.add('        mixedPieces.push(this.monthsShort(mom, ''''));');
  FPack.add('    }');
  FPack.add('    // Sorting makes sure if one month (or abbr) is a prefix of another it');
  FPack.add('    // will match the longer piece.');
  FPack.add('    shortPieces.sort(cmpLenRev);');
  FPack.add('    longPieces.sort(cmpLenRev);');
  FPack.add('    mixedPieces.sort(cmpLenRev);');
  FPack.add('    for (i = 0; i < 12; i++) {');
  FPack.add('        shortPieces[i] = regexEscape(shortPieces[i]);');
  FPack.add('        longPieces[i] = regexEscape(longPieces[i]);');
  FPack.add('    }');
  FPack.add('    for (i = 0; i < 24; i++) {');
  FPack.add('        mixedPieces[i] = regexEscape(mixedPieces[i]);');
  FPack.add('    }');
  FPack.add('');
  FPack.add('    this._monthsRegex = new RegExp(''^('' + mixedPieces.join(''|'') + '')'', ''i'');');
  FPack.add('    this._monthsShortRegex = this._monthsRegex;');
  FPack.add('    this._monthsStrictRegex = new RegExp(''^('' + longPieces.join(''|'') + '')'', ''i'');');
  FPack.add('    this._monthsShortStrictRegex = new RegExp(''^('' + shortPieces.join(''|'') + '')'', ''i'');');
  FPack.add('}');
  FPack.add('');
  FPack.add('function createDate (y, m, d, h, M, s, ms) {');
  FPack.add('    // can''t just apply() to create a date:');
  FPack.add('    // https://stackoverflow.com/q/181348');
  FPack.add('    var date = new Date(y, m, d, h, M, s, ms);');
  FPack.add('');
  FPack.add('    // the date constructor remaps years 0-99 to 1900-1999');
  FPack.add('    if (y < 100 && y >= 0 && isFinite(date.getFullYear())) {');
  FPack.add('        date.setFullYear(y);');
  FPack.add('    }');
  FPack.add('    return date;');
  FPack.add('}');
  FPack.add('');
  FPack.add('function createUTCDate (y) {');
  FPack.add('    var date = new Date(Date.UTC.apply(null, arguments));');
  FPack.add('');
  FPack.add('    // the Date.UTC function remaps years 0-99 to 1900-1999');
  FPack.add('    if (y < 100 && y >= 0 && isFinite(date.getUTCFullYear())) {');
  FPack.add('        date.setUTCFullYear(y);');
  FPack.add('    }');
  FPack.add('    return date;');
  FPack.add('}');
  FPack.add('');
  FPack.add('// start-of-first-week - start-of-year');
  FPack.add('function firstWeekOffset(year, dow, doy) {');
  FPack.add('    var // first-week day -- which january is always in the first week (4 for iso, 1 for other)');
  FPack.add('        fwd = 7 + dow - doy,');
  FPack.add('        // first-week day local weekday -- which local weekday is fwd');
  FPack.add('        fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;');
  FPack.add('');
  FPack.add('    return -fwdlw + fwd - 1;');
  FPack.add('}');
  FPack.add('');
  FPack.add('// https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday');
  FPack.add('function dayOfYearFromWeeks(year, week, weekday, dow, doy) {');
  FPack.add('    var localWeekday = (7 + weekday - dow) % 7,');
  FPack.add('        weekOffset = firstWeekOffset(year, dow, doy),');
  FPack.add('        dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,');
  FPack.add('        resYear, resDayOfYear;');
  FPack.add('');
  FPack.add('    if (dayOfYear <= 0) {');
  FPack.add('        resYear = year - 1;');
  FPack.add('        resDayOfYear = daysInYear(resYear) + dayOfYear;');
  FPack.add('    } else if (dayOfYear > daysInYear(year)) {');
  FPack.add('        resYear = year + 1;');
  FPack.add('        resDayOfYear = dayOfYear - daysInYear(year);');
  FPack.add('    } else {');
  FPack.add('        resYear = year;');
  FPack.add('        resDayOfYear = dayOfYear;');
  FPack.add('    }');
  FPack.add('');
  FPack.add('    return {');
  FPack.add('        year: resYear,');
  FPack.add('        dayOfYear: resDayOfYear');
  FPack.add('    };');
  FPack.add('}');
  FPack.add('');
  FPack.add('function weekOfYear(mom, dow, doy) {');
  FPack.add('    var weekOffset = firstWeekOffset(mom.year(), dow, doy),');
  FPack.add('        week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,');
  FPack.add('        resWeek, resYear;');
  FPack.add('');
  FPack.add('    if (week < 1) {');
  FPack.add('        resYear = mom.year() - 1;');
  FPack.add('        resWeek = week + weeksInYear(resYear, dow, doy);');
  FPack.add('    } else if (week > weeksInYear(mom.year(), dow, doy)) {');
  FPack.add('        resWeek = week - weeksInYear(mom.year(), dow, doy);');
  FPack.add('        resYear = mom.year() + 1;');
  FPack.add('    } else {');
  FPack.add('        resYear = mom.year();');
  FPack.add('        resWeek = week;');
  FPack.add('    }');
  FPack.add('');
  FPack.add('    return {');
  FPack.add('        week: resWeek,');
  FPack.add('        year: resYear');
  FPack.add('    };');
  FPack.add('}');
  FPack.add('');
  FPack.add('function weeksInYear(year, dow, doy) {');
  FPack.add('    var weekOffset = firstWeekOffset(year, dow, doy),');
  FPack.add('        weekOffsetNext = firstWeekOffset(year + 1, dow, doy);');
  FPack.add('    return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;');
  FPack.add('}');
  FPack.add('');
  FPack.add('// FORMATTING');
  FPack.add('');
  FPack.add('addFormatToken(''w'', [''ww'', 2], ''wo'', ''week'');');
  FPack.add('addFormatToken(''W'', [''WW'', 2], ''Wo'', ''isoWeek'');');
  FPack.add('');
  FPack.add('// ALIASES');
  FPack.add('');
  FPack.add('addUnitAlias(''week'', ''w'');');
  FPack.add('addUnitAlias(''isoWeek'', ''W'');');
  FPack.add('');
  FPack.add('// PRIORITIES');
  FPack.add('');
  FPack.add('addUnitPriority(''week'', 5);');
  FPack.add('addUnitPriority(''isoWeek'', 5);');
  FPack.add('');
  FPack.add('// PARSING');
  FPack.add('');
  FPack.add('addRegexToken(''w'',  match1to2);');
  FPack.add('addRegexToken(''ww'', match1to2, match2);');
  FPack.add('addRegexToken(''W'',  match1to2);');
  FPack.add('addRegexToken(''WW'', match1to2, match2);');
  FPack.add('');
  FPack.add('addWeekParseToken([''w'', ''ww'', ''W'', ''WW''], function (input, week, config, token) {');
  FPack.add('    week[token.substr(0, 1)] = toInt(input);');
  FPack.add('});');
  FPack.add('');
  FPack.add('// HELPERS');
  FPack.add('');
  FPack.add('// LOCALES');
  FPack.add('');
  FPack.add('function localeWeek (mom) {');
  FPack.add('    return weekOfYear(mom, this._week.dow, this._week.doy).week;');
  FPack.add('}');
  FPack.add('');
  FPack.add('var defaultLocaleWeek = {');
  FPack.add('    dow : 0, // Sunday is the first day of the week.');
  FPack.add('    doy : 6  // The week that contains Jan 1st is the first week of the year.');
  FPack.add('};');
  FPack.add('');
  FPack.add('function localeFirstDayOfWeek () {');
  FPack.add('    return this._week.dow;');
  FPack.add('}');
  FPack.add('');
  FPack.add('function localeFirstDayOfYear () {');
  FPack.add('    return this._week.doy;');
  FPack.add('}');
  FPack.add('');
  FPack.add('// MOMENTS');
  FPack.add('');
  FPack.add('function getSetWeek (input) {');
  FPack.add('    var week = this.localeData().week(this);');
  FPack.add('    return input == null ? week : this.add((input - week) * 7, ''d'');');
  FPack.add('}');
  FPack.add('');
  FPack.add('function getSetISOWeek (input) {');
  FPack.add('    var week = weekOfYear(this, 1, 4).week;');
  FPack.add('    return input == null ? week : this.add((input - week) * 7, ''d'');');
  FPack.add('}');
  FPack.add('');
  FPack.add('// FORMATTING');
  FPack.add('');
  FPack.add('addFormatToken(''d'', 0, ''do'', ''day'');');
  FPack.add('');
  FPack.add('addFormatToken(''dd'', 0, 0, function (format) {');
  FPack.add('    return this.localeData().weekdaysMin(this, format);');
  FPack.add('});');
  FPack.add('');
  FPack.add('addFormatToken(''ddd'', 0, 0, function (format) {');
  FPack.add('    return this.localeData().weekdaysShort(this, format);');
  FPack.add('});');
  FPack.add('');
  FPack.add('addFormatToken(''dddd'', 0, 0, function (format) {');
  FPack.add('    return this.localeData().weekdays(this, format);');
  FPack.add('});');
  FPack.add('');
  FPack.add('addFormatToken(''e'', 0, 0, ''weekday'');');
  FPack.add('addFormatToken(''E'', 0, 0, ''isoWeekday'');');
  FPack.add('');
  FPack.add('// ALIASES');
  FPack.add('');
  FPack.add('addUnitAlias(''day'', ''d'');');
  FPack.add('addUnitAlias(''weekday'', ''e'');');
  FPack.add('addUnitAlias(''isoWeekday'', ''E'');');
  FPack.add('');
  FPack.add('// PRIORITY');
  FPack.add('addUnitPriority(''day'', 11);');
  FPack.add('addUnitPriority(''weekday'', 11);');
  FPack.add('addUnitPriority(''isoWeekday'', 11);');
  FPack.add('');
  FPack.add('// PARSING');
  FPack.add('');
  FPack.add('addRegexToken(''d'',    match1to2);');
  FPack.add('addRegexToken(''e'',    match1to2);');
  FPack.add('addRegexToken(''E'',    match1to2);');
  FPack.add('addRegexToken(''dd'',   function (isStrict, locale) {');
  FPack.add('    return locale.weekdaysMinRegex(isStrict);');
  FPack.add('});');
  FPack.add('addRegexToken(''ddd'',   function (isStrict, locale) {');
  FPack.add('    return locale.weekdaysShortRegex(isStrict);');
  FPack.add('});');
  FPack.add('addRegexToken(''dddd'',   function (isStrict, locale) {');
  FPack.add('    return locale.weekdaysRegex(isStrict);');
  FPack.add('});');
  FPack.add('');
  FPack.add('addWeekParseToken([''dd'', ''ddd'', ''dddd''], function (input, week, config, token) {');
  FPack.add('    var weekday = config._locale.weekdaysParse(input, token, config._strict);');
  FPack.add('    // if we didn''t get a weekday name, mark the date as invalid');
  FPack.add('    if (weekday != null) {');
  FPack.add('        week.d = weekday;');
  FPack.add('    } else {');
  FPack.add('        getParsingFlags(config).invalidWeekday = input;');
  FPack.add('    }');
  FPack.add('});');
  FPack.add('');
  FPack.add('addWeekParseToken([''d'', ''e'', ''E''], function (input, week, config, token) {');
  FPack.add('    week[token] = toInt(input);');
  FPack.add('});');
  FPack.add('');
  FPack.add('// HELPERS');
  FPack.add('');
  FPack.add('function parseWeekday(input, locale) {');
  FPack.add('    if (typeof input !== ''string'') {');
end;

procedure TChartbundleJS.ChartbundleJS_10;
begin
  FPack.add('        return input;');
  FPack.add('    }');
  FPack.add('');
  FPack.add('    if (!isNaN(input)) {');
  FPack.add('        return parseInt(input, 10);');
  FPack.add('    }');
  FPack.add('');
  FPack.add('    input = locale.weekdaysParse(input);');
  FPack.add('    if (typeof input === ''number'') {');
  FPack.add('        return input;');
  FPack.add('    }');
  FPack.add('');
  FPack.add('    return null;');
  FPack.add('}');
  FPack.add('');
  FPack.add('function parseIsoWeekday(input, locale) {');
  FPack.add('    if (typeof input === ''string'') {');
  FPack.add('        return locale.weekdaysParse(input) % 7 || 7;');
  FPack.add('    }');
  FPack.add('    return isNaN(input) ? null : input;');
  FPack.add('}');
  FPack.add('');
  FPack.add('// LOCALES');
  FPack.add('');
  FPack.add('var defaultLocaleWeekdays = ''Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday''.split(''_'');');
  FPack.add('function localeWeekdays (m, format) {');
  FPack.add('    if (!m) {');
  FPack.add('        return isArray(this._weekdays) ? this._weekdays :');
  FPack.add('            this._weekdays[''standalone''];');
  FPack.add('    }');
  FPack.add('    return isArray(this._weekdays) ? this._weekdays[m.day()] :');
  FPack.add('        this._weekdays[this._weekdays.isFormat.test(format) ? ''format'' : ''standalone''][m.day()];');
  FPack.add('}');
  FPack.add('');
  FPack.add('var defaultLocaleWeekdaysShort = ''Sun_Mon_Tue_Wed_Thu_Fri_Sat''.split(''_'');');
  FPack.add('function localeWeekdaysShort (m) {');
  FPack.add('    return (m) ? this._weekdaysShort[m.day()] : this._weekdaysShort;');
  FPack.add('}');
  FPack.add('');
  FPack.add('var defaultLocaleWeekdaysMin = ''Su_Mo_Tu_We_Th_Fr_Sa''.split(''_'');');
  FPack.add('function localeWeekdaysMin (m) {');
  FPack.add('    return (m) ? this._weekdaysMin[m.day()] : this._weekdaysMin;');
  FPack.add('}');
  FPack.add('');
  FPack.add('function handleStrictParse$1(weekdayName, format, strict) {');
  FPack.add('    var i, ii, mom, llc = weekdayName.toLocaleLowerCase();');
  FPack.add('    if (!this._weekdaysParse) {');
  FPack.add('        this._weekdaysParse = [];');
  FPack.add('        this._shortWeekdaysParse = [];');
  FPack.add('        this._minWeekdaysParse = [];');
  FPack.add('');
  FPack.add('        for (i = 0; i < 7; ++i) {');
  FPack.add('            mom = createUTC([2000, 1]).day(i);');
  FPack.add('            this._minWeekdaysParse[i] = this.weekdaysMin(mom, '''').toLocaleLowerCase();');
  FPack.add('            this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '''').toLocaleLowerCase();');
  FPack.add('            this._weekdaysParse[i] = this.weekdays(mom, '''').toLocaleLowerCase();');
  FPack.add('        }');
  FPack.add('    }');
  FPack.add('');
  FPack.add('    if (strict) {');
  FPack.add('        if (format === ''dddd'') {');
  FPack.add('            ii = indexOf.call(this._weekdaysParse, llc);');
  FPack.add('            return ii !== -1 ? ii : null;');
  FPack.add('        } else if (format === ''ddd'') {');
  FPack.add('            ii = indexOf.call(this._shortWeekdaysParse, llc);');
  FPack.add('            return ii !== -1 ? ii : null;');
  FPack.add('        } else {');
  FPack.add('            ii = indexOf.call(this._minWeekdaysParse, llc);');
  FPack.add('            return ii !== -1 ? ii : null;');
  FPack.add('        }');
  FPack.add('    } else {');
  FPack.add('        if (format === ''dddd'') {');
  FPack.add('            ii = indexOf.call(this._weekdaysParse, llc);');
  FPack.add('            if (ii !== -1) {');
  FPack.add('                return ii;');
  FPack.add('            }');
  FPack.add('            ii = indexOf.call(this._shortWeekdaysParse, llc);');
  FPack.add('            if (ii !== -1) {');
  FPack.add('                return ii;');
  FPack.add('            }');
  FPack.add('            ii = indexOf.call(this._minWeekdaysParse, llc);');
  FPack.add('            return ii !== -1 ? ii : null;');
  FPack.add('        } else if (format === ''ddd'') {');
  FPack.add('            ii = indexOf.call(this._shortWeekdaysParse, llc);');
  FPack.add('            if (ii !== -1) {');
  FPack.add('                return ii;');
  FPack.add('            }');
  FPack.add('            ii = indexOf.call(this._weekdaysParse, llc);');
  FPack.add('            if (ii !== -1) {');
  FPack.add('                return ii;');
  FPack.add('            }');
  FPack.add('            ii = indexOf.call(this._minWeekdaysParse, llc);');
  FPack.add('            return ii !== -1 ? ii : null;');
  FPack.add('        } else {');
  FPack.add('            ii = indexOf.call(this._minWeekdaysParse, llc);');
  FPack.add('            if (ii !== -1) {');
  FPack.add('                return ii;');
  FPack.add('            }');
  FPack.add('            ii = indexOf.call(this._weekdaysParse, llc);');
  FPack.add('            if (ii !== -1) {');
  FPack.add('                return ii;');
  FPack.add('            }');
  FPack.add('            ii = indexOf.call(this._shortWeekdaysParse, llc);');
  FPack.add('            return ii !== -1 ? ii : null;');
  FPack.add('        }');
  FPack.add('    }');
  FPack.add('}');
  FPack.add('');
  FPack.add('function localeWeekdaysParse (weekdayName, format, strict) {');
  FPack.add('    var i, mom, regex;');
  FPack.add('');
  FPack.add('    if (this._weekdaysParseExact) {');
  FPack.add('        return handleStrictParse$1.call(this, weekdayName, format, strict);');
  FPack.add('    }');
  FPack.add('');
  FPack.add('    if (!this._weekdaysParse) {');
  FPack.add('        this._weekdaysParse = [];');
  FPack.add('        this._minWeekdaysParse = [];');
  FPack.add('        this._shortWeekdaysParse = [];');
  FPack.add('        this._fullWeekdaysParse = [];');
  FPack.add('    }');
  FPack.add('');
  FPack.add('    for (i = 0; i < 7; i++) {');
  FPack.add('        // make the regex if we don''t have it already');
  FPack.add('');
  FPack.add('        mom = createUTC([2000, 1]).day(i);');
  FPack.add('        if (strict && !this._fullWeekdaysParse[i]) {');
  FPack.add('            this._fullWeekdaysParse[i] = new RegExp(''^'' + this.weekdays(mom, '''').replace(''.'', ''\.?'') + ''$'', ''i'');');
  FPack.add('            this._shortWeekdaysParse[i] = new RegExp(''^'' + this.weekdaysShort(mom, '''').replace(''.'', ''\.?'') + ''$'', ''i'');');
  FPack.add('            this._minWeekdaysParse[i] = new RegExp(''^'' + this.weekdaysMin(mom, '''').replace(''.'', ''\.?'') + ''$'', ''i'');');
  FPack.add('        }');
  FPack.add('        if (!this._weekdaysParse[i]) {');
  FPack.add('            regex = ''^'' + this.weekdays(mom, '''') + ''|^'' + this.weekdaysShort(mom, '''') + ''|^'' + this.weekdaysMin(mom, '''');');
  FPack.add('            this._weekdaysParse[i] = new RegExp(regex.replace(''.'', ''''), ''i'');');
  FPack.add('        }');
  FPack.add('        // test the regex');
  FPack.add('        if (strict && format === ''dddd'' && this._fullWeekdaysParse[i].test(weekdayName)) {');
  FPack.add('            return i;');
  FPack.add('        } else if (strict && format === ''ddd'' && this._shortWeekdaysParse[i].test(weekdayName)) {');
  FPack.add('            return i;');
  FPack.add('        } else if (strict && format === ''dd'' && this._minWeekdaysParse[i].test(weekdayName)) {');
  FPack.add('            return i;');
  FPack.add('        } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {');
  FPack.add('            return i;');
  FPack.add('        }');
  FPack.add('    }');
  FPack.add('}');
  FPack.add('');
  FPack.add('// MOMENTS');
  FPack.add('');
  FPack.add('function getSetDayOfWeek (input) {');
  FPack.add('    if (!this.isValid()) {');
  FPack.add('        return input != null ? this : NaN;');
  FPack.add('    }');
  FPack.add('    var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();');
  FPack.add('    if (input != null) {');
  FPack.add('        input = parseWeekday(input, this.localeData());');
  FPack.add('        return this.add(input - day, ''d'');');
  FPack.add('    } else {');
  FPack.add('        return day;');
  FPack.add('    }');
  FPack.add('}');
  FPack.add('');
  FPack.add('function getSetLocaleDayOfWeek (input) {');
  FPack.add('    if (!this.isValid()) {');
  FPack.add('        return input != null ? this : NaN;');
  FPack.add('    }');
  FPack.add('    var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;');
  FPack.add('    return input == null ? weekday : this.add(input - weekday, ''d'');');
  FPack.add('}');
  FPack.add('');
  FPack.add('function getSetISODayOfWeek (input) {');
  FPack.add('    if (!this.isValid()) {');
  FPack.add('        return input != null ? this : NaN;');
  FPack.add('    }');
  FPack.add('');
  FPack.add('    // behaves the same as moment#day except');
  FPack.add('    // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)');
  FPack.add('    // as a setter, sunday should belong to the previous week.');
  FPack.add('');
  FPack.add('    if (input != null) {');
  FPack.add('        var weekday = parseIsoWeekday(input, this.localeData());');
  FPack.add('        return this.day(this.day() % 7 ? weekday : weekday - 7);');
  FPack.add('    } else {');
  FPack.add('        return this.day() || 7;');
  FPack.add('    }');
  FPack.add('}');
  FPack.add('');
  FPack.add('var defaultWeekdaysRegex = matchWord;');
  FPack.add('function weekdaysRegex (isStrict) {');
  FPack.add('    if (this._weekdaysParseExact) {');
  FPack.add('        if (!hasOwnProp(this, ''_weekdaysRegex'')) {');
  FPack.add('            computeWeekdaysParse.call(this);');
  FPack.add('        }');
  FPack.add('        if (isStrict) {');
  FPack.add('            return this._weekdaysStrictRegex;');
  FPack.add('        } else {');
  FPack.add('            return this._weekdaysRegex;');
  FPack.add('        }');
  FPack.add('    } else {');
  FPack.add('        if (!hasOwnProp(this, ''_weekdaysRegex'')) {');
  FPack.add('            this._weekdaysRegex = defaultWeekdaysRegex;');
  FPack.add('        }');
  FPack.add('        return this._weekdaysStrictRegex && isStrict ?');
  FPack.add('            this._weekdaysStrictRegex : this._weekdaysRegex;');
  FPack.add('    }');
  FPack.add('}');
  FPack.add('');
  FPack.add('var defaultWeekdaysShortRegex = matchWord;');
  FPack.add('function weekdaysShortRegex (isStrict) {');
  FPack.add('    if (this._weekdaysParseExact) {');
  FPack.add('        if (!hasOwnProp(this, ''_weekdaysRegex'')) {');
  FPack.add('            computeWeekdaysParse.call(this);');
  FPack.add('        }');
  FPack.add('        if (isStrict) {');
  FPack.add('            return this._weekdaysShortStrictRegex;');
  FPack.add('        } else {');
  FPack.add('            return this._weekdaysShortRegex;');
  FPack.add('        }');
  FPack.add('    } else {');
  FPack.add('        if (!hasOwnProp(this, ''_weekdaysShortRegex'')) {');
  FPack.add('            this._weekdaysShortRegex = defaultWeekdaysShortRegex;');
  FPack.add('        }');
  FPack.add('        return this._weekdaysShortStrictRegex && isStrict ?');
  FPack.add('            this._weekdaysShortStrictRegex : this._weekdaysShortRegex;');
  FPack.add('    }');
  FPack.add('}');
  FPack.add('');
  FPack.add('var defaultWeekdaysMinRegex = matchWord;');
  FPack.add('function weekdaysMinRegex (isStrict) {');
  FPack.add('    if (this._weekdaysParseExact) {');
  FPack.add('        if (!hasOwnProp(this, ''_weekdaysRegex'')) {');
  FPack.add('            computeWeekdaysParse.call(this);');
  FPack.add('        }');
  FPack.add('        if (isStrict) {');
  FPack.add('            return this._weekdaysMinStrictRegex;');
  FPack.add('        } else {');
  FPack.add('            return this._weekdaysMinRegex;');
  FPack.add('        }');
  FPack.add('    } else {');
  FPack.add('        if (!hasOwnProp(this, ''_weekdaysMinRegex'')) {');
  FPack.add('            this._weekdaysMinRegex = defaultWeekdaysMinRegex;');
  FPack.add('        }');
  FPack.add('        return this._weekdaysMinStrictRegex && isStrict ?');
  FPack.add('            this._weekdaysMinStrictRegex : this._weekdaysMinRegex;');
  FPack.add('    }');
  FPack.add('}');
  FPack.add('');
  FPack.add('');
  FPack.add('function computeWeekdaysParse () {');
  FPack.add('    function cmpLenRev(a, b) {');
  FPack.add('        return b.length - a.length;');
  FPack.add('    }');
  FPack.add('');
  FPack.add('    var minPieces = [], shortPieces = [], longPieces = [], mixedPieces = [],');
  FPack.add('        i, mom, minp, shortp, longp;');
  FPack.add('    for (i = 0; i < 7; i++) {');
  FPack.add('        // make the regex if we don''t have it already');
  FPack.add('        mom = createUTC([2000, 1]).day(i);');
  FPack.add('        minp = this.weekdaysMin(mom, '''');');
  FPack.add('        shortp = this.weekdaysShort(mom, '''');');
  FPack.add('        longp = this.weekdays(mom, '''');');
  FPack.add('        minPieces.push(minp);');
  FPack.add('        shortPieces.push(shortp);');
  FPack.add('        longPieces.push(longp);');
  FPack.add('        mixedPieces.push(minp);');
  FPack.add('        mixedPieces.push(shortp);');
  FPack.add('        mixedPieces.push(longp);');
  FPack.add('    }');
  FPack.add('    // Sorting makes sure if one weekday (or abbr) is a prefix of another it');
  FPack.add('    // will match the longer piece.');
  FPack.add('    minPieces.sort(cmpLenRev);');
  FPack.add('    shortPieces.sort(cmpLenRev);');
  FPack.add('    longPieces.sort(cmpLenRev);');
  FPack.add('    mixedPieces.sort(cmpLenRev);');
  FPack.add('    for (i = 0; i < 7; i++) {');
  FPack.add('        shortPieces[i] = regexEscape(shortPieces[i]);');
  FPack.add('        longPieces[i] = regexEscape(longPieces[i]);');
  FPack.add('        mixedPieces[i] = regexEscape(mixedPieces[i]);');
  FPack.add('    }');
  FPack.add('');
  FPack.add('    this._weekdaysRegex = new RegExp(''^('' + mixedPieces.join(''|'') + '')'', ''i'');');
  FPack.add('    this._weekdaysShortRegex = this._weekdaysRegex;');
  FPack.add('    this._weekdaysMinRegex = this._weekdaysRegex;');
  FPack.add('');
  FPack.add('    this._weekdaysStrictRegex = new RegExp(''^('' + longPieces.join(''|'') + '')'', ''i'');');
  FPack.add('    this._weekdaysShortStrictRegex = new RegExp(''^('' + shortPieces.join(''|'') + '')'', ''i'');');
  FPack.add('    this._weekdaysMinStrictRegex = new RegExp(''^('' + minPieces.join(''|'') + '')'', ''i'');');
  FPack.add('}');
  FPack.add('');
  FPack.add('// FORMATTING');
  FPack.add('');
  FPack.add('function hFormat() {');
  FPack.add('    return this.hours() % 12 || 12;');
  FPack.add('}');
  FPack.add('');
  FPack.add('function kFormat() {');
  FPack.add('    return this.hours() || 24;');
  FPack.add('}');
  FPack.add('');
  FPack.add('addFormatToken(''H'', [''HH'', 2], 0, ''hour'');');
  FPack.add('addFormatToken(''h'', [''hh'', 2], 0, hFormat);');
  FPack.add('addFormatToken(''k'', [''kk'', 2], 0, kFormat);');
  FPack.add('');
  FPack.add('addFormatToken(''hmm'', 0, 0, function () {');
  FPack.add('    return '''' + hFormat.apply(this) + zeroFill(this.minutes(), 2);');
  FPack.add('});');
  FPack.add('');
  FPack.add('addFormatToken(''hmmss'', 0, 0, function () {');
  FPack.add('    return '''' + hFormat.apply(this) + zeroFill(this.minutes(), 2) +');
  FPack.add('        zeroFill(this.seconds(), 2);');
  FPack.add('});');
  FPack.add('');
  FPack.add('addFormatToken(''Hmm'', 0, 0, function () {');
  FPack.add('    return '''' + this.hours() + zeroFill(this.minutes(), 2);');
  FPack.add('});');
  FPack.add('');
  FPack.add('addFormatToken(''Hmmss'', 0, 0, function () {');
  FPack.add('    return '''' + this.hours() + zeroFill(this.minutes(), 2) +');
  FPack.add('        zeroFill(this.seconds(), 2);');
  FPack.add('});');
  FPack.add('');
  FPack.add('function meridiem (token, lowercase) {');
  FPack.add('    addFormatToken(token, 0, 0, function () {');
  FPack.add('        return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);');
  FPack.add('    });');
  FPack.add('}');
  FPack.add('');
  FPack.add('meridiem(''a'', true);');
  FPack.add('meridiem(''A'', false);');
  FPack.add('');
  FPack.add('// ALIASES');
  FPack.add('');
  FPack.add('addUnitAlias(''hour'', ''h'');');
  FPack.add('');
  FPack.add('// PRIORITY');
end;

procedure TChartbundleJS.ChartbundleJS_11;
begin
  FPack.add('addUnitPriority(''hour'', 13);');
  FPack.add('');
  FPack.add('// PARSING');
  FPack.add('');
  FPack.add('function matchMeridiem (isStrict, locale) {');
  FPack.add('    return locale._meridiemParse;');
  FPack.add('}');
  FPack.add('');
  FPack.add('addRegexToken(''a'',  matchMeridiem);');
  FPack.add('addRegexToken(''A'',  matchMeridiem);');
  FPack.add('addRegexToken(''H'',  match1to2);');
  FPack.add('addRegexToken(''h'',  match1to2);');
  FPack.add('addRegexToken(''k'',  match1to2);');
  FPack.add('addRegexToken(''HH'', match1to2, match2);');
  FPack.add('addRegexToken(''hh'', match1to2, match2);');
  FPack.add('addRegexToken(''kk'', match1to2, match2);');
  FPack.add('');
  FPack.add('addRegexToken(''hmm'', match3to4);');
  FPack.add('addRegexToken(''hmmss'', match5to6);');
  FPack.add('addRegexToken(''Hmm'', match3to4);');
  FPack.add('addRegexToken(''Hmmss'', match5to6);');
  FPack.add('');
  FPack.add('addParseToken([''H'', ''HH''], HOUR);');
  FPack.add('addParseToken([''k'', ''kk''], function (input, array, config) {');
  FPack.add('    var kInput = toInt(input);');
  FPack.add('    array[HOUR] = kInput === 24 ? 0 : kInput;');
  FPack.add('});');
  FPack.add('addParseToken([''a'', ''A''], function (input, array, config) {');
  FPack.add('    config._isPm = config._locale.isPM(input);');
  FPack.add('    config._meridiem = input;');
  FPack.add('});');
  FPack.add('addParseToken([''h'', ''hh''], function (input, array, config) {');
  FPack.add('    array[HOUR] = toInt(input);');
  FPack.add('    getParsingFlags(config).bigHour = true;');
  FPack.add('});');
  FPack.add('addParseToken(''hmm'', function (input, array, config) {');
  FPack.add('    var pos = input.length - 2;');
  FPack.add('    array[HOUR] = toInt(input.substr(0, pos));');
  FPack.add('    array[MINUTE] = toInt(input.substr(pos));');
  FPack.add('    getParsingFlags(config).bigHour = true;');
  FPack.add('});');
  FPack.add('addParseToken(''hmmss'', function (input, array, config) {');
  FPack.add('    var pos1 = input.length - 4;');
  FPack.add('    var pos2 = input.length - 2;');
  FPack.add('    array[HOUR] = toInt(input.substr(0, pos1));');
  FPack.add('    array[MINUTE] = toInt(input.substr(pos1, 2));');
  FPack.add('    array[SECOND] = toInt(input.substr(pos2));');
  FPack.add('    getParsingFlags(config).bigHour = true;');
  FPack.add('});');
  FPack.add('addParseToken(''Hmm'', function (input, array, config) {');
  FPack.add('    var pos = input.length - 2;');
  FPack.add('    array[HOUR] = toInt(input.substr(0, pos));');
  FPack.add('    array[MINUTE] = toInt(input.substr(pos));');
  FPack.add('});');
  FPack.add('addParseToken(''Hmmss'', function (input, array, config) {');
  FPack.add('    var pos1 = input.length - 4;');
  FPack.add('    var pos2 = input.length - 2;');
  FPack.add('    array[HOUR] = toInt(input.substr(0, pos1));');
  FPack.add('    array[MINUTE] = toInt(input.substr(pos1, 2));');
  FPack.add('    array[SECOND] = toInt(input.substr(pos2));');
  FPack.add('});');
  FPack.add('');
  FPack.add('// LOCALES');
  FPack.add('');
  FPack.add('function localeIsPM (input) {');
  FPack.add('    // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays');
  FPack.add('    // Using charAt should be more compatible.');
  FPack.add('    return ((input + '''').toLowerCase().charAt(0) === ''p'');');
  FPack.add('}');
  FPack.add('');
  FPack.add('var defaultLocaleMeridiemParse = /[ap]\.?m?\.?/i;');
  FPack.add('function localeMeridiem (hours, minutes, isLower) {');
  FPack.add('    if (hours > 11) {');
  FPack.add('        return isLower ? ''pm'' : ''PM'';');
  FPack.add('    } else {');
  FPack.add('        return isLower ? ''am'' : ''AM'';');
  FPack.add('    }');
  FPack.add('}');
  FPack.add('');
  FPack.add('');
  FPack.add('// MOMENTS');
  FPack.add('');
  FPack.add('// Setting the hour should keep the time, because the user explicitly');
  FPack.add('// specified which hour he wants. So trying to maintain the same hour (in');
  FPack.add('// a new timezone) makes sense. Adding/subtracting hours does not follow');
  FPack.add('// this rule.');
  FPack.add('var getSetHour = makeGetSet(''Hours'', true);');
  FPack.add('');
  FPack.add('// months');
  FPack.add('// week');
  FPack.add('// weekdays');
  FPack.add('// meridiem');
  FPack.add('var baseConfig = {');
  FPack.add('    calendar: defaultCalendar,');
  FPack.add('    longDateFormat: defaultLongDateFormat,');
  FPack.add('    invalidDate: defaultInvalidDate,');
  FPack.add('    ordinal: defaultOrdinal,');
  FPack.add('    dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,');
  FPack.add('    relativeTime: defaultRelativeTime,');
  FPack.add('');
  FPack.add('    months: defaultLocaleMonths,');
  FPack.add('    monthsShort: defaultLocaleMonthsShort,');
  FPack.add('');
  FPack.add('    week: defaultLocaleWeek,');
  FPack.add('');
  FPack.add('    weekdays: defaultLocaleWeekdays,');
  FPack.add('    weekdaysMin: defaultLocaleWeekdaysMin,');
  FPack.add('    weekdaysShort: defaultLocaleWeekdaysShort,');
  FPack.add('');
  FPack.add('    meridiemParse: defaultLocaleMeridiemParse');
  FPack.add('};');
  FPack.add('');
  FPack.add('// internal storage for locale config files');
  FPack.add('var locales = {};');
  FPack.add('var localeFamilies = {};');
  FPack.add('var globalLocale;');
  FPack.add('');
  FPack.add('function normalizeLocale(key) {');
  FPack.add('    return key ? key.toLowerCase().replace(''_'', ''-'') : key;');
  FPack.add('}');
  FPack.add('');
  FPack.add('// pick the locale from the array');
  FPack.add('// try [''en-au'', ''en-gb''] as ''en-au'', ''en-gb'', ''en'', as in move through the list trying each');
  FPack.add('// substring from most specific to least, but move to the next array item if it''s a more specific variant than the current root');
  FPack.add('function chooseLocale(names) {');
  FPack.add('    var i = 0, j, next, locale, split;');
  FPack.add('');
  FPack.add('    while (i < names.length) {');
  FPack.add('        split = normalizeLocale(names[i]).split(''-'');');
  FPack.add('        j = split.length;');
  FPack.add('        next = normalizeLocale(names[i + 1]);');
  FPack.add('        next = next ? next.split(''-'') : null;');
  FPack.add('        while (j > 0) {');
  FPack.add('            locale = loadLocale(split.slice(0, j).join(''-''));');
  FPack.add('            if (locale) {');
  FPack.add('                return locale;');
  FPack.add('            }');
  FPack.add('            if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {');
  FPack.add('                //the next array item is better than a shallower substring of this one');
  FPack.add('                break;');
  FPack.add('            }');
  FPack.add('            j--;');
  FPack.add('        }');
  FPack.add('        i++;');
  FPack.add('    }');
  FPack.add('    return null;');
  FPack.add('}');
  FPack.add('');
  FPack.add('function loadLocale(name) {');
  FPack.add('    var oldLocale = null;');
  FPack.add('    // TODO: Find a better way to register and load all the locales in Node');
  FPack.add('    if (!locales[name] && (typeof module !== ''undefined'') &&');
  FPack.add('            module && module.exports) {');
  FPack.add('        try {');
  FPack.add('            oldLocale = globalLocale._abbr;');
  FPack.add('            var aliasedRequire = require;');
  FPack.add('            aliasedRequire(''./locale/'' + name);');
  FPack.add('            getSetGlobalLocale(oldLocale);');
  FPack.add('        } catch (e) {}');
  FPack.add('    }');
  FPack.add('    return locales[name];');
  FPack.add('}');
  FPack.add('');
  FPack.add('// This function will load locale and then set the global locale.  If');
  FPack.add('// no arguments are passed in, it will simply return the current global');
  FPack.add('// locale key.');
  FPack.add('function getSetGlobalLocale (key, values) {');
  FPack.add('    var data;');
  FPack.add('    if (key) {');
  FPack.add('        if (isUndefined(values)) {');
  FPack.add('            data = getLocale(key);');
  FPack.add('        }');
  FPack.add('        else {');
  FPack.add('            data = defineLocale(key, values);');
  FPack.add('        }');
  FPack.add('');
  FPack.add('        if (data) {');
  FPack.add('            // moment.duration._locale = moment._locale = data;');
  FPack.add('            globalLocale = data;');
  FPack.add('        }');
  FPack.add('    }');
  FPack.add('');
  FPack.add('    return globalLocale._abbr;');
  FPack.add('}');
  FPack.add('');
  FPack.add('function defineLocale (name, config) {');
  FPack.add('    if (config !== null) {');
  FPack.add('        var parentConfig = baseConfig;');
  FPack.add('        config.abbr = name;');
  FPack.add('        if (locales[name] != null) {');
  FPack.add('            deprecateSimple(''defineLocaleOverride'',');
  FPack.add('                    ''use moment.updateLocale(localeName, config) to change '' +');
  FPack.add('                    ''an existing locale. moment.defineLocale(localeName, '' +');
  FPack.add('                    ''config) should only be used for creating a new locale '' +');
  FPack.add('                    ''See http://momentjs.com/guides/#/warnings/define-locale/ for more info.'');');
  FPack.add('            parentConfig = locales[name]._config;');
  FPack.add('        } else if (config.parentLocale != null) {');
  FPack.add('            if (locales[config.parentLocale] != null) {');
  FPack.add('                parentConfig = locales[config.parentLocale]._config;');
  FPack.add('            } else {');
  FPack.add('                if (!localeFamilies[config.parentLocale]) {');
  FPack.add('                    localeFamilies[config.parentLocale] = [];');
  FPack.add('                }');
  FPack.add('                localeFamilies[config.parentLocale].push({');
  FPack.add('                    name: name,');
  FPack.add('                    config: config');
  FPack.add('                });');
  FPack.add('                return null;');
  FPack.add('            }');
  FPack.add('        }');
  FPack.add('        locales[name] = new Locale(mergeConfigs(parentConfig, config));');
  FPack.add('');
  FPack.add('        if (localeFamilies[name]) {');
  FPack.add('            localeFamilies[name].forEach(function (x) {');
  FPack.add('                defineLocale(x.name, x.config);');
  FPack.add('            });');
  FPack.add('        }');
  FPack.add('');
  FPack.add('        // backwards compat for now: also set the locale');
  FPack.add('        // make sure we set the locale AFTER all child locales have been');
  FPack.add('        // created, so we won''t end up with the child locale set.');
  FPack.add('        getSetGlobalLocale(name);');
  FPack.add('');
  FPack.add('');
  FPack.add('        return locales[name];');
  FPack.add('    } else {');
  FPack.add('        // useful for testing');
  FPack.add('        delete locales[name];');
  FPack.add('        return null;');
  FPack.add('    }');
  FPack.add('}');
  FPack.add('');
  FPack.add('function updateLocale(name, config) {');
  FPack.add('    if (config != null) {');
  FPack.add('        var locale, tmpLocale, parentConfig = baseConfig;');
  FPack.add('        // MERGE');
  FPack.add('        tmpLocale = loadLocale(name);');
  FPack.add('        if (tmpLocale != null) {');
  FPack.add('            parentConfig = tmpLocale._config;');
  FPack.add('        }');
  FPack.add('        config = mergeConfigs(parentConfig, config);');
  FPack.add('        locale = new Locale(config);');
  FPack.add('        locale.parentLocale = locales[name];');
  FPack.add('        locales[name] = locale;');
  FPack.add('');
  FPack.add('        // backwards compat for now: also set the locale');
  FPack.add('        getSetGlobalLocale(name);');
  FPack.add('    } else {');
  FPack.add('        // pass null for config to unupdate, useful for tests');
  FPack.add('        if (locales[name] != null) {');
  FPack.add('            if (locales[name].parentLocale != null) {');
  FPack.add('                locales[name] = locales[name].parentLocale;');
  FPack.add('            } else if (locales[name] != null) {');
  FPack.add('                delete locales[name];');
  FPack.add('            }');
  FPack.add('        }');
  FPack.add('    }');
  FPack.add('    return locales[name];');
  FPack.add('}');
  FPack.add('');
  FPack.add('// returns locale data');
  FPack.add('function getLocale (key) {');
  FPack.add('    var locale;');
  FPack.add('');
  FPack.add('    if (key && key._locale && key._locale._abbr) {');
  FPack.add('        key = key._locale._abbr;');
  FPack.add('    }');
  FPack.add('');
  FPack.add('    if (!key) {');
  FPack.add('        return globalLocale;');
  FPack.add('    }');
  FPack.add('');
  FPack.add('    if (!isArray(key)) {');
  FPack.add('        //short-circuit everything else');
  FPack.add('        locale = loadLocale(key);');
  FPack.add('        if (locale) {');
  FPack.add('            return locale;');
  FPack.add('        }');
  FPack.add('        key = [key];');
  FPack.add('    }');
  FPack.add('');
  FPack.add('    return chooseLocale(key);');
  FPack.add('}');
  FPack.add('');
  FPack.add('function listLocales() {');
  FPack.add('    return keys(locales);');
  FPack.add('}');
  FPack.add('');
  FPack.add('function checkOverflow (m) {');
  FPack.add('    var overflow;');
  FPack.add('    var a = m._a;');
  FPack.add('');
  FPack.add('    if (a && getParsingFlags(m).overflow === -2) {');
  FPack.add('        overflow =');
  FPack.add('            a[MONTH]       < 0 || a[MONTH]       > 11  ? MONTH :');
  FPack.add('            a[DATE]        < 1 || a[DATE]        > daysInMonth(a[YEAR], a[MONTH]) ? DATE :');
  FPack.add('            a[HOUR]        < 0 || a[HOUR]        > 24 || (a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0)) ? HOUR :');
  FPack.add('            a[MINUTE]      < 0 || a[MINUTE]      > 59  ? MINUTE :');
  FPack.add('            a[SECOND]      < 0 || a[SECOND]      > 59  ? SECOND :');
  FPack.add('            a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND :');
  FPack.add('            -1;');
  FPack.add('');
  FPack.add('        if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {');
  FPack.add('            overflow = DATE;');
  FPack.add('        }');
  FPack.add('        if (getParsingFlags(m)._overflowWeeks && overflow === -1) {');
  FPack.add('            overflow = WEEK;');
  FPack.add('        }');
  FPack.add('        if (getParsingFlags(m)._overflowWeekday && overflow === -1) {');
  FPack.add('            overflow = WEEKDAY;');
  FPack.add('        }');
  FPack.add('');
  FPack.add('        getParsingFlags(m).overflow = overflow;');
  FPack.add('    }');
  FPack.add('');
  FPack.add('    return m;');
  FPack.add('}');
  FPack.add('');
  FPack.add('// Pick the first defined of two or three arguments.');
  FPack.add('function defaults(a, b, c) {');
  FPack.add('    if (a != null) {');
  FPack.add('        return a;');
  FPack.add('    }');
  FPack.add('    if (b != null) {');
  FPack.add('        return b;');
  FPack.add('    }');
  FPack.add('    return c;');
  FPack.add('}');
  FPack.add('');
  FPack.add('function currentDateArray(config) {');
  FPack.add('    // hooks is actually the exported moment object');
  FPack.add('    var nowValue = new Date(hooks.now());');
  FPack.add('    if (config._useUTC) {');
  FPack.add('        return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];');
  FPack.add('    }');
  FPack.add('    return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];');
end;

procedure TChartbundleJS.ChartbundleJS_12;
begin
  FPack.add('}');
  FPack.add('');
  FPack.add('// convert an array to a date.');
  FPack.add('// the array should mirror the parameters below');
  FPack.add('// note: all values past the year are optional and will default to the lowest possible value.');
  FPack.add('// [year, month, day , hour, minute, second, millisecond]');
  FPack.add('function configFromArray (config) {');
  FPack.add('    var i, date, input = [], currentDate, expectedWeekday, yearToUse;');
  FPack.add('');
  FPack.add('    if (config._d) {');
  FPack.add('        return;');
  FPack.add('    }');
  FPack.add('');
  FPack.add('    currentDate = currentDateArray(config);');
  FPack.add('');
  FPack.add('    //compute day of the year from weeks and weekdays');
  FPack.add('    if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {');
  FPack.add('        dayOfYearFromWeekInfo(config);');
  FPack.add('    }');
  FPack.add('');
  FPack.add('    //if the day of the year is set, figure out what it is');
  FPack.add('    if (config._dayOfYear != null) {');
  FPack.add('        yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);');
  FPack.add('');
  FPack.add('        if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {');
  FPack.add('            getParsingFlags(config)._overflowDayOfYear = true;');
  FPack.add('        }');
  FPack.add('');
  FPack.add('        date = createUTCDate(yearToUse, 0, config._dayOfYear);');
  FPack.add('        config._a[MONTH] = date.getUTCMonth();');
  FPack.add('        config._a[DATE] = date.getUTCDate();');
  FPack.add('    }');
  FPack.add('');
  FPack.add('    // Default to current date.');
  FPack.add('    // * if no year, month, day of month are given, default to today');
  FPack.add('    // * if day of month is given, default month and year');
  FPack.add('    // * if month is given, default only year');
  FPack.add('    // * if year is given, don''t default anything');
  FPack.add('    for (i = 0; i < 3 && config._a[i] == null; ++i) {');
  FPack.add('        config._a[i] = input[i] = currentDate[i];');
  FPack.add('    }');
  FPack.add('');
  FPack.add('    // Zero out whatever was not defaulted, including time');
  FPack.add('    for (; i < 7; i++) {');
  FPack.add('        config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];');
  FPack.add('    }');
  FPack.add('');
  FPack.add('    // Check for 24:00:00.000');
  FPack.add('    if (config._a[HOUR] === 24 &&');
  FPack.add('            config._a[MINUTE] === 0 &&');
  FPack.add('            config._a[SECOND] === 0 &&');
  FPack.add('            config._a[MILLISECOND] === 0) {');
  FPack.add('        config._nextDay = true;');
  FPack.add('        config._a[HOUR] = 0;');
  FPack.add('    }');
  FPack.add('');
  FPack.add('    config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);');
  FPack.add('    expectedWeekday = config._useUTC ? config._d.getUTCDay() : config._d.getDay();');
  FPack.add('');
  FPack.add('    // Apply timezone offset from input. The actual utcOffset can be changed');
  FPack.add('    // with parseZone.');
  FPack.add('    if (config._tzm != null) {');
  FPack.add('        config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);');
  FPack.add('    }');
  FPack.add('');
  FPack.add('    if (config._nextDay) {');
  FPack.add('        config._a[HOUR] = 24;');
  FPack.add('    }');
  FPack.add('');
  FPack.add('    // check for mismatching day of week');
  FPack.add('    if (config._w && typeof config._w.d !== ''undefined'' && config._w.d !== expectedWeekday) {');
  FPack.add('        getParsingFlags(config).weekdayMismatch = true;');
  FPack.add('    }');
  FPack.add('}');
  FPack.add('');
  FPack.add('function dayOfYearFromWeekInfo(config) {');
  FPack.add('    var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;');
  FPack.add('');
  FPack.add('    w = config._w;');
  FPack.add('    if (w.GG != null || w.W != null || w.E != null) {');
  FPack.add('        dow = 1;');
  FPack.add('        doy = 4;');
  FPack.add('');
  FPack.add('        // TODO: We need to take the current isoWeekYear, but that depends on');
  FPack.add('        // how we interpret now (local, utc, fixed offset). So create');
  FPack.add('        // a now version of current config (take local/utc/offset flags, and');
  FPack.add('        // create now).');
  FPack.add('        weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);');
  FPack.add('        week = defaults(w.W, 1);');
  FPack.add('        weekday = defaults(w.E, 1);');
  FPack.add('        if (weekday < 1 || weekday > 7) {');
  FPack.add('            weekdayOverflow = true;');
  FPack.add('        }');
  FPack.add('    } else {');
  FPack.add('        dow = config._locale._week.dow;');
  FPack.add('        doy = config._locale._week.doy;');
  FPack.add('');
  FPack.add('        var curWeek = weekOfYear(createLocal(), dow, doy);');
  FPack.add('');
  FPack.add('        weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);');
  FPack.add('');
  FPack.add('        // Default to current week.');
  FPack.add('        week = defaults(w.w, curWeek.week);');
  FPack.add('');
  FPack.add('        if (w.d != null) {');
  FPack.add('            // weekday -- low day numbers are considered next week');
  FPack.add('            weekday = w.d;');
  FPack.add('            if (weekday < 0 || weekday > 6) {');
  FPack.add('                weekdayOverflow = true;');
  FPack.add('            }');
  FPack.add('        } else if (w.e != null) {');
  FPack.add('            // local weekday -- counting starts from begining of week');
  FPack.add('            weekday = w.e + dow;');
  FPack.add('            if (w.e < 0 || w.e > 6) {');
  FPack.add('                weekdayOverflow = true;');
  FPack.add('            }');
  FPack.add('        } else {');
  FPack.add('            // default to begining of week');
  FPack.add('            weekday = dow;');
  FPack.add('        }');
  FPack.add('    }');
  FPack.add('    if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {');
  FPack.add('        getParsingFlags(config)._overflowWeeks = true;');
  FPack.add('    } else if (weekdayOverflow != null) {');
  FPack.add('        getParsingFlags(config)._overflowWeekday = true;');
  FPack.add('    } else {');
  FPack.add('        temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);');
  FPack.add('        config._a[YEAR] = temp.year;');
  FPack.add('        config._dayOfYear = temp.dayOfYear;');
  FPack.add('    }');
  FPack.add('}');
  FPack.add('');
  FPack.add('// iso 8601 regex');
  FPack.add('// 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)');
  FPack.add('var extendedIsoRegex = /^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/;');
  FPack.add('var basicIsoRegex = /^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/;');
  FPack.add('');
  FPack.add('var tzRegex = /Z|[+-]\d\d(?::?\d\d)?/;');
  FPack.add('');
  FPack.add('var isoDates = [');
  FPack.add('    [''YYYYYY-MM-DD'', /[+-]\d{6}-\d\d-\d\d/],');
  FPack.add('    [''YYYY-MM-DD'', /\d{4}-\d\d-\d\d/],');
  FPack.add('    [''GGGG-[W]WW-E'', /\d{4}-W\d\d-\d/],');
  FPack.add('    [''GGGG-[W]WW'', /\d{4}-W\d\d/, false],');
  FPack.add('    [''YYYY-DDD'', /\d{4}-\d{3}/],');
  FPack.add('    [''YYYY-MM'', /\d{4}-\d\d/, false],');
  FPack.add('    [''YYYYYYMMDD'', /[+-]\d{10}/],');
  FPack.add('    [''YYYYMMDD'', /\d{8}/],');
  FPack.add('    // YYYYMM is NOT allowed by the standard');
  FPack.add('    [''GGGG[W]WWE'', /\d{4}W\d{3}/],');
  FPack.add('    [''GGGG[W]WW'', /\d{4}W\d{2}/, false],');
  FPack.add('    [''YYYYDDD'', /\d{7}/]');
  FPack.add('];');
  FPack.add('');
  FPack.add('// iso time formats and regexes');
  FPack.add('var isoTimes = [');
  FPack.add('    [''HH:mm:ss.SSSS'', /\d\d:\d\d:\d\d\.\d+/],');
  FPack.add('    [''HH:mm:ss,SSSS'', /\d\d:\d\d:\d\d,\d+/],');
  FPack.add('    [''HH:mm:ss'', /\d\d:\d\d:\d\d/],');
  FPack.add('    [''HH:mm'', /\d\d:\d\d/],');
  FPack.add('    [''HHmmss.SSSS'', /\d\d\d\d\d\d\.\d+/],');
  FPack.add('    [''HHmmss,SSSS'', /\d\d\d\d\d\d,\d+/],');
  FPack.add('    [''HHmmss'', /\d\d\d\d\d\d/],');
  FPack.add('    [''HHmm'', /\d\d\d\d/],');
  FPack.add('    [''HH'', /\d\d/]');
  FPack.add('];');
  FPack.add('');
  FPack.add('var aspNetJsonRegex = /^\/?Date\((\-?\d+)/i;');
  FPack.add('');
  FPack.add('// date from iso format');
  FPack.add('function configFromISO(config) {');
  FPack.add('    var i, l,');
  FPack.add('        string = config._i,');
  FPack.add('        match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),');
  FPack.add('        allowTime, dateFormat, timeFormat, tzFormat;');
  FPack.add('');
  FPack.add('    if (match) {');
  FPack.add('        getParsingFlags(config).iso = true;');
  FPack.add('');
  FPack.add('        for (i = 0, l = isoDates.length; i < l; i++) {');
  FPack.add('            if (isoDates[i][1].exec(match[1])) {');
  FPack.add('                dateFormat = isoDates[i][0];');
  FPack.add('                allowTime = isoDates[i][2] !== false;');
  FPack.add('                break;');
  FPack.add('            }');
  FPack.add('        }');
  FPack.add('        if (dateFormat == null) {');
  FPack.add('            config._isValid = false;');
  FPack.add('            return;');
  FPack.add('        }');
  FPack.add('        if (match[3]) {');
  FPack.add('            for (i = 0, l = isoTimes.length; i < l; i++) {');
  FPack.add('                if (isoTimes[i][1].exec(match[3])) {');
  FPack.add('                    // match[2] should be ''T'' or space');
  FPack.add('                    timeFormat = (match[2] || '' '') + isoTimes[i][0];');
  FPack.add('                    break;');
  FPack.add('                }');
  FPack.add('            }');
  FPack.add('            if (timeFormat == null) {');
  FPack.add('                config._isValid = false;');
  FPack.add('                return;');
  FPack.add('            }');
  FPack.add('        }');
  FPack.add('        if (!allowTime && timeFormat != null) {');
  FPack.add('            config._isValid = false;');
  FPack.add('            return;');
  FPack.add('        }');
  FPack.add('        if (match[4]) {');
  FPack.add('            if (tzRegex.exec(match[4])) {');
  FPack.add('                tzFormat = ''Z'';');
  FPack.add('            } else {');
  FPack.add('                config._isValid = false;');
  FPack.add('                return;');
  FPack.add('            }');
  FPack.add('        }');
  FPack.add('        config._f = dateFormat + (timeFormat || '''') + (tzFormat || '''');');
  FPack.add('        configFromStringAndFormat(config);');
  FPack.add('    } else {');
  FPack.add('        config._isValid = false;');
  FPack.add('    }');
  FPack.add('}');
  FPack.add('');
  FPack.add('// RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3');
  FPack.add('var rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\d{4}))$/;');
  FPack.add('');
  FPack.add('function extractFromRFC2822Strings(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {');
  FPack.add('    var result = [');
  FPack.add('        untruncateYear(yearStr),');
  FPack.add('        defaultLocaleMonthsShort.indexOf(monthStr),');
  FPack.add('        parseInt(dayStr, 10),');
  FPack.add('        parseInt(hourStr, 10),');
  FPack.add('        parseInt(minuteStr, 10)');
  FPack.add('    ];');
  FPack.add('');
  FPack.add('    if (secondStr) {');
  FPack.add('        result.push(parseInt(secondStr, 10));');
  FPack.add('    }');
  FPack.add('');
  FPack.add('    return result;');
  FPack.add('}');
  FPack.add('');
  FPack.add('function untruncateYear(yearStr) {');
  FPack.add('    var year = parseInt(yearStr, 10);');
  FPack.add('    if (year <= 49) {');
  FPack.add('        return 2000 + year;');
  FPack.add('    } else if (year <= 999) {');
  FPack.add('        return 1900 + year;');
  FPack.add('    }');
  FPack.add('    return year;');
  FPack.add('}');
  FPack.add('');
  FPack.add('function preprocessRFC2822(s) {');
  FPack.add('    // Remove comments and folding whitespace and replace multiple-spaces with a single space');
  FPack.add('    return s.replace(/\([^)]*\)|[\n\t]/g, '' '').replace(/(\s\s+)/g, '' '').trim();');
  FPack.add('}');
  FPack.add('');
  FPack.add('function checkWeekday(weekdayStr, parsedInput, config) {');
  FPack.add('    if (weekdayStr) {');
  FPack.add('        // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.');
  FPack.add('        var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),');
  FPack.add('            weekdayActual = new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay();');
  FPack.add('        if (weekdayProvided !== weekdayActual) {');
  FPack.add('            getParsingFlags(config).weekdayMismatch = true;');
  FPack.add('            config._isValid = false;');
  FPack.add('            return false;');
  FPack.add('        }');
  FPack.add('    }');
  FPack.add('    return true;');
  FPack.add('}');
  FPack.add('');
  FPack.add('var obsOffsets = {');
  FPack.add('    UT: 0,');
  FPack.add('    GMT: 0,');
  FPack.add('    EDT: -4 * 60,');
  FPack.add('    EST: -5 * 60,');
  FPack.add('    CDT: -5 * 60,');
  FPack.add('    CST: -6 * 60,');
  FPack.add('    MDT: -6 * 60,');
  FPack.add('    MST: -7 * 60,');
  FPack.add('    PDT: -7 * 60,');
  FPack.add('    PST: -8 * 60');
  FPack.add('};');
  FPack.add('');
  FPack.add('function calculateOffset(obsOffset, militaryOffset, numOffset) {');
  FPack.add('    if (obsOffset) {');
  FPack.add('        return obsOffsets[obsOffset];');
  FPack.add('    } else if (militaryOffset) {');
  FPack.add('        // the only allowed military tz is Z');
  FPack.add('        return 0;');
  FPack.add('    } else {');
  FPack.add('        var hm = parseInt(numOffset, 10);');
  FPack.add('        var m = hm % 100, h = (hm - m) / 100;');
  FPack.add('        return h * 60 + m;');
  FPack.add('    }');
  FPack.add('}');
  FPack.add('');
  FPack.add('// date and time from ref 2822 format');
  FPack.add('function configFromRFC2822(config) {');
  FPack.add('    var match = rfc2822.exec(preprocessRFC2822(config._i));');
  FPack.add('    if (match) {');
  FPack.add('        var parsedArray = extractFromRFC2822Strings(match[4], match[3], match[2], match[5], match[6], match[7]);');
  FPack.add('        if (!checkWeekday(match[1], parsedArray, config)) {');
  FPack.add('            return;');
  FPack.add('        }');
  FPack.add('');
  FPack.add('        config._a = parsedArray;');
  FPack.add('        config._tzm = calculateOffset(match[8], match[9], match[10]);');
  FPack.add('');
  FPack.add('        config._d = createUTCDate.apply(null, config._a);');
  FPack.add('        config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);');
  FPack.add('');
  FPack.add('        getParsingFlags(config).rfc2822 = true;');
  FPack.add('    } else {');
  FPack.add('        config._isValid = false;');
  FPack.add('    }');
  FPack.add('}');
  FPack.add('');
  FPack.add('// date from iso format or fallback');
  FPack.add('function configFromString(config) {');
  FPack.add('    var matched = aspNetJsonRegex.exec(config._i);');
  FPack.add('');
  FPack.add('    if (matched !== null) {');
  FPack.add('        config._d = new Date(+matched[1]);');
  FPack.add('        return;');
  FPack.add('    }');
  FPack.add('');
  FPack.add('    configFromISO(config);');
  FPack.add('    if (config._isValid === false) {');
  FPack.add('        delete config._isValid;');
  FPack.add('    } else {');
  FPack.add('        return;');
  FPack.add('    }');
  FPack.add('');
  FPack.add('    configFromRFC2822(config);');
  FPack.add('    if (config._isValid === false) {');
  FPack.add('        delete config._isValid;');
end;

procedure TChartbundleJS.ChartbundleJS_13;
begin
  FPack.add('    } else {');
  FPack.add('        return;');
  FPack.add('    }');
  FPack.add('');
  FPack.add('    // Final attempt, use Input Fallback');
  FPack.add('    hooks.createFromInputFallback(config);');
  FPack.add('}');
  FPack.add('');
  FPack.add('hooks.createFromInputFallback = deprecate(');
  FPack.add('    ''value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), '' +');
  FPack.add('    ''which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are '' +');
  FPack.add('    ''discouraged and will be removed in an upcoming major release. Please refer to '' +');
  FPack.add('    ''http://momentjs.com/guides/#/warnings/js-date/ for more info.'',');
  FPack.add('    function (config) {');
  FPack.add('        config._d = new Date(config._i + (config._useUTC ? '' UTC'' : ''''));');
  FPack.add('    }');
  FPack.add(');');
  FPack.add('');
  FPack.add('// constant that refers to the ISO standard');
  FPack.add('hooks.ISO_8601 = function () {};');
  FPack.add('');
  FPack.add('// constant that refers to the RFC 2822 form');
  FPack.add('hooks.RFC_2822 = function () {};');
  FPack.add('');
  FPack.add('// date from string and format string');
  FPack.add('function configFromStringAndFormat(config) {');
  FPack.add('    // TODO: Move this to another part of the creation flow to prevent circular deps');
  FPack.add('    if (config._f === hooks.ISO_8601) {');
  FPack.add('        configFromISO(config);');
  FPack.add('        return;');
  FPack.add('    }');
  FPack.add('    if (config._f === hooks.RFC_2822) {');
  FPack.add('        configFromRFC2822(config);');
  FPack.add('        return;');
  FPack.add('    }');
  FPack.add('    config._a = [];');
  FPack.add('    getParsingFlags(config).empty = true;');
  FPack.add('');
  FPack.add('    // This array is used to make a Date, either with `new Date` or `Date.UTC`');
  FPack.add('    var string = '''' + config._i,');
  FPack.add('        i, parsedInput, tokens, token, skipped,');
  FPack.add('        stringLength = string.length,');
  FPack.add('        totalParsedInputLength = 0;');
  FPack.add('');
  FPack.add('    tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];');
  FPack.add('');
  FPack.add('    for (i = 0; i < tokens.length; i++) {');
  FPack.add('        token = tokens[i];');
  FPack.add('        parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];');
  FPack.add('        // console.log(''token'', token, ''parsedInput'', parsedInput,');
  FPack.add('        //         ''regex'', getParseRegexForToken(token, config));');
  FPack.add('        if (parsedInput) {');
  FPack.add('            skipped = string.substr(0, string.indexOf(parsedInput));');
  FPack.add('            if (skipped.length > 0) {');
  FPack.add('                getParsingFlags(config).unusedInput.push(skipped);');
  FPack.add('            }');
  FPack.add('            string = string.slice(string.indexOf(parsedInput) + parsedInput.length);');
  FPack.add('            totalParsedInputLength += parsedInput.length;');
  FPack.add('        }');
  FPack.add('        // don''t parse if it''s not a known token');
  FPack.add('        if (formatTokenFunctions[token]) {');
  FPack.add('            if (parsedInput) {');
  FPack.add('                getParsingFlags(config).empty = false;');
  FPack.add('            }');
  FPack.add('            else {');
  FPack.add('                getParsingFlags(config).unusedTokens.push(token);');
  FPack.add('            }');
  FPack.add('            addTimeToArrayFromToken(token, parsedInput, config);');
  FPack.add('        }');
  FPack.add('        else if (config._strict && !parsedInput) {');
  FPack.add('            getParsingFlags(config).unusedTokens.push(token);');
  FPack.add('        }');
  FPack.add('    }');
  FPack.add('');
  FPack.add('    // add remaining unparsed input length to the string');
  FPack.add('    getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;');
  FPack.add('    if (string.length > 0) {');
  FPack.add('        getParsingFlags(config).unusedInput.push(string);');
  FPack.add('    }');
  FPack.add('');
  FPack.add('    // clear _12h flag if hour is <= 12');
  FPack.add('    if (config._a[HOUR] <= 12 &&');
  FPack.add('        getParsingFlags(config).bigHour === true &&');
  FPack.add('        config._a[HOUR] > 0) {');
  FPack.add('        getParsingFlags(config).bigHour = undefined;');
  FPack.add('    }');
  FPack.add('');
  FPack.add('    getParsingFlags(config).parsedDateParts = config._a.slice(0);');
  FPack.add('    getParsingFlags(config).meridiem = config._meridiem;');
  FPack.add('    // handle meridiem');
  FPack.add('    config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);');
  FPack.add('');
  FPack.add('    configFromArray(config);');
  FPack.add('    checkOverflow(config);');
  FPack.add('}');
  FPack.add('');
  FPack.add('');
  FPack.add('function meridiemFixWrap (locale, hour, meridiem) {');
  FPack.add('    var isPm;');
  FPack.add('');
  FPack.add('    if (meridiem == null) {');
  FPack.add('        // nothing to do');
  FPack.add('        return hour;');
  FPack.add('    }');
  FPack.add('    if (locale.meridiemHour != null) {');
  FPack.add('        return locale.meridiemHour(hour, meridiem);');
  FPack.add('    } else if (locale.isPM != null) {');
  FPack.add('        // Fallback');
  FPack.add('        isPm = locale.isPM(meridiem);');
  FPack.add('        if (isPm && hour < 12) {');
  FPack.add('            hour += 12;');
  FPack.add('        }');
  FPack.add('        if (!isPm && hour === 12) {');
  FPack.add('            hour = 0;');
  FPack.add('        }');
  FPack.add('        return hour;');
  FPack.add('    } else {');
  FPack.add('        // this is not supposed to happen');
  FPack.add('        return hour;');
  FPack.add('    }');
  FPack.add('}');
  FPack.add('');
  FPack.add('// date from string and array of format strings');
  FPack.add('function configFromStringAndArray(config) {');
  FPack.add('    var tempConfig,');
  FPack.add('        bestMoment,');
  FPack.add('');
  FPack.add('        scoreToBeat,');
  FPack.add('        i,');
  FPack.add('        currentScore;');
  FPack.add('');
  FPack.add('    if (config._f.length === 0) {');
  FPack.add('        getParsingFlags(config).invalidFormat = true;');
  FPack.add('        config._d = new Date(NaN);');
  FPack.add('        return;');
  FPack.add('    }');
  FPack.add('');
  FPack.add('    for (i = 0; i < config._f.length; i++) {');
  FPack.add('        currentScore = 0;');
  FPack.add('        tempConfig = copyConfig({}, config);');
  FPack.add('        if (config._useUTC != null) {');
  FPack.add('            tempConfig._useUTC = config._useUTC;');
  FPack.add('        }');
  FPack.add('        tempConfig._f = config._f[i];');
  FPack.add('        configFromStringAndFormat(tempConfig);');
  FPack.add('');
  FPack.add('        if (!isValid(tempConfig)) {');
  FPack.add('            continue;');
  FPack.add('        }');
  FPack.add('');
  FPack.add('        // if there is any input that was not parsed add a penalty for that format');
  FPack.add('        currentScore += getParsingFlags(tempConfig).charsLeftOver;');
  FPack.add('');
  FPack.add('        //or tokens');
  FPack.add('        currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;');
  FPack.add('');
  FPack.add('        getParsingFlags(tempConfig).score = currentScore;');
  FPack.add('');
  FPack.add('        if (scoreToBeat == null || currentScore < scoreToBeat) {');
  FPack.add('            scoreToBeat = currentScore;');
  FPack.add('            bestMoment = tempConfig;');
  FPack.add('        }');
  FPack.add('    }');
  FPack.add('');
  FPack.add('    extend(config, bestMoment || tempConfig);');
  FPack.add('}');
  FPack.add('');
  FPack.add('function configFromObject(config) {');
  FPack.add('    if (config._d) {');
  FPack.add('        return;');
  FPack.add('    }');
  FPack.add('');
  FPack.add('    var i = normalizeObjectUnits(config._i);');
  FPack.add('    config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {');
  FPack.add('        return obj && parseInt(obj, 10);');
  FPack.add('    });');
  FPack.add('');
  FPack.add('    configFromArray(config);');
  FPack.add('}');
  FPack.add('');
  FPack.add('function createFromConfig (config) {');
  FPack.add('    var res = new Moment(checkOverflow(prepareConfig(config)));');
  FPack.add('    if (res._nextDay) {');
  FPack.add('        // Adding is smart enough around DST');
  FPack.add('        res.add(1, ''d'');');
  FPack.add('        res._nextDay = undefined;');
  FPack.add('    }');
  FPack.add('');
  FPack.add('    return res;');
  FPack.add('}');
  FPack.add('');
  FPack.add('function prepareConfig (config) {');
  FPack.add('    var input = config._i,');
  FPack.add('        format = config._f;');
  FPack.add('');
  FPack.add('    config._locale = config._locale || getLocale(config._l);');
  FPack.add('');
  FPack.add('    if (input === null || (format === undefined && input === '''')) {');
  FPack.add('        return createInvalid({nullInput: true});');
  FPack.add('    }');
  FPack.add('');
  FPack.add('    if (typeof input === ''string'') {');
  FPack.add('        config._i = input = config._locale.preparse(input);');
  FPack.add('    }');
  FPack.add('');
  FPack.add('    if (isMoment(input)) {');
  FPack.add('        return new Moment(checkOverflow(input));');
  FPack.add('    } else if (isDate(input)) {');
  FPack.add('        config._d = input;');
  FPack.add('    } else if (isArray(format)) {');
  FPack.add('        configFromStringAndArray(config);');
  FPack.add('    } else if (format) {');
  FPack.add('        configFromStringAndFormat(config);');
  FPack.add('    }  else {');
  FPack.add('        configFromInput(config);');
  FPack.add('    }');
  FPack.add('');
  FPack.add('    if (!isValid(config)) {');
  FPack.add('        config._d = null;');
  FPack.add('    }');
  FPack.add('');
  FPack.add('    return config;');
  FPack.add('}');
  FPack.add('');
  FPack.add('function configFromInput(config) {');
  FPack.add('    var input = config._i;');
  FPack.add('    if (isUndefined(input)) {');
  FPack.add('        config._d = new Date(hooks.now());');
  FPack.add('    } else if (isDate(input)) {');
  FPack.add('        config._d = new Date(input.valueOf());');
  FPack.add('    } else if (typeof input === ''string'') {');
  FPack.add('        configFromString(config);');
  FPack.add('    } else if (isArray(input)) {');
  FPack.add('        config._a = map(input.slice(0), function (obj) {');
  FPack.add('            return parseInt(obj, 10);');
  FPack.add('        });');
  FPack.add('        configFromArray(config);');
  FPack.add('    } else if (isObject(input)) {');
  FPack.add('        configFromObject(config);');
  FPack.add('    } else if (isNumber(input)) {');
  FPack.add('        // from milliseconds');
  FPack.add('        config._d = new Date(input);');
  FPack.add('    } else {');
  FPack.add('        hooks.createFromInputFallback(config);');
  FPack.add('    }');
  FPack.add('}');
  FPack.add('');
  FPack.add('function createLocalOrUTC (input, format, locale, strict, isUTC) {');
  FPack.add('    var c = {};');
  FPack.add('');
  FPack.add('    if (locale === true || locale === false) {');
  FPack.add('        strict = locale;');
  FPack.add('        locale = undefined;');
  FPack.add('    }');
  FPack.add('');
  FPack.add('    if ((isObject(input) && isObjectEmpty(input)) ||');
  FPack.add('            (isArray(input) && input.length === 0)) {');
  FPack.add('        input = undefined;');
  FPack.add('    }');
  FPack.add('    // object construction must be done this way.');
  FPack.add('    // https://github.com/moment/moment/issues/1423');
  FPack.add('    c._isAMomentObject = true;');
  FPack.add('    c._useUTC = c._isUTC = isUTC;');
  FPack.add('    c._l = locale;');
  FPack.add('    c._i = input;');
  FPack.add('    c._f = format;');
  FPack.add('    c._strict = strict;');
  FPack.add('');
  FPack.add('    return createFromConfig(c);');
  FPack.add('}');
  FPack.add('');
  FPack.add('function createLocal (input, format, locale, strict) {');
  FPack.add('    return createLocalOrUTC(input, format, locale, strict, false);');
  FPack.add('}');
  FPack.add('');
  FPack.add('var prototypeMin = deprecate(');
  FPack.add('    ''moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/'',');
  FPack.add('    function () {');
  FPack.add('        var other = createLocal.apply(null, arguments);');
  FPack.add('        if (this.isValid() && other.isValid()) {');
  FPack.add('            return other < this ? this : other;');
  FPack.add('        } else {');
  FPack.add('            return createInvalid();');
  FPack.add('        }');
  FPack.add('    }');
  FPack.add(');');
  FPack.add('');
  FPack.add('var prototypeMax = deprecate(');
  FPack.add('    ''moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/'',');
  FPack.add('    function () {');
  FPack.add('        var other = createLocal.apply(null, arguments);');
  FPack.add('        if (this.isValid() && other.isValid()) {');
  FPack.add('            return other > this ? this : other;');
  FPack.add('        } else {');
  FPack.add('            return createInvalid();');
  FPack.add('        }');
  FPack.add('    }');
  FPack.add(');');
  FPack.add('');
  FPack.add('// Pick a moment m from moments so that m[fn](other) is true for all');
  FPack.add('// other. This relies on the function fn to be transitive.');
  FPack.add('//');
  FPack.add('// moments should either be an array of moment objects or an array, whose');
  FPack.add('// first element is an array of moment objects.');
  FPack.add('function pickBy(fn, moments) {');
  FPack.add('    var res, i;');
  FPack.add('    if (moments.length === 1 && isArray(moments[0])) {');
  FPack.add('        moments = moments[0];');
  FPack.add('    }');
  FPack.add('    if (!moments.length) {');
  FPack.add('        return createLocal();');
  FPack.add('    }');
  FPack.add('    res = moments[0];');
  FPack.add('    for (i = 1; i < moments.length; ++i) {');
  FPack.add('        if (!moments[i].isValid() || moments[i][fn](res)) {');
  FPack.add('            res = moments[i];');
  FPack.add('        }');
  FPack.add('    }');
  FPack.add('    return res;');
  FPack.add('}');
  FPack.add('');
  FPack.add('// TODO: Use [].sort instead?');
  FPack.add('function min () {');
  FPack.add('    var args = [].slice.call(arguments, 0);');
  FPack.add('');
  FPack.add('    return pickBy(''isBefore'', args);');
  FPack.add('}');
  FPack.add('');
  FPack.add('function max () {');
  FPack.add('    var args = [].slice.call(arguments, 0);');
  FPack.add('');
  FPack.add('    return pickBy(''isAfter'', args);');
  FPack.add('}');
  FPack.add('');
  FPack.add('var now = function () {');
  FPack.add('    return Date.now ? Date.now() : +(new Date());');
end;

procedure TChartbundleJS.ChartbundleJS_14;
begin
  FPack.add('};');
  FPack.add('');
  FPack.add('var ordering = [''year'', ''quarter'', ''month'', ''week'', ''day'', ''hour'', ''minute'', ''second'', ''millisecond''];');
  FPack.add('');
  FPack.add('function isDurationValid(m) {');
  FPack.add('    for (var key in m) {');
  FPack.add('        if (!(indexOf.call(ordering, key) !== -1 && (m[key] == null || !isNaN(m[key])))) {');
  FPack.add('            return false;');
  FPack.add('        }');
  FPack.add('    }');
  FPack.add('');
  FPack.add('    var unitHasDecimal = false;');
  FPack.add('    for (var i = 0; i < ordering.length; ++i) {');
  FPack.add('        if (m[ordering[i]]) {');
  FPack.add('            if (unitHasDecimal) {');
  FPack.add('                return false; // only allow non-integers for smallest unit');
  FPack.add('            }');
  FPack.add('            if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {');
  FPack.add('                unitHasDecimal = true;');
  FPack.add('            }');
  FPack.add('        }');
  FPack.add('    }');
  FPack.add('');
  FPack.add('    return true;');
  FPack.add('}');
  FPack.add('');
  FPack.add('function isValid$1() {');
  FPack.add('    return this._isValid;');
  FPack.add('}');
  FPack.add('');
  FPack.add('function createInvalid$1() {');
  FPack.add('    return createDuration(NaN);');
  FPack.add('}');
  FPack.add('');
  FPack.add('function Duration (duration) {');
  FPack.add('    var normalizedInput = normalizeObjectUnits(duration),');
  FPack.add('        years = normalizedInput.year || 0,');
  FPack.add('        quarters = normalizedInput.quarter || 0,');
  FPack.add('        months = normalizedInput.month || 0,');
  FPack.add('        weeks = normalizedInput.week || 0,');
  FPack.add('        days = normalizedInput.day || 0,');
  FPack.add('        hours = normalizedInput.hour || 0,');
  FPack.add('        minutes = normalizedInput.minute || 0,');
  FPack.add('        seconds = normalizedInput.second || 0,');
  FPack.add('        milliseconds = normalizedInput.millisecond || 0;');
  FPack.add('');
  FPack.add('    this._isValid = isDurationValid(normalizedInput);');
  FPack.add('');
  FPack.add('    // representation for dateAddRemove');
  FPack.add('    this._milliseconds = +milliseconds +');
  FPack.add('        seconds * 1e3 + // 1000');
  FPack.add('        minutes * 6e4 + // 1000 * 60');
  FPack.add('        hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978');
  FPack.add('    // Because of dateAddRemove treats 24 hours as different from a');
  FPack.add('    // day when working around DST, we need to store them separately');
  FPack.add('    this._days = +days +');
  FPack.add('        weeks * 7;');
  FPack.add('    // It is impossible to translate months into days without knowing');
  FPack.add('    // which months you are are talking about, so we have to store');
  FPack.add('    // it separately.');
  FPack.add('    this._months = +months +');
  FPack.add('        quarters * 3 +');
  FPack.add('        years * 12;');
  FPack.add('');
  FPack.add('    this._data = {};');
  FPack.add('');
  FPack.add('    this._locale = getLocale();');
  FPack.add('');
  FPack.add('    this._bubble();');
  FPack.add('}');
  FPack.add('');
  FPack.add('function isDuration (obj) {');
  FPack.add('    return obj instanceof Duration;');
  FPack.add('}');
  FPack.add('');
  FPack.add('function absRound (number) {');
  FPack.add('    if (number < 0) {');
  FPack.add('        return Math.round(-1 * number) * -1;');
  FPack.add('    } else {');
  FPack.add('        return Math.round(number);');
  FPack.add('    }');
  FPack.add('}');
  FPack.add('');
  FPack.add('// FORMATTING');
  FPack.add('');
  FPack.add('function offset (token, separator) {');
  FPack.add('    addFormatToken(token, 0, 0, function () {');
  FPack.add('        var offset = this.utcOffset();');
  FPack.add('        var sign = ''+'';');
  FPack.add('        if (offset < 0) {');
  FPack.add('            offset = -offset;');
  FPack.add('            sign = ''-'';');
  FPack.add('        }');
  FPack.add('        return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~(offset) % 60, 2);');
  FPack.add('    });');
  FPack.add('}');
  FPack.add('');
  FPack.add('offset(''Z'', '':'');');
  FPack.add('offset(''ZZ'', '''');');
  FPack.add('');
  FPack.add('// PARSING');
  FPack.add('');
  FPack.add('addRegexToken(''Z'',  matchShortOffset);');
  FPack.add('addRegexToken(''ZZ'', matchShortOffset);');
  FPack.add('addParseToken([''Z'', ''ZZ''], function (input, array, config) {');
  FPack.add('    config._useUTC = true;');
  FPack.add('    config._tzm = offsetFromString(matchShortOffset, input);');
  FPack.add('});');
  FPack.add('');
  FPack.add('// HELPERS');
  FPack.add('');
  FPack.add('// timezone chunker');
  FPack.add('// ''+10:00'' > [''10'',  ''00'']');
  FPack.add('// ''-1530''  > [''-15'', ''30'']');
  FPack.add('var chunkOffset = /([\+\-]|\d\d)/gi;');
  FPack.add('');
  FPack.add('function offsetFromString(matcher, string) {');
  FPack.add('    var matches = (string || '''').match(matcher);');
  FPack.add('');
  FPack.add('    if (matches === null) {');
  FPack.add('        return null;');
  FPack.add('    }');
  FPack.add('');
  FPack.add('    var chunk   = matches[matches.length - 1] || [];');
  FPack.add('    var parts   = (chunk + '''').match(chunkOffset) || [''-'', 0, 0];');
  FPack.add('    var minutes = +(parts[1] * 60) + toInt(parts[2]);');
  FPack.add('');
  FPack.add('    return minutes === 0 ?');
  FPack.add('      0 :');
  FPack.add('      parts[0] === ''+'' ? minutes : -minutes;');
  FPack.add('}');
  FPack.add('');
  FPack.add('// Return a moment from input, that is local/utc/zone equivalent to model.');
  FPack.add('function cloneWithOffset(input, model) {');
  FPack.add('    var res, diff;');
  FPack.add('    if (model._isUTC) {');
  FPack.add('        res = model.clone();');
  FPack.add('        diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf();');
  FPack.add('        // Use low-level api, because this fn is low-level api.');
  FPack.add('        res._d.setTime(res._d.valueOf() + diff);');
  FPack.add('        hooks.updateOffset(res, false);');
  FPack.add('        return res;');
  FPack.add('    } else {');
  FPack.add('        return createLocal(input).local();');
  FPack.add('    }');
  FPack.add('}');
  FPack.add('');
  FPack.add('function getDateOffset (m) {');
  FPack.add('    // On Firefox.24 Date#getTimezoneOffset returns a floating point.');
  FPack.add('    // https://github.com/moment/moment/pull/1871');
  FPack.add('    return -Math.round(m._d.getTimezoneOffset() / 15) * 15;');
  FPack.add('}');
  FPack.add('');
  FPack.add('// HOOKS');
  FPack.add('');
  FPack.add('// This function will be called whenever a moment is mutated.');
  FPack.add('// It is intended to keep the offset in sync with the timezone.');
  FPack.add('hooks.updateOffset = function () {};');
  FPack.add('');
  FPack.add('// MOMENTS');
  FPack.add('');
  FPack.add('// keepLocalTime = true means only change the timezone, without');
  FPack.add('// affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->');
  FPack.add('// 5:31:26 +0200 It is possible that 5:31:26 doesn''t exist with offset');
  FPack.add('// +0200, so we adjust the time as needed, to be valid.');
  FPack.add('//');
  FPack.add('// Keeping the time actually adds/subtracts (one hour)');
  FPack.add('// from the actual represented time. That is why we call updateOffset');
  FPack.add('// a second time. In case it wants us to change the offset again');
  FPack.add('// _changeInProgress == true case, then we have to adjust, because');
  FPack.add('// there is no such time in the given timezone.');
  FPack.add('function getSetOffset (input, keepLocalTime, keepMinutes) {');
  FPack.add('    var offset = this._offset || 0,');
  FPack.add('        localAdjust;');
  FPack.add('    if (!this.isValid()) {');
  FPack.add('        return input != null ? this : NaN;');
  FPack.add('    }');
  FPack.add('    if (input != null) {');
  FPack.add('        if (typeof input === ''string'') {');
  FPack.add('            input = offsetFromString(matchShortOffset, input);');
  FPack.add('            if (input === null) {');
  FPack.add('                return this;');
  FPack.add('            }');
  FPack.add('        } else if (Math.abs(input) < 16 && !keepMinutes) {');
  FPack.add('            input = input * 60;');
  FPack.add('        }');
  FPack.add('        if (!this._isUTC && keepLocalTime) {');
  FPack.add('            localAdjust = getDateOffset(this);');
  FPack.add('        }');
  FPack.add('        this._offset = input;');
  FPack.add('        this._isUTC = true;');
  FPack.add('        if (localAdjust != null) {');
  FPack.add('            this.add(localAdjust, ''m'');');
  FPack.add('        }');
  FPack.add('        if (offset !== input) {');
  FPack.add('            if (!keepLocalTime || this._changeInProgress) {');
  FPack.add('                addSubtract(this, createDuration(input - offset, ''m''), 1, false);');
  FPack.add('            } else if (!this._changeInProgress) {');
  FPack.add('                this._changeInProgress = true;');
  FPack.add('                hooks.updateOffset(this, true);');
  FPack.add('                this._changeInProgress = null;');
  FPack.add('            }');
  FPack.add('        }');
  FPack.add('        return this;');
  FPack.add('    } else {');
  FPack.add('        return this._isUTC ? offset : getDateOffset(this);');
  FPack.add('    }');
  FPack.add('}');
  FPack.add('');
  FPack.add('function getSetZone (input, keepLocalTime) {');
  FPack.add('    if (input != null) {');
  FPack.add('        if (typeof input !== ''string'') {');
  FPack.add('            input = -input;');
  FPack.add('        }');
  FPack.add('');
  FPack.add('        this.utcOffset(input, keepLocalTime);');
  FPack.add('');
  FPack.add('        return this;');
  FPack.add('    } else {');
  FPack.add('        return -this.utcOffset();');
  FPack.add('    }');
  FPack.add('}');
  FPack.add('');
  FPack.add('function setOffsetToUTC (keepLocalTime) {');
  FPack.add('    return this.utcOffset(0, keepLocalTime);');
  FPack.add('}');
  FPack.add('');
  FPack.add('function setOffsetToLocal (keepLocalTime) {');
  FPack.add('    if (this._isUTC) {');
  FPack.add('        this.utcOffset(0, keepLocalTime);');
  FPack.add('        this._isUTC = false;');
  FPack.add('');
  FPack.add('        if (keepLocalTime) {');
  FPack.add('            this.subtract(getDateOffset(this), ''m'');');
  FPack.add('        }');
  FPack.add('    }');
  FPack.add('    return this;');
  FPack.add('}');
  FPack.add('');
  FPack.add('function setOffsetToParsedOffset () {');
  FPack.add('    if (this._tzm != null) {');
  FPack.add('        this.utcOffset(this._tzm, false, true);');
  FPack.add('    } else if (typeof this._i === ''string'') {');
  FPack.add('        var tZone = offsetFromString(matchOffset, this._i);');
  FPack.add('        if (tZone != null) {');
  FPack.add('            this.utcOffset(tZone);');
  FPack.add('        }');
  FPack.add('        else {');
  FPack.add('            this.utcOffset(0, true);');
  FPack.add('        }');
  FPack.add('    }');
  FPack.add('    return this;');
  FPack.add('}');
  FPack.add('');
  FPack.add('function hasAlignedHourOffset (input) {');
  FPack.add('    if (!this.isValid()) {');
  FPack.add('        return false;');
  FPack.add('    }');
  FPack.add('    input = input ? createLocal(input).utcOffset() : 0;');
  FPack.add('');
  FPack.add('    return (this.utcOffset() - input) % 60 === 0;');
  FPack.add('}');
  FPack.add('');
  FPack.add('function isDaylightSavingTime () {');
  FPack.add('    return (');
  FPack.add('        this.utcOffset() > this.clone().month(0).utcOffset() ||');
  FPack.add('        this.utcOffset() > this.clone().month(5).utcOffset()');
  FPack.add('    );');
  FPack.add('}');
  FPack.add('');
  FPack.add('function isDaylightSavingTimeShifted () {');
  FPack.add('    if (!isUndefined(this._isDSTShifted)) {');
  FPack.add('        return this._isDSTShifted;');
  FPack.add('    }');
  FPack.add('');
  FPack.add('    var c = {};');
  FPack.add('');
  FPack.add('    copyConfig(c, this);');
  FPack.add('    c = prepareConfig(c);');
  FPack.add('');
  FPack.add('    if (c._a) {');
  FPack.add('        var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);');
  FPack.add('        this._isDSTShifted = this.isValid() &&');
  FPack.add('            compareArrays(c._a, other.toArray()) > 0;');
  FPack.add('    } else {');
  FPack.add('        this._isDSTShifted = false;');
  FPack.add('    }');
  FPack.add('');
  FPack.add('    return this._isDSTShifted;');
  FPack.add('}');
  FPack.add('');
  FPack.add('function isLocal () {');
  FPack.add('    return this.isValid() ? !this._isUTC : false;');
  FPack.add('}');
  FPack.add('');
  FPack.add('function isUtcOffset () {');
  FPack.add('    return this.isValid() ? this._isUTC : false;');
  FPack.add('}');
  FPack.add('');
  FPack.add('function isUtc () {');
  FPack.add('    return this.isValid() ? this._isUTC && this._offset === 0 : false;');
  FPack.add('}');
  FPack.add('');
  FPack.add('// ASP.NET json date format regex');
  FPack.add('var aspNetRegex = /^(\-|\+)?(?:(\d*)[. ])?(\d+)\:(\d+)(?:\:(\d+)(\.\d*)?)?$/;');
  FPack.add('');
  FPack.add('// from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html');
  FPack.add('// somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere');
  FPack.add('// and further modified to allow for strings containing both week and day');
  FPack.add('var isoRegex = /^(-|\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;');
  FPack.add('');
  FPack.add('function createDuration (input, key) {');
  FPack.add('    var duration = input,');
  FPack.add('        // matching against regexp is expensive, do it on demand');
  FPack.add('        match = null,');
  FPack.add('        sign,');
  FPack.add('        ret,');
  FPack.add('        diffRes;');
  FPack.add('');
  FPack.add('    if (isDuration(input)) {');
  FPack.add('        duration = {');
  FPack.add('            ms : input._milliseconds,');
  FPack.add('            d  : input._days,');
  FPack.add('            M  : input._months');
  FPack.add('        };');
  FPack.add('    } else if (isNumber(input)) {');
  FPack.add('        duration = {};');
  FPack.add('        if (key) {');
  FPack.add('            duration[key] = input;');
  FPack.add('        } else {');
  FPack.add('            duration.milliseconds = input;');
  FPack.add('        }');
  FPack.add('    } else if (!!(match = aspNetRegex.exec(input))) {');
  FPack.add('        sign = (match[1] === ''-'') ? -1 : 1;');
  FPack.add('        duration = {');
  FPack.add('            y  : 0,');
end;

procedure TChartbundleJS.ChartbundleJS_15;
begin
  FPack.add('            d  : toInt(match[DATE])                         * sign,');
  FPack.add('            h  : toInt(match[HOUR])                         * sign,');
  FPack.add('            m  : toInt(match[MINUTE])                       * sign,');
  FPack.add('            s  : toInt(match[SECOND])                       * sign,');
  FPack.add('            ms : toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match');
  FPack.add('        };');
  FPack.add('    } else if (!!(match = isoRegex.exec(input))) {');
  FPack.add('        sign = (match[1] === ''-'') ? -1 : (match[1] === ''+'') ? 1 : 1;');
  FPack.add('        duration = {');
  FPack.add('            y : parseIso(match[2], sign),');
  FPack.add('            M : parseIso(match[3], sign),');
  FPack.add('            w : parseIso(match[4], sign),');
  FPack.add('            d : parseIso(match[5], sign),');
  FPack.add('            h : parseIso(match[6], sign),');
  FPack.add('            m : parseIso(match[7], sign),');
  FPack.add('            s : parseIso(match[8], sign)');
  FPack.add('        };');
  FPack.add('    } else if (duration == null) {// checks for null or undefined');
  FPack.add('        duration = {};');
  FPack.add('    } else if (typeof duration === ''object'' && (''from'' in duration || ''to'' in duration)) {');
  FPack.add('        diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));');
  FPack.add('');
  FPack.add('        duration = {};');
  FPack.add('        duration.ms = diffRes.milliseconds;');
  FPack.add('        duration.M = diffRes.months;');
  FPack.add('    }');
  FPack.add('');
  FPack.add('    ret = new Duration(duration);');
  FPack.add('');
  FPack.add('    if (isDuration(input) && hasOwnProp(input, ''_locale'')) {');
  FPack.add('        ret._locale = input._locale;');
  FPack.add('    }');
  FPack.add('');
  FPack.add('    return ret;');
  FPack.add('}');
  FPack.add('');
  FPack.add('createDuration.fn = Duration.prototype;');
  FPack.add('createDuration.invalid = createInvalid$1;');
  FPack.add('');
  FPack.add('function parseIso (inp, sign) {');
  FPack.add('    // We''d normally use ~~inp for this, but unfortunately it also');
  FPack.add('    // converts floats to ints.');
  FPack.add('    // inp may be undefined, so careful calling replace on it.');
  FPack.add('    var res = inp && parseFloat(inp.replace('','', ''.''));');
  FPack.add('    // apply sign while we''re at it');
  FPack.add('    return (isNaN(res) ? 0 : res) * sign;');
  FPack.add('}');
  FPack.add('');
  FPack.add('function positiveMomentsDifference(base, other) {');
  FPack.add('    var res = {milliseconds: 0, months: 0};');
  FPack.add('');
  FPack.add('    res.months = other.month() - base.month() +');
  FPack.add('        (other.year() - base.year()) * 12;');
  FPack.add('    if (base.clone().add(res.months, ''M'').isAfter(other)) {');
  FPack.add('        --res.months;');
  FPack.add('    }');
  FPack.add('');
  FPack.add('    res.milliseconds = +other - +(base.clone().add(res.months, ''M''));');
  FPack.add('');
  FPack.add('    return res;');
  FPack.add('}');
  FPack.add('');
  FPack.add('function momentsDifference(base, other) {');
  FPack.add('    var res;');
  FPack.add('    if (!(base.isValid() && other.isValid())) {');
  FPack.add('        return {milliseconds: 0, months: 0};');
  FPack.add('    }');
  FPack.add('');
  FPack.add('    other = cloneWithOffset(other, base);');
  FPack.add('    if (base.isBefore(other)) {');
  FPack.add('        res = positiveMomentsDifference(base, other);');
  FPack.add('    } else {');
  FPack.add('        res = positiveMomentsDifference(other, base);');
  FPack.add('        res.milliseconds = -res.milliseconds;');
  FPack.add('        res.months = -res.months;');
  FPack.add('    }');
  FPack.add('');
  FPack.add('    return res;');
  FPack.add('}');
  FPack.add('');
  FPack.add('// TODO: remove ''name'' arg after deprecation is removed');
  FPack.add('function createAdder(direction, name) {');
  FPack.add('    return function (val, period) {');
  FPack.add('        var dur, tmp;');
  FPack.add('        //invert the arguments, but complain about it');
  FPack.add('        if (period !== null && !isNaN(+period)) {');
  FPack.add('            deprecateSimple(name, ''moment().'' + name  + ''(period, number) is deprecated. Please use moment().'' + name + ''(number, period). '' +');
  FPack.add('            ''See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.'');');
  FPack.add('            tmp = val; val = period; period = tmp;');
  FPack.add('        }');
  FPack.add('');
  FPack.add('        val = typeof val === ''string'' ? +val : val;');
  FPack.add('        dur = createDuration(val, period);');
  FPack.add('        addSubtract(this, dur, direction);');
  FPack.add('        return this;');
  FPack.add('    };');
  FPack.add('}');
  FPack.add('');
  FPack.add('function addSubtract (mom, duration, isAdding, updateOffset) {');
  FPack.add('    var milliseconds = duration._milliseconds,');
  FPack.add('        days = absRound(duration._days),');
  FPack.add('        months = absRound(duration._months);');
  FPack.add('');
  FPack.add('    if (!mom.isValid()) {');
  FPack.add('        // No op');
  FPack.add('        return;');
  FPack.add('    }');
  FPack.add('');
  FPack.add('    updateOffset = updateOffset == null ? true : updateOffset;');
  FPack.add('');
  FPack.add('    if (months) {');
  FPack.add('        setMonth(mom, get(mom, ''Month'') + months * isAdding);');
  FPack.add('    }');
  FPack.add('    if (days) {');
  FPack.add('        set$1(mom, ''Date'', get(mom, ''Date'') + days * isAdding);');
  FPack.add('    }');
  FPack.add('    if (milliseconds) {');
  FPack.add('        mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);');
  FPack.add('    }');
  FPack.add('    if (updateOffset) {');
  FPack.add('        hooks.updateOffset(mom, days || months);');
  FPack.add('    }');
  FPack.add('}');
  FPack.add('');
  FPack.add('var add      = createAdder(1, ''add'');');
  FPack.add('var subtract = createAdder(-1, ''subtract'');');
  FPack.add('');
  FPack.add('function getCalendarFormat(myMoment, now) {');
  FPack.add('    var diff = myMoment.diff(now, ''days'', true);');
  FPack.add('    return diff < -6 ? ''sameElse'' :');
  FPack.add('            diff < -1 ? ''lastWeek'' :');
  FPack.add('            diff < 0 ? ''lastDay'' :');
  FPack.add('            diff < 1 ? ''sameDay'' :');
  FPack.add('            diff < 2 ? ''nextDay'' :');
  FPack.add('            diff < 7 ? ''nextWeek'' : ''sameElse'';');
  FPack.add('}');
  FPack.add('');
  FPack.add('function calendar$1 (time, formats) {');
  FPack.add('    // We want to compare the start of today, vs this.');
  FPack.add('    // Getting start-of-today depends on whether we''re local/utc/offset or not.');
  FPack.add('    var now = time || createLocal(),');
  FPack.add('        sod = cloneWithOffset(now, this).startOf(''day''),');
  FPack.add('        format = hooks.calendarFormat(this, sod) || ''sameElse'';');
  FPack.add('');
  FPack.add('    var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);');
  FPack.add('');
  FPack.add('    return this.format(output || this.localeData().calendar(format, this, createLocal(now)));');
  FPack.add('}');
  FPack.add('');
  FPack.add('function clone () {');
  FPack.add('    return new Moment(this);');
  FPack.add('}');
  FPack.add('');
  FPack.add('function isAfter (input, units) {');
  FPack.add('    var localInput = isMoment(input) ? input : createLocal(input);');
  FPack.add('    if (!(this.isValid() && localInput.isValid())) {');
  FPack.add('        return false;');
  FPack.add('    }');
  FPack.add('    units = normalizeUnits(!isUndefined(units) ? units : ''millisecond'');');
  FPack.add('    if (units === ''millisecond'') {');
  FPack.add('        return this.valueOf() > localInput.valueOf();');
  FPack.add('    } else {');
  FPack.add('        return localInput.valueOf() < this.clone().startOf(units).valueOf();');
  FPack.add('    }');
  FPack.add('}');
  FPack.add('');
  FPack.add('function isBefore (input, units) {');
  FPack.add('    var localInput = isMoment(input) ? input : createLocal(input);');
  FPack.add('    if (!(this.isValid() && localInput.isValid())) {');
  FPack.add('        return false;');
  FPack.add('    }');
  FPack.add('    units = normalizeUnits(!isUndefined(units) ? units : ''millisecond'');');
  FPack.add('    if (units === ''millisecond'') {');
  FPack.add('        return this.valueOf() < localInput.valueOf();');
  FPack.add('    } else {');
  FPack.add('        return this.clone().endOf(units).valueOf() < localInput.valueOf();');
  FPack.add('    }');
  FPack.add('}');
  FPack.add('');
  FPack.add('function isBetween (from, to, units, inclusivity) {');
  FPack.add('    inclusivity = inclusivity || ''()'';');
  FPack.add('    return (inclusivity[0] === ''('' ? this.isAfter(from, units) : !this.isBefore(from, units)) &&');
  FPack.add('        (inclusivity[1] === '')'' ? this.isBefore(to, units) : !this.isAfter(to, units));');
  FPack.add('}');
  FPack.add('');
  FPack.add('function isSame (input, units) {');
  FPack.add('    var localInput = isMoment(input) ? input : createLocal(input),');
  FPack.add('        inputMs;');
  FPack.add('    if (!(this.isValid() && localInput.isValid())) {');
  FPack.add('        return false;');
  FPack.add('    }');
  FPack.add('    units = normalizeUnits(units || ''millisecond'');');
  FPack.add('    if (units === ''millisecond'') {');
  FPack.add('        return this.valueOf() === localInput.valueOf();');
  FPack.add('    } else {');
  FPack.add('        inputMs = localInput.valueOf();');
  FPack.add('        return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();');
  FPack.add('    }');
  FPack.add('}');
  FPack.add('');
  FPack.add('function isSameOrAfter (input, units) {');
  FPack.add('    return this.isSame(input, units) || this.isAfter(input,units);');
  FPack.add('}');
  FPack.add('');
  FPack.add('function isSameOrBefore (input, units) {');
  FPack.add('    return this.isSame(input, units) || this.isBefore(input,units);');
  FPack.add('}');
  FPack.add('');
  FPack.add('function diff (input, units, asFloat) {');
  FPack.add('    var that,');
  FPack.add('        zoneDelta,');
  FPack.add('        delta, output;');
  FPack.add('');
  FPack.add('    if (!this.isValid()) {');
  FPack.add('        return NaN;');
  FPack.add('    }');
  FPack.add('');
  FPack.add('    that = cloneWithOffset(input, this);');
  FPack.add('');
  FPack.add('    if (!that.isValid()) {');
  FPack.add('        return NaN;');
  FPack.add('    }');
  FPack.add('');
  FPack.add('    zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;');
  FPack.add('');
  FPack.add('    units = normalizeUnits(units);');
  FPack.add('');
  FPack.add('    switch (units) {');
  FPack.add('        case ''year'': output = monthDiff(this, that) / 12; break;');
  FPack.add('        case ''month'': output = monthDiff(this, that); break;');
  FPack.add('        case ''quarter'': output = monthDiff(this, that) / 3; break;');
  FPack.add('        case ''second'': output = (this - that) / 1e3; break; // 1000');
  FPack.add('        case ''minute'': output = (this - that) / 6e4; break; // 1000 * 60');
  FPack.add('        case ''hour'': output = (this - that) / 36e5; break; // 1000 * 60 * 60');
  FPack.add('        case ''day'': output = (this - that - zoneDelta) / 864e5; break; // 1000 * 60 * 60 * 24, negate dst');
  FPack.add('        case ''week'': output = (this - that - zoneDelta) / 6048e5; break; // 1000 * 60 * 60 * 24 * 7, negate dst');
  FPack.add('        default: output = this - that;');
  FPack.add('    }');
  FPack.add('');
  FPack.add('    return asFloat ? output : absFloor(output);');
  FPack.add('}');
  FPack.add('');
  FPack.add('function monthDiff (a, b) {');
  FPack.add('    // difference in months');
  FPack.add('    var wholeMonthDiff = ((b.year() - a.year()) * 12) + (b.month() - a.month()),');
  FPack.add('        // b is in (anchor - 1 month, anchor + 1 month)');
  FPack.add('        anchor = a.clone().add(wholeMonthDiff, ''months''),');
  FPack.add('        anchor2, adjust;');
  FPack.add('');
  FPack.add('    if (b - anchor < 0) {');
  FPack.add('        anchor2 = a.clone().add(wholeMonthDiff - 1, ''months'');');
  FPack.add('        // linear across the month');
  FPack.add('        adjust = (b - anchor) / (anchor - anchor2);');
  FPack.add('    } else {');
  FPack.add('        anchor2 = a.clone().add(wholeMonthDiff + 1, ''months'');');
  FPack.add('        // linear across the month');
  FPack.add('        adjust = (b - anchor) / (anchor2 - anchor);');
  FPack.add('    }');
  FPack.add('');
  FPack.add('    //check for negative zero, return zero if negative zero');
  FPack.add('    return -(wholeMonthDiff + adjust) || 0;');
  FPack.add('}');
  FPack.add('');
  FPack.add('hooks.defaultFormat = ''YYYY-MM-DDTHH:mm:ssZ'';');
  FPack.add('hooks.defaultFormatUtc = ''YYYY-MM-DDTHH:mm:ss[Z]'';');
  FPack.add('');
  FPack.add('function toString () {');
  FPack.add('    return this.clone().locale(''en'').format(''ddd MMM DD YYYY HH:mm:ss [GMT]ZZ'');');
  FPack.add('}');
  FPack.add('');
  FPack.add('function toISOString(keepOffset) {');
  FPack.add('    if (!this.isValid()) {');
  FPack.add('        return null;');
  FPack.add('    }');
  FPack.add('    var utc = keepOffset !== true;');
  FPack.add('    var m = utc ? this.clone().utc() : this;');
  FPack.add('    if (m.year() < 0 || m.year() > 9999) {');
  FPack.add('        return formatMoment(m, utc ? ''YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]'' : ''YYYYYY-MM-DD[T]HH:mm:ss.SSSZ'');');
  FPack.add('    }');
  FPack.add('    if (isFunction(Date.prototype.toISOString)) {');
  FPack.add('        // native implementation is ~50x faster, use it when we can');
  FPack.add('        if (utc) {');
  FPack.add('            return this.toDate().toISOString();');
  FPack.add('        } else {');
  FPack.add('            return new Date(this._d.valueOf()).toISOString().replace(''Z'', formatMoment(m, ''Z''));');
  FPack.add('        }');
  FPack.add('    }');
  FPack.add('    return formatMoment(m, utc ? ''YYYY-MM-DD[T]HH:mm:ss.SSS[Z]'' : ''YYYY-MM-DD[T]HH:mm:ss.SSSZ'');');
  FPack.add('}');
  FPack.add('');
  FPack.add('/**');
  FPack.add(' * Return a human readable representation of a moment that can');
  FPack.add(' * also be evaluated to get a new moment which is the same');
  FPack.add(' *');
  FPack.add(' * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects');
  FPack.add(' */');
  FPack.add('function inspect () {');
  FPack.add('    if (!this.isValid()) {');
  FPack.add('        return ''moment.invalid(/* '' + this._i + '' */)'';');
  FPack.add('    }');
  FPack.add('    var func = ''moment'';');
  FPack.add('    var zone = '''';');
  FPack.add('    if (!this.isLocal()) {');
  FPack.add('        func = this.utcOffset() === 0 ? ''moment.utc'' : ''moment.parseZone'';');
  FPack.add('        zone = ''Z'';');
  FPack.add('    }');
  FPack.add('    var prefix = ''['' + func + ''("]'';');
  FPack.add('    var year = (0 <= this.year() && this.year() <= 9999) ? ''YYYY'' : ''YYYYYY'';');
  FPack.add('    var datetime = ''-MM-DD[T]HH:mm:ss.SSS'';');
  FPack.add('    var suffix = zone + ''[")]'';');
  FPack.add('');
  FPack.add('    return this.format(prefix + year + datetime + suffix);');
  FPack.add('}');
  FPack.add('');
  FPack.add('function format (inputString) {');
  FPack.add('    if (!inputString) {');
  FPack.add('        inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;');
  FPack.add('    }');
  FPack.add('    var output = formatMoment(this, inputString);');
  FPack.add('    return this.localeData().postformat(output);');
  FPack.add('}');
  FPack.add('');
  FPack.add('function from (time, withoutSuffix) {');
  FPack.add('    if (this.isValid() &&');
  FPack.add('            ((isMoment(time) && time.isValid()) ||');
  FPack.add('             createLocal(time).isValid())) {');
  FPack.add('        return createDuration({to: this, from: time}).locale(this.locale()).humanize(!withoutSuffix);');
  FPack.add('    } else {');
  FPack.add('        return this.localeData().invalidDate();');
  FPack.add('    }');
  FPack.add('}');
  FPack.add('');
  FPack.add('function fromNow (withoutSuffix) {');
  FPack.add('    return this.from(createLocal(), withoutSuffix);');
  FPack.add('}');
  FPack.add('');
end;

procedure TChartbundleJS.ChartbundleJS_16;
begin
  FPack.add('function to (time, withoutSuffix) {');
  FPack.add('    if (this.isValid() &&');
  FPack.add('            ((isMoment(time) && time.isValid()) ||');
  FPack.add('             createLocal(time).isValid())) {');
  FPack.add('        return createDuration({from: this, to: time}).locale(this.locale()).humanize(!withoutSuffix);');
  FPack.add('    } else {');
  FPack.add('        return this.localeData().invalidDate();');
  FPack.add('    }');
  FPack.add('}');
  FPack.add('');
  FPack.add('function toNow (withoutSuffix) {');
  FPack.add('    return this.to(createLocal(), withoutSuffix);');
  FPack.add('}');
  FPack.add('');
  FPack.add('// If passed a locale key, it will set the locale for this');
  FPack.add('// instance.  Otherwise, it will return the locale configuration');
  FPack.add('// variables for this instance.');
  FPack.add('function locale (key) {');
  FPack.add('    var newLocaleData;');
  FPack.add('');
  FPack.add('    if (key === undefined) {');
  FPack.add('        return this._locale._abbr;');
  FPack.add('    } else {');
  FPack.add('        newLocaleData = getLocale(key);');
  FPack.add('        if (newLocaleData != null) {');
  FPack.add('            this._locale = newLocaleData;');
  FPack.add('        }');
  FPack.add('        return this;');
  FPack.add('    }');
  FPack.add('}');
  FPack.add('');
  FPack.add('var lang = deprecate(');
  FPack.add('    ''moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.'',');
  FPack.add('    function (key) {');
  FPack.add('        if (key === undefined) {');
  FPack.add('            return this.localeData();');
  FPack.add('        } else {');
  FPack.add('            return this.locale(key);');
  FPack.add('        }');
  FPack.add('    }');
  FPack.add(');');
  FPack.add('');
  FPack.add('function localeData () {');
  FPack.add('    return this._locale;');
  FPack.add('}');
  FPack.add('');
  FPack.add('function startOf (units) {');
  FPack.add('    units = normalizeUnits(units);');
  FPack.add('    // the following switch intentionally omits break keywords');
  FPack.add('    // to utilize falling through the cases.');
  FPack.add('    switch (units) {');
  FPack.add('        case ''year'':');
  FPack.add('            this.month(0);');
  FPack.add('            /* falls through */');
  FPack.add('        case ''quarter'':');
  FPack.add('        case ''month'':');
  FPack.add('            this.date(1);');
  FPack.add('            /* falls through */');
  FPack.add('        case ''week'':');
  FPack.add('        case ''isoWeek'':');
  FPack.add('        case ''day'':');
  FPack.add('        case ''date'':');
  FPack.add('            this.hours(0);');
  FPack.add('            /* falls through */');
  FPack.add('        case ''hour'':');
  FPack.add('            this.minutes(0);');
  FPack.add('            /* falls through */');
  FPack.add('        case ''minute'':');
  FPack.add('            this.seconds(0);');
  FPack.add('            /* falls through */');
  FPack.add('        case ''second'':');
  FPack.add('            this.milliseconds(0);');
  FPack.add('    }');
  FPack.add('');
  FPack.add('    // weeks are a special case');
  FPack.add('    if (units === ''week'') {');
  FPack.add('        this.weekday(0);');
  FPack.add('    }');
  FPack.add('    if (units === ''isoWeek'') {');
  FPack.add('        this.isoWeekday(1);');
  FPack.add('    }');
  FPack.add('');
  FPack.add('    // quarters are also special');
  FPack.add('    if (units === ''quarter'') {');
  FPack.add('        this.month(Math.floor(this.month() / 3) * 3);');
  FPack.add('    }');
  FPack.add('');
  FPack.add('    return this;');
  FPack.add('}');
  FPack.add('');
  FPack.add('function endOf (units) {');
  FPack.add('    units = normalizeUnits(units);');
  FPack.add('    if (units === undefined || units === ''millisecond'') {');
  FPack.add('        return this;');
  FPack.add('    }');
  FPack.add('');
  FPack.add('    // ''date'' is an alias for ''day'', so it should be considered as such.');
  FPack.add('    if (units === ''date'') {');
  FPack.add('        units = ''day'';');
  FPack.add('    }');
  FPack.add('');
  FPack.add('    return this.startOf(units).add(1, (units === ''isoWeek'' ? ''week'' : units)).subtract(1, ''ms'');');
  FPack.add('}');
  FPack.add('');
  FPack.add('function valueOf () {');
  FPack.add('    return this._d.valueOf() - ((this._offset || 0) * 60000);');
  FPack.add('}');
  FPack.add('');
  FPack.add('function unix () {');
  FPack.add('    return Math.floor(this.valueOf() / 1000);');
  FPack.add('}');
  FPack.add('');
  FPack.add('function toDate () {');
  FPack.add('    return new Date(this.valueOf());');
  FPack.add('}');
  FPack.add('');
  FPack.add('function toArray () {');
  FPack.add('    var m = this;');
  FPack.add('    return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];');
  FPack.add('}');
  FPack.add('');
  FPack.add('function toObject () {');
  FPack.add('    var m = this;');
  FPack.add('    return {');
  FPack.add('        years: m.year(),');
  FPack.add('        months: m.month(),');
  FPack.add('        date: m.date(),');
  FPack.add('        hours: m.hours(),');
  FPack.add('        minutes: m.minutes(),');
  FPack.add('        seconds: m.seconds(),');
  FPack.add('        milliseconds: m.milliseconds()');
  FPack.add('    };');
  FPack.add('}');
  FPack.add('');
  FPack.add('function toJSON () {');
  FPack.add('    // new Date(NaN).toJSON() === null');
  FPack.add('    return this.isValid() ? this.toISOString() : null;');
  FPack.add('}');
  FPack.add('');
  FPack.add('function isValid$2 () {');
  FPack.add('    return isValid(this);');
  FPack.add('}');
  FPack.add('');
  FPack.add('function parsingFlags () {');
  FPack.add('    return extend({}, getParsingFlags(this));');
  FPack.add('}');
  FPack.add('');
  FPack.add('function invalidAt () {');
  FPack.add('    return getParsingFlags(this).overflow;');
  FPack.add('}');
  FPack.add('');
  FPack.add('function creationData() {');
  FPack.add('    return {');
  FPack.add('        input: this._i,');
  FPack.add('        format: this._f,');
  FPack.add('        locale: this._locale,');
  FPack.add('        isUTC: this._isUTC,');
  FPack.add('        strict: this._strict');
  FPack.add('    };');
  FPack.add('}');
  FPack.add('');
  FPack.add('// FORMATTING');
  FPack.add('');
  FPack.add('addFormatToken(0, [''gg'', 2], 0, function () {');
  FPack.add('    return this.weekYear() % 100;');
  FPack.add('});');
  FPack.add('');
  FPack.add('addFormatToken(0, [''GG'', 2], 0, function () {');
  FPack.add('    return this.isoWeekYear() % 100;');
  FPack.add('});');
  FPack.add('');
  FPack.add('function addWeekYearFormatToken (token, getter) {');
  FPack.add('    addFormatToken(0, [token, token.length], 0, getter);');
  FPack.add('}');
  FPack.add('');
  FPack.add('addWeekYearFormatToken(''gggg'',     ''weekYear'');');
  FPack.add('addWeekYearFormatToken(''ggggg'',    ''weekYear'');');
  FPack.add('addWeekYearFormatToken(''GGGG'',  ''isoWeekYear'');');
  FPack.add('addWeekYearFormatToken(''GGGGG'', ''isoWeekYear'');');
  FPack.add('');
  FPack.add('// ALIASES');
  FPack.add('');
  FPack.add('addUnitAlias(''weekYear'', ''gg'');');
  FPack.add('addUnitAlias(''isoWeekYear'', ''GG'');');
  FPack.add('');
  FPack.add('// PRIORITY');
  FPack.add('');
  FPack.add('addUnitPriority(''weekYear'', 1);');
  FPack.add('addUnitPriority(''isoWeekYear'', 1);');
  FPack.add('');
  FPack.add('');
  FPack.add('// PARSING');
  FPack.add('');
  FPack.add('addRegexToken(''G'',      matchSigned);');
  FPack.add('addRegexToken(''g'',      matchSigned);');
  FPack.add('addRegexToken(''GG'',     match1to2, match2);');
  FPack.add('addRegexToken(''gg'',     match1to2, match2);');
  FPack.add('addRegexToken(''GGGG'',   match1to4, match4);');
  FPack.add('addRegexToken(''gggg'',   match1to4, match4);');
  FPack.add('addRegexToken(''GGGGG'',  match1to6, match6);');
  FPack.add('addRegexToken(''ggggg'',  match1to6, match6);');
  FPack.add('');
  FPack.add('addWeekParseToken([''gggg'', ''ggggg'', ''GGGG'', ''GGGGG''], function (input, week, config, token) {');
  FPack.add('    week[token.substr(0, 2)] = toInt(input);');
  FPack.add('});');
  FPack.add('');
  FPack.add('addWeekParseToken([''gg'', ''GG''], function (input, week, config, token) {');
  FPack.add('    week[token] = hooks.parseTwoDigitYear(input);');
  FPack.add('});');
  FPack.add('');
  FPack.add('// MOMENTS');
  FPack.add('');
  FPack.add('function getSetWeekYear (input) {');
  FPack.add('    return getSetWeekYearHelper.call(this,');
  FPack.add('            input,');
  FPack.add('            this.week(),');
  FPack.add('            this.weekday(),');
  FPack.add('            this.localeData()._week.dow,');
  FPack.add('            this.localeData()._week.doy);');
  FPack.add('}');
  FPack.add('');
  FPack.add('function getSetISOWeekYear (input) {');
  FPack.add('    return getSetWeekYearHelper.call(this,');
  FPack.add('            input, this.isoWeek(), this.isoWeekday(), 1, 4);');
  FPack.add('}');
  FPack.add('');
  FPack.add('function getISOWeeksInYear () {');
  FPack.add('    return weeksInYear(this.year(), 1, 4);');
  FPack.add('}');
  FPack.add('');
  FPack.add('function getWeeksInYear () {');
  FPack.add('    var weekInfo = this.localeData()._week;');
  FPack.add('    return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);');
  FPack.add('}');
  FPack.add('');
  FPack.add('function getSetWeekYearHelper(input, week, weekday, dow, doy) {');
  FPack.add('    var weeksTarget;');
  FPack.add('    if (input == null) {');
  FPack.add('        return weekOfYear(this, dow, doy).year;');
  FPack.add('    } else {');
  FPack.add('        weeksTarget = weeksInYear(input, dow, doy);');
  FPack.add('        if (week > weeksTarget) {');
  FPack.add('            week = weeksTarget;');
  FPack.add('        }');
  FPack.add('        return setWeekAll.call(this, input, week, weekday, dow, doy);');
  FPack.add('    }');
  FPack.add('}');
  FPack.add('');
  FPack.add('function setWeekAll(weekYear, week, weekday, dow, doy) {');
  FPack.add('    var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),');
  FPack.add('        date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);');
  FPack.add('');
  FPack.add('    this.year(date.getUTCFullYear());');
  FPack.add('    this.month(date.getUTCMonth());');
  FPack.add('    this.date(date.getUTCDate());');
  FPack.add('    return this;');
  FPack.add('}');
  FPack.add('');
  FPack.add('// FORMATTING');
  FPack.add('');
  FPack.add('addFormatToken(''Q'', 0, ''Qo'', ''quarter'');');
  FPack.add('');
  FPack.add('// ALIASES');
  FPack.add('');
  FPack.add('addUnitAlias(''quarter'', ''Q'');');
  FPack.add('');
  FPack.add('// PRIORITY');
  FPack.add('');
  FPack.add('addUnitPriority(''quarter'', 7);');
  FPack.add('');
  FPack.add('// PARSING');
  FPack.add('');
  FPack.add('addRegexToken(''Q'', match1);');
  FPack.add('addParseToken(''Q'', function (input, array) {');
  FPack.add('    array[MONTH] = (toInt(input) - 1) * 3;');
  FPack.add('});');
  FPack.add('');
  FPack.add('// MOMENTS');
  FPack.add('');
  FPack.add('function getSetQuarter (input) {');
  FPack.add('    return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);');
  FPack.add('}');
  FPack.add('');
  FPack.add('// FORMATTING');
  FPack.add('');
  FPack.add('addFormatToken(''D'', [''DD'', 2], ''Do'', ''date'');');
  FPack.add('');
  FPack.add('// ALIASES');
  FPack.add('');
  FPack.add('addUnitAlias(''date'', ''D'');');
  FPack.add('');
  FPack.add('// PRIOROITY');
  FPack.add('addUnitPriority(''date'', 9);');
  FPack.add('');
  FPack.add('// PARSING');
  FPack.add('');
  FPack.add('addRegexToken(''D'',  match1to2);');
  FPack.add('addRegexToken(''DD'', match1to2, match2);');
  FPack.add('addRegexToken(''Do'', function (isStrict, locale) {');
  FPack.add('    // TODO: Remove "ordinalParse" fallback in next major release.');
  FPack.add('    return isStrict ?');
  FPack.add('      (locale._dayOfMonthOrdinalParse || locale._ordinalParse) :');
  FPack.add('      locale._dayOfMonthOrdinalParseLenient;');
  FPack.add('});');
  FPack.add('');
  FPack.add('addParseToken([''D'', ''DD''], DATE);');
  FPack.add('addParseToken(''Do'', function (input, array) {');
  FPack.add('    array[DATE] = toInt(input.match(match1to2)[0]);');
  FPack.add('});');
  FPack.add('');
  FPack.add('// MOMENTS');
  FPack.add('');
  FPack.add('var getSetDayOfMonth = makeGetSet(''Date'', true);');
  FPack.add('');
  FPack.add('// FORMATTING');
  FPack.add('');
  FPack.add('addFormatToken(''DDD'', [''DDDD'', 3], ''DDDo'', ''dayOfYear'');');
  FPack.add('');
  FPack.add('// ALIASES');
  FPack.add('');
  FPack.add('addUnitAlias(''dayOfYear'', ''DDD'');');
  FPack.add('');
  FPack.add('// PRIORITY');
  FPack.add('addUnitPriority(''dayOfYear'', 4);');
  FPack.add('');
  FPack.add('// PARSING');
  FPack.add('');
  FPack.add('addRegexToken(''DDD'',  match1to3);');
  FPack.add('addRegexToken(''DDDD'', match3);');
  FPack.add('addParseToken([''DDD'', ''DDDD''], function (input, array, config) {');
  FPack.add('    config._dayOfYear = toInt(input);');
  FPack.add('});');
  FPack.add('');
  FPack.add('// HELPERS');
  FPack.add('');
  FPack.add('// MOMENTS');
end;

procedure TChartbundleJS.ChartbundleJS_17;
begin
  FPack.add('');
  FPack.add('function getSetDayOfYear (input) {');
  FPack.add('    var dayOfYear = Math.round((this.clone().startOf(''day'') - this.clone().startOf(''year'')) / 864e5) + 1;');
  FPack.add('    return input == null ? dayOfYear : this.add((input - dayOfYear), ''d'');');
  FPack.add('}');
  FPack.add('');
  FPack.add('// FORMATTING');
  FPack.add('');
  FPack.add('addFormatToken(''m'', [''mm'', 2], 0, ''minute'');');
  FPack.add('');
  FPack.add('// ALIASES');
  FPack.add('');
  FPack.add('addUnitAlias(''minute'', ''m'');');
  FPack.add('');
  FPack.add('// PRIORITY');
  FPack.add('');
  FPack.add('addUnitPriority(''minute'', 14);');
  FPack.add('');
  FPack.add('// PARSING');
  FPack.add('');
  FPack.add('addRegexToken(''m'',  match1to2);');
  FPack.add('addRegexToken(''mm'', match1to2, match2);');
  FPack.add('addParseToken([''m'', ''mm''], MINUTE);');
  FPack.add('');
  FPack.add('// MOMENTS');
  FPack.add('');
  FPack.add('var getSetMinute = makeGetSet(''Minutes'', false);');
  FPack.add('');
  FPack.add('// FORMATTING');
  FPack.add('');
  FPack.add('addFormatToken(''s'', [''ss'', 2], 0, ''second'');');
  FPack.add('');
  FPack.add('// ALIASES');
  FPack.add('');
  FPack.add('addUnitAlias(''second'', ''s'');');
  FPack.add('');
  FPack.add('// PRIORITY');
  FPack.add('');
  FPack.add('addUnitPriority(''second'', 15);');
  FPack.add('');
  FPack.add('// PARSING');
  FPack.add('');
  FPack.add('addRegexToken(''s'',  match1to2);');
  FPack.add('addRegexToken(''ss'', match1to2, match2);');
  FPack.add('addParseToken([''s'', ''ss''], SECOND);');
  FPack.add('');
  FPack.add('// MOMENTS');
  FPack.add('');
  FPack.add('var getSetSecond = makeGetSet(''Seconds'', false);');
  FPack.add('');
  FPack.add('// FORMATTING');
  FPack.add('');
  FPack.add('addFormatToken(''S'', 0, 0, function () {');
  FPack.add('    return ~~(this.millisecond() / 100);');
  FPack.add('});');
  FPack.add('');
  FPack.add('addFormatToken(0, [''SS'', 2], 0, function () {');
  FPack.add('    return ~~(this.millisecond() / 10);');
  FPack.add('});');
  FPack.add('');
  FPack.add('addFormatToken(0, [''SSS'', 3], 0, ''millisecond'');');
  FPack.add('addFormatToken(0, [''SSSS'', 4], 0, function () {');
  FPack.add('    return this.millisecond() * 10;');
  FPack.add('});');
  FPack.add('addFormatToken(0, [''SSSSS'', 5], 0, function () {');
  FPack.add('    return this.millisecond() * 100;');
  FPack.add('});');
  FPack.add('addFormatToken(0, [''SSSSSS'', 6], 0, function () {');
  FPack.add('    return this.millisecond() * 1000;');
  FPack.add('});');
  FPack.add('addFormatToken(0, [''SSSSSSS'', 7], 0, function () {');
  FPack.add('    return this.millisecond() * 10000;');
  FPack.add('});');
  FPack.add('addFormatToken(0, [''SSSSSSSS'', 8], 0, function () {');
  FPack.add('    return this.millisecond() * 100000;');
  FPack.add('});');
  FPack.add('addFormatToken(0, [''SSSSSSSSS'', 9], 0, function () {');
  FPack.add('    return this.millisecond() * 1000000;');
  FPack.add('});');
  FPack.add('');
  FPack.add('');
  FPack.add('// ALIASES');
  FPack.add('');
  FPack.add('addUnitAlias(''millisecond'', ''ms'');');
  FPack.add('');
  FPack.add('// PRIORITY');
  FPack.add('');
  FPack.add('addUnitPriority(''millisecond'', 16);');
  FPack.add('');
  FPack.add('// PARSING');
  FPack.add('');
  FPack.add('addRegexToken(''S'',    match1to3, match1);');
  FPack.add('addRegexToken(''SS'',   match1to3, match2);');
  FPack.add('addRegexToken(''SSS'',  match1to3, match3);');
  FPack.add('');
  FPack.add('var token;');
  FPack.add('for (token = ''SSSS''; token.length <= 9; token += ''S'') {');
  FPack.add('    addRegexToken(token, matchUnsigned);');
  FPack.add('}');
  FPack.add('');
  FPack.add('function parseMs(input, array) {');
  FPack.add('    array[MILLISECOND] = toInt((''0.'' + input) * 1000);');
  FPack.add('}');
  FPack.add('');
  FPack.add('for (token = ''S''; token.length <= 9; token += ''S'') {');
  FPack.add('    addParseToken(token, parseMs);');
  FPack.add('}');
  FPack.add('// MOMENTS');
  FPack.add('');
  FPack.add('var getSetMillisecond = makeGetSet(''Milliseconds'', false);');
  FPack.add('');
  FPack.add('// FORMATTING');
  FPack.add('');
  FPack.add('addFormatToken(''z'',  0, 0, ''zoneAbbr'');');
  FPack.add('addFormatToken(''zz'', 0, 0, ''zoneName'');');
  FPack.add('');
  FPack.add('// MOMENTS');
  FPack.add('');
  FPack.add('function getZoneAbbr () {');
  FPack.add('    return this._isUTC ? ''UTC'' : '''';');
  FPack.add('}');
  FPack.add('');
  FPack.add('function getZoneName () {');
  FPack.add('    return this._isUTC ? ''Coordinated Universal Time'' : '''';');
  FPack.add('}');
  FPack.add('');
  FPack.add('var proto = Moment.prototype;');
  FPack.add('');
  FPack.add('proto.add               = add;');
  FPack.add('proto.calendar          = calendar$1;');
  FPack.add('proto.clone             = clone;');
  FPack.add('proto.diff              = diff;');
  FPack.add('proto.endOf             = endOf;');
  FPack.add('proto.format            = format;');
  FPack.add('proto.from              = from;');
  FPack.add('proto.fromNow           = fromNow;');
  FPack.add('proto.to                = to;');
  FPack.add('proto.toNow             = toNow;');
  FPack.add('proto.get               = stringGet;');
  FPack.add('proto.invalidAt         = invalidAt;');
  FPack.add('proto.isAfter           = isAfter;');
  FPack.add('proto.isBefore          = isBefore;');
  FPack.add('proto.isBetween         = isBetween;');
  FPack.add('proto.isSame            = isSame;');
  FPack.add('proto.isSameOrAfter     = isSameOrAfter;');
  FPack.add('proto.isSameOrBefore    = isSameOrBefore;');
  FPack.add('proto.isValid           = isValid$2;');
  FPack.add('proto.lang              = lang;');
  FPack.add('proto.locale            = locale;');
  FPack.add('proto.localeData        = localeData;');
  FPack.add('proto.max               = prototypeMax;');
  FPack.add('proto.min               = prototypeMin;');
  FPack.add('proto.parsingFlags      = parsingFlags;');
  FPack.add('proto.set               = stringSet;');
  FPack.add('proto.startOf           = startOf;');
  FPack.add('proto.subtract          = subtract;');
  FPack.add('proto.toArray           = toArray;');
  FPack.add('proto.toObject          = toObject;');
  FPack.add('proto.toDate            = toDate;');
  FPack.add('proto.toISOString       = toISOString;');
  FPack.add('proto.inspect           = inspect;');
  FPack.add('proto.toJSON            = toJSON;');
  FPack.add('proto.toString          = toString;');
  FPack.add('proto.unix              = unix;');
  FPack.add('proto.valueOf           = valueOf;');
  FPack.add('proto.creationData      = creationData;');
  FPack.add('');
  FPack.add('// Year');
  FPack.add('proto.year       = getSetYear;');
  FPack.add('proto.isLeapYear = getIsLeapYear;');
  FPack.add('');
  FPack.add('// Week Year');
  FPack.add('proto.weekYear    = getSetWeekYear;');
  FPack.add('proto.isoWeekYear = getSetISOWeekYear;');
  FPack.add('');
  FPack.add('// Quarter');
  FPack.add('proto.quarter = proto.quarters = getSetQuarter;');
  FPack.add('');
  FPack.add('// Month');
  FPack.add('proto.month       = getSetMonth;');
  FPack.add('proto.daysInMonth = getDaysInMonth;');
  FPack.add('');
  FPack.add('// Week');
  FPack.add('proto.week           = proto.weeks        = getSetWeek;');
  FPack.add('proto.isoWeek        = proto.isoWeeks     = getSetISOWeek;');
  FPack.add('proto.weeksInYear    = getWeeksInYear;');
  FPack.add('proto.isoWeeksInYear = getISOWeeksInYear;');
  FPack.add('');
  FPack.add('// Day');
  FPack.add('proto.date       = getSetDayOfMonth;');
  FPack.add('proto.day        = proto.days             = getSetDayOfWeek;');
  FPack.add('proto.weekday    = getSetLocaleDayOfWeek;');
  FPack.add('proto.isoWeekday = getSetISODayOfWeek;');
  FPack.add('proto.dayOfYear  = getSetDayOfYear;');
  FPack.add('');
  FPack.add('// Hour');
  FPack.add('proto.hour = proto.hours = getSetHour;');
  FPack.add('');
  FPack.add('// Minute');
  FPack.add('proto.minute = proto.minutes = getSetMinute;');
  FPack.add('');
  FPack.add('// Second');
  FPack.add('proto.second = proto.seconds = getSetSecond;');
  FPack.add('');
  FPack.add('// Millisecond');
  FPack.add('proto.millisecond = proto.milliseconds = getSetMillisecond;');
  FPack.add('');
  FPack.add('// Offset');
  FPack.add('proto.utcOffset            = getSetOffset;');
  FPack.add('proto.utc                  = setOffsetToUTC;');
  FPack.add('proto.local                = setOffsetToLocal;');
  FPack.add('proto.parseZone            = setOffsetToParsedOffset;');
  FPack.add('proto.hasAlignedHourOffset = hasAlignedHourOffset;');
  FPack.add('proto.isDST                = isDaylightSavingTime;');
  FPack.add('proto.isLocal              = isLocal;');
  FPack.add('proto.isUtcOffset          = isUtcOffset;');
  FPack.add('proto.isUtc                = isUtc;');
  FPack.add('proto.isUTC                = isUtc;');
  FPack.add('');
  FPack.add('// Timezone');
  FPack.add('proto.zoneAbbr = getZoneAbbr;');
  FPack.add('proto.zoneName = getZoneName;');
  FPack.add('');
  FPack.add('// Deprecations');
  FPack.add('proto.dates  = deprecate(''dates accessor is deprecated. Use date instead.'', getSetDayOfMonth);');
  FPack.add('proto.months = deprecate(''months accessor is deprecated. Use month instead'', getSetMonth);');
  FPack.add('proto.years  = deprecate(''years accessor is deprecated. Use year instead'', getSetYear);');
  FPack.add('proto.zone   = deprecate(''moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/'', getSetZone);');
  FPack.add('proto.isDSTShifted = deprecate(''isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information'', isDaylightSavingTimeShifted);');
  FPack.add('');
  FPack.add('function createUnix (input) {');
  FPack.add('    return createLocal(input * 1000);');
  FPack.add('}');
  FPack.add('');
  FPack.add('function createInZone () {');
  FPack.add('    return createLocal.apply(null, arguments).parseZone();');
  FPack.add('}');
  FPack.add('');
  FPack.add('function preParsePostFormat (string) {');
  FPack.add('    return string;');
  FPack.add('}');
  FPack.add('');
  FPack.add('var proto$1 = Locale.prototype;');
  FPack.add('');
  FPack.add('proto$1.calendar        = calendar;');
  FPack.add('proto$1.longDateFormat  = longDateFormat;');
  FPack.add('proto$1.invalidDate     = invalidDate;');
  FPack.add('proto$1.ordinal         = ordinal;');
  FPack.add('proto$1.preparse        = preParsePostFormat;');
  FPack.add('proto$1.postformat      = preParsePostFormat;');
  FPack.add('proto$1.relativeTime    = relativeTime;');
  FPack.add('proto$1.pastFuture      = pastFuture;');
  FPack.add('proto$1.set             = set;');
  FPack.add('');
  FPack.add('// Month');
  FPack.add('proto$1.months            =        localeMonths;');
  FPack.add('proto$1.monthsShort       =        localeMonthsShort;');
  FPack.add('proto$1.monthsParse       =        localeMonthsParse;');
  FPack.add('proto$1.monthsRegex       = monthsRegex;');
  FPack.add('proto$1.monthsShortRegex  = monthsShortRegex;');
  FPack.add('');
  FPack.add('// Week');
  FPack.add('proto$1.week = localeWeek;');
  FPack.add('proto$1.firstDayOfYear = localeFirstDayOfYear;');
  FPack.add('proto$1.firstDayOfWeek = localeFirstDayOfWeek;');
  FPack.add('');
  FPack.add('// Day of Week');
  FPack.add('proto$1.weekdays       =        localeWeekdays;');
  FPack.add('proto$1.weekdaysMin    =        localeWeekdaysMin;');
  FPack.add('proto$1.weekdaysShort  =        localeWeekdaysShort;');
  FPack.add('proto$1.weekdaysParse  =        localeWeekdaysParse;');
  FPack.add('');
  FPack.add('proto$1.weekdaysRegex       =        weekdaysRegex;');
  FPack.add('proto$1.weekdaysShortRegex  =        weekdaysShortRegex;');
  FPack.add('proto$1.weekdaysMinRegex    =        weekdaysMinRegex;');
  FPack.add('');
  FPack.add('// Hours');
  FPack.add('proto$1.isPM = localeIsPM;');
  FPack.add('proto$1.meridiem = localeMeridiem;');
  FPack.add('');
  FPack.add('function get$1 (format, index, field, setter) {');
  FPack.add('    var locale = getLocale();');
  FPack.add('    var utc = createUTC().set(setter, index);');
  FPack.add('    return locale[field](utc, format);');
  FPack.add('}');
  FPack.add('');
  FPack.add('function listMonthsImpl (format, index, field) {');
  FPack.add('    if (isNumber(format)) {');
  FPack.add('        index = format;');
  FPack.add('        format = undefined;');
  FPack.add('    }');
  FPack.add('');
  FPack.add('    format = format || '''';');
  FPack.add('');
  FPack.add('    if (index != null) {');
  FPack.add('        return get$1(format, index, field, ''month'');');
  FPack.add('    }');
  FPack.add('');
  FPack.add('    var i;');
  FPack.add('    var out = [];');
  FPack.add('    for (i = 0; i < 12; i++) {');
  FPack.add('        out[i] = get$1(format, i, field, ''month'');');
  FPack.add('    }');
  FPack.add('    return out;');
  FPack.add('}');
  FPack.add('');
  FPack.add('// ()');
  FPack.add('// (5)');
  FPack.add('// (fmt, 5)');
  FPack.add('// (fmt)');
  FPack.add('// (true)');
  FPack.add('// (true, 5)');
  FPack.add('// (true, fmt, 5)');
  FPack.add('// (true, fmt)');
  FPack.add('function listWeekdaysImpl (localeSorted, format, index, field) {');
  FPack.add('    if (typeof localeSorted === ''boolean'') {');
  FPack.add('        if (isNumber(format)) {');
  FPack.add('            index = format;');
  FPack.add('            format = undefined;');
  FPack.add('        }');
  FPack.add('');
  FPack.add('        format = format || '''';');
  FPack.add('    } else {');
  FPack.add('        format = localeSorted;');
  FPack.add('        index = format;');
  FPack.add('        localeSorted = false;');
  FPack.add('');
  FPack.add('        if (isNumber(format)) {');
  FPack.add('            index = format;');
  FPack.add('            format = undefined;');
  FPack.add('        }');
  FPack.add('');
  FPack.add('        format = format || '''';');
  FPack.add('    }');
  FPack.add('');
  FPack.add('    var locale = getLocale(),');
end;

procedure TChartbundleJS.ChartbundleJS_18;
begin
  FPack.add('        shift = localeSorted ? locale._week.dow : 0;');
  FPack.add('');
  FPack.add('    if (index != null) {');
  FPack.add('        return get$1(format, (index + shift) % 7, field, ''day'');');
  FPack.add('    }');
  FPack.add('');
  FPack.add('    var i;');
  FPack.add('    var out = [];');
  FPack.add('    for (i = 0; i < 7; i++) {');
  FPack.add('        out[i] = get$1(format, (i + shift) % 7, field, ''day'');');
  FPack.add('    }');
  FPack.add('    return out;');
  FPack.add('}');
  FPack.add('');
  FPack.add('function listMonths (format, index) {');
  FPack.add('    return listMonthsImpl(format, index, ''months'');');
  FPack.add('}');
  FPack.add('');
  FPack.add('function listMonthsShort (format, index) {');
  FPack.add('    return listMonthsImpl(format, index, ''monthsShort'');');
  FPack.add('}');
  FPack.add('');
  FPack.add('function listWeekdays (localeSorted, format, index) {');
  FPack.add('    return listWeekdaysImpl(localeSorted, format, index, ''weekdays'');');
  FPack.add('}');
  FPack.add('');
  FPack.add('function listWeekdaysShort (localeSorted, format, index) {');
  FPack.add('    return listWeekdaysImpl(localeSorted, format, index, ''weekdaysShort'');');
  FPack.add('}');
  FPack.add('');
  FPack.add('function listWeekdaysMin (localeSorted, format, index) {');
  FPack.add('    return listWeekdaysImpl(localeSorted, format, index, ''weekdaysMin'');');
  FPack.add('}');
  FPack.add('');
  FPack.add('getSetGlobalLocale(''en'', {');
  FPack.add('    dayOfMonthOrdinalParse: /\d{1,2}(th|st|nd|rd)/,');
  FPack.add('    ordinal : function (number) {');
  FPack.add('        var b = number % 10,');
  FPack.add('            output = (toInt(number % 100 / 10) === 1) ? ''th'' :');
  FPack.add('            (b === 1) ? ''st'' :');
  FPack.add('            (b === 2) ? ''nd'' :');
  FPack.add('            (b === 3) ? ''rd'' : ''th'';');
  FPack.add('        return number + output;');
  FPack.add('    }');
  FPack.add('});');
  FPack.add('');
  FPack.add('// Side effect imports');
  FPack.add('hooks.lang = deprecate(''moment.lang is deprecated. Use moment.locale instead.'', getSetGlobalLocale);');
  FPack.add('hooks.langData = deprecate(''moment.langData is deprecated. Use moment.localeData instead.'', getLocale);');
  FPack.add('');
  FPack.add('var mathAbs = Math.abs;');
  FPack.add('');
  FPack.add('function abs () {');
  FPack.add('    var data           = this._data;');
  FPack.add('');
  FPack.add('    this._milliseconds = mathAbs(this._milliseconds);');
  FPack.add('    this._days         = mathAbs(this._days);');
  FPack.add('    this._months       = mathAbs(this._months);');
  FPack.add('');
  FPack.add('    data.milliseconds  = mathAbs(data.milliseconds);');
  FPack.add('    data.seconds       = mathAbs(data.seconds);');
  FPack.add('    data.minutes       = mathAbs(data.minutes);');
  FPack.add('    data.hours         = mathAbs(data.hours);');
  FPack.add('    data.months        = mathAbs(data.months);');
  FPack.add('    data.years         = mathAbs(data.years);');
  FPack.add('');
  FPack.add('    return this;');
  FPack.add('}');
  FPack.add('');
  FPack.add('function addSubtract$1 (duration, input, value, direction) {');
  FPack.add('    var other = createDuration(input, value);');
  FPack.add('');
  FPack.add('    duration._milliseconds += direction * other._milliseconds;');
  FPack.add('    duration._days         += direction * other._days;');
  FPack.add('    duration._months       += direction * other._months;');
  FPack.add('');
  FPack.add('    return duration._bubble();');
  FPack.add('}');
  FPack.add('');
  FPack.add('// supports only 2.0-style add(1, ''s'') or add(duration)');
  FPack.add('function add$1 (input, value) {');
  FPack.add('    return addSubtract$1(this, input, value, 1);');
  FPack.add('}');
  FPack.add('');
  FPack.add('// supports only 2.0-style subtract(1, ''s'') or subtract(duration)');
  FPack.add('function subtract$1 (input, value) {');
  FPack.add('    return addSubtract$1(this, input, value, -1);');
  FPack.add('}');
  FPack.add('');
  FPack.add('function absCeil (number) {');
  FPack.add('    if (number < 0) {');
  FPack.add('        return Math.floor(number);');
  FPack.add('    } else {');
  FPack.add('        return Math.ceil(number);');
  FPack.add('    }');
  FPack.add('}');
  FPack.add('');
  FPack.add('function bubble () {');
  FPack.add('    var milliseconds = this._milliseconds;');
  FPack.add('    var days         = this._days;');
  FPack.add('    var months       = this._months;');
  FPack.add('    var data         = this._data;');
  FPack.add('    var seconds, minutes, hours, years, monthsFromDays;');
  FPack.add('');
  FPack.add('    // if we have a mix of positive and negative values, bubble down first');
  FPack.add('    // check: https://github.com/moment/moment/issues/2166');
  FPack.add('    if (!((milliseconds >= 0 && days >= 0 && months >= 0) ||');
  FPack.add('            (milliseconds <= 0 && days <= 0 && months <= 0))) {');
  FPack.add('        milliseconds += absCeil(monthsToDays(months) + days) * 864e5;');
  FPack.add('        days = 0;');
  FPack.add('        months = 0;');
  FPack.add('    }');
  FPack.add('');
  FPack.add('    // The following code bubbles up values, see the tests for');
  FPack.add('    // examples of what that means.');
  FPack.add('    data.milliseconds = milliseconds % 1000;');
  FPack.add('');
  FPack.add('    seconds           = absFloor(milliseconds / 1000);');
  FPack.add('    data.seconds      = seconds % 60;');
  FPack.add('');
  FPack.add('    minutes           = absFloor(seconds / 60);');
  FPack.add('    data.minutes      = minutes % 60;');
  FPack.add('');
  FPack.add('    hours             = absFloor(minutes / 60);');
  FPack.add('    data.hours        = hours % 24;');
  FPack.add('');
  FPack.add('    days += absFloor(hours / 24);');
  FPack.add('');
  FPack.add('    // convert days to months');
  FPack.add('    monthsFromDays = absFloor(daysToMonths(days));');
  FPack.add('    months += monthsFromDays;');
  FPack.add('    days -= absCeil(monthsToDays(monthsFromDays));');
  FPack.add('');
  FPack.add('    // 12 months -> 1 year');
  FPack.add('    years = absFloor(months / 12);');
  FPack.add('    months %= 12;');
  FPack.add('');
  FPack.add('    data.days   = days;');
  FPack.add('    data.months = months;');
  FPack.add('    data.years  = years;');
  FPack.add('');
  FPack.add('    return this;');
  FPack.add('}');
  FPack.add('');
  FPack.add('function daysToMonths (days) {');
  FPack.add('    // 400 years have 146097 days (taking into account leap year rules)');
  FPack.add('    // 400 years have 12 months === 4800');
  FPack.add('    return days * 4800 / 146097;');
  FPack.add('}');
  FPack.add('');
  FPack.add('function monthsToDays (months) {');
  FPack.add('    // the reverse of daysToMonths');
  FPack.add('    return months * 146097 / 4800;');
  FPack.add('}');
  FPack.add('');
  FPack.add('function as (units) {');
  FPack.add('    if (!this.isValid()) {');
  FPack.add('        return NaN;');
  FPack.add('    }');
  FPack.add('    var days;');
  FPack.add('    var months;');
  FPack.add('    var milliseconds = this._milliseconds;');
  FPack.add('');
  FPack.add('    units = normalizeUnits(units);');
  FPack.add('');
  FPack.add('    if (units === ''month'' || units === ''year'') {');
  FPack.add('        days   = this._days   + milliseconds / 864e5;');
  FPack.add('        months = this._months + daysToMonths(days);');
  FPack.add('        return units === ''month'' ? months : months / 12;');
  FPack.add('    } else {');
  FPack.add('        // handle milliseconds separately because of floating point math errors (issue #1867)');
  FPack.add('        days = this._days + Math.round(monthsToDays(this._months));');
  FPack.add('        switch (units) {');
  FPack.add('            case ''week''   : return days / 7     + milliseconds / 6048e5;');
  FPack.add('            case ''day''    : return days         + milliseconds / 864e5;');
  FPack.add('            case ''hour''   : return days * 24    + milliseconds / 36e5;');
  FPack.add('            case ''minute'' : return days * 1440  + milliseconds / 6e4;');
  FPack.add('            case ''second'' : return days * 86400 + milliseconds / 1000;');
  FPack.add('            // Math.floor prevents floating point math errors here');
  FPack.add('            case ''millisecond'': return Math.floor(days * 864e5) + milliseconds;');
  FPack.add('            default: throw new Error(''Unknown unit '' + units);');
  FPack.add('        }');
  FPack.add('    }');
  FPack.add('}');
  FPack.add('');
  FPack.add('// TODO: Use this.as(''ms'')?');
  FPack.add('function valueOf$1 () {');
  FPack.add('    if (!this.isValid()) {');
  FPack.add('        return NaN;');
  FPack.add('    }');
  FPack.add('    return (');
  FPack.add('        this._milliseconds +');
  FPack.add('        this._days * 864e5 +');
  FPack.add('        (this._months % 12) * 2592e6 +');
  FPack.add('        toInt(this._months / 12) * 31536e6');
  FPack.add('    );');
  FPack.add('}');
  FPack.add('');
  FPack.add('function makeAs (alias) {');
  FPack.add('    return function () {');
  FPack.add('        return this.as(alias);');
  FPack.add('    };');
  FPack.add('}');
  FPack.add('');
  FPack.add('var asMilliseconds = makeAs(''ms'');');
  FPack.add('var asSeconds      = makeAs(''s'');');
  FPack.add('var asMinutes      = makeAs(''m'');');
  FPack.add('var asHours        = makeAs(''h'');');
  FPack.add('var asDays         = makeAs(''d'');');
  FPack.add('var asWeeks        = makeAs(''w'');');
  FPack.add('var asMonths       = makeAs(''M'');');
  FPack.add('var asYears        = makeAs(''y'');');
  FPack.add('');
  FPack.add('function clone$1 () {');
  FPack.add('    return createDuration(this);');
  FPack.add('}');
  FPack.add('');
  FPack.add('function get$2 (units) {');
  FPack.add('    units = normalizeUnits(units);');
  FPack.add('    return this.isValid() ? this[units + ''s'']() : NaN;');
  FPack.add('}');
  FPack.add('');
  FPack.add('function makeGetter(name) {');
  FPack.add('    return function () {');
  FPack.add('        return this.isValid() ? this._data[name] : NaN;');
  FPack.add('    };');
  FPack.add('}');
  FPack.add('');
  FPack.add('var milliseconds = makeGetter(''milliseconds'');');
  FPack.add('var seconds      = makeGetter(''seconds'');');
  FPack.add('var minutes      = makeGetter(''minutes'');');
  FPack.add('var hours        = makeGetter(''hours'');');
  FPack.add('var days         = makeGetter(''days'');');
  FPack.add('var months       = makeGetter(''months'');');
  FPack.add('var years        = makeGetter(''years'');');
  FPack.add('');
  FPack.add('function weeks () {');
  FPack.add('    return absFloor(this.days() / 7);');
  FPack.add('}');
  FPack.add('');
  FPack.add('var round = Math.round;');
  FPack.add('var thresholds = {');
  FPack.add('    ss: 44,         // a few seconds to seconds');
  FPack.add('    s : 45,         // seconds to minute');
  FPack.add('    m : 45,         // minutes to hour');
  FPack.add('    h : 22,         // hours to day');
  FPack.add('    d : 26,         // days to month');
  FPack.add('    M : 11          // months to year');
  FPack.add('};');
  FPack.add('');
  FPack.add('// helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize');
  FPack.add('function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {');
  FPack.add('    return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);');
  FPack.add('}');
  FPack.add('');
  FPack.add('function relativeTime$1 (posNegDuration, withoutSuffix, locale) {');
  FPack.add('    var duration = createDuration(posNegDuration).abs();');
  FPack.add('    var seconds  = round(duration.as(''s''));');
  FPack.add('    var minutes  = round(duration.as(''m''));');
  FPack.add('    var hours    = round(duration.as(''h''));');
  FPack.add('    var days     = round(duration.as(''d''));');
  FPack.add('    var months   = round(duration.as(''M''));');
  FPack.add('    var years    = round(duration.as(''y''));');
  FPack.add('');
  FPack.add('    var a = seconds <= thresholds.ss && [''s'', seconds]  ||');
  FPack.add('            seconds < thresholds.s   && [''ss'', seconds] ||');
  FPack.add('            minutes <= 1             && [''m'']           ||');
  FPack.add('            minutes < thresholds.m   && [''mm'', minutes] ||');
  FPack.add('            hours   <= 1             && [''h'']           ||');
  FPack.add('            hours   < thresholds.h   && [''hh'', hours]   ||');
  FPack.add('            days    <= 1             && [''d'']           ||');
  FPack.add('            days    < thresholds.d   && [''dd'', days]    ||');
  FPack.add('            months  <= 1             && [''M'']           ||');
  FPack.add('            months  < thresholds.M   && [''MM'', months]  ||');
  FPack.add('            years   <= 1             && [''y'']           || [''yy'', years];');
  FPack.add('');
  FPack.add('    a[2] = withoutSuffix;');
  FPack.add('    a[3] = +posNegDuration > 0;');
  FPack.add('    a[4] = locale;');
  FPack.add('    return substituteTimeAgo.apply(null, a);');
  FPack.add('}');
  FPack.add('');
  FPack.add('// This function allows you to set the rounding function for relative time strings');
  FPack.add('function getSetRelativeTimeRounding (roundingFunction) {');
  FPack.add('    if (roundingFunction === undefined) {');
  FPack.add('        return round;');
  FPack.add('    }');
  FPack.add('    if (typeof(roundingFunction) === ''function'') {');
  FPack.add('        round = roundingFunction;');
  FPack.add('        return true;');
  FPack.add('    }');
  FPack.add('    return false;');
  FPack.add('}');
  FPack.add('');
  FPack.add('// This function allows you to set a threshold for relative time strings');
  FPack.add('function getSetRelativeTimeThreshold (threshold, limit) {');
  FPack.add('    if (thresholds[threshold] === undefined) {');
  FPack.add('        return false;');
  FPack.add('    }');
  FPack.add('    if (limit === undefined) {');
  FPack.add('        return thresholds[threshold];');
  FPack.add('    }');
  FPack.add('    thresholds[threshold] = limit;');
  FPack.add('    if (threshold === ''s'') {');
  FPack.add('        thresholds.ss = limit - 1;');
  FPack.add('    }');
  FPack.add('    return true;');
  FPack.add('}');
  FPack.add('');
  FPack.add('function humanize (withSuffix) {');
  FPack.add('    if (!this.isValid()) {');
  FPack.add('        return this.localeData().invalidDate();');
  FPack.add('    }');
  FPack.add('');
  FPack.add('    var locale = this.localeData();');
  FPack.add('    var output = relativeTime$1(this, !withSuffix, locale);');
  FPack.add('');
  FPack.add('    if (withSuffix) {');
  FPack.add('        output = locale.pastFuture(+this, output);');
  FPack.add('    }');
  FPack.add('');
  FPack.add('    return locale.postformat(output);');
  FPack.add('}');
  FPack.add('');
  FPack.add('var abs$1 = Math.abs;');
  FPack.add('');
  FPack.add('function sign(x) {');
  FPack.add('    return ((x > 0) - (x < 0)) || +x;');
  FPack.add('}');
  FPack.add('');
  FPack.add('function toISOString$1() {');
  FPack.add('    // for ISO strings we do not use the normal bubbling rules:');
  FPack.add('    //  * milliseconds bubble up until they become hours');
  FPack.add('    //  * days do not bubble at all');
  FPack.add('    //  * months bubble up until they become years');
  FPack.add('    // This is because there is no context-free conversion between hours and days');
end;

procedure TChartbundleJS.ChartbundleJS_19;
begin
  FPack.add('    // (think of clock changes)');
  FPack.add('    // and also not between days and months (28-31 days per month)');
  FPack.add('    if (!this.isValid()) {');
  FPack.add('        return this.localeData().invalidDate();');
  FPack.add('    }');
  FPack.add('');
  FPack.add('    var seconds = abs$1(this._milliseconds) / 1000;');
  FPack.add('    var days         = abs$1(this._days);');
  FPack.add('    var months       = abs$1(this._months);');
  FPack.add('    var minutes, hours, years;');
  FPack.add('');
  FPack.add('    // 3600 seconds -> 60 minutes -> 1 hour');
  FPack.add('    minutes           = absFloor(seconds / 60);');
  FPack.add('    hours             = absFloor(minutes / 60);');
  FPack.add('    seconds %= 60;');
  FPack.add('    minutes %= 60;');
  FPack.add('');
  FPack.add('    // 12 months -> 1 year');
  FPack.add('    years  = absFloor(months / 12);');
  FPack.add('    months %= 12;');
  FPack.add('');
  FPack.add('');
  FPack.add('    // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js');
  FPack.add('    var Y = years;');
  FPack.add('    var M = months;');
  FPack.add('    var D = days;');
  FPack.add('    var h = hours;');
  FPack.add('    var m = minutes;');
  FPack.add('    var s = seconds ? seconds.toFixed(3).replace(/\.?0+$/, '''') : '''';');
  FPack.add('    var total = this.asSeconds();');
  FPack.add('');
  FPack.add('    if (!total) {');
  FPack.add('        // this is the same as C#''s (Noda) and python (isodate)...');
  FPack.add('        // but not other JS (goog.date)');
  FPack.add('        return ''P0D'';');
  FPack.add('    }');
  FPack.add('');
  FPack.add('    var totalSign = total < 0 ? ''-'' : '''';');
  FPack.add('    var ymSign = sign(this._months) !== sign(total) ? ''-'' : '''';');
  FPack.add('    var daysSign = sign(this._days) !== sign(total) ? ''-'' : '''';');
  FPack.add('    var hmsSign = sign(this._milliseconds) !== sign(total) ? ''-'' : '''';');
  FPack.add('');
  FPack.add('    return totalSign + ''P'' +');
  FPack.add('        (Y ? ymSign + Y + ''Y'' : '''') +');
  FPack.add('        (M ? ymSign + M + ''M'' : '''') +');
  FPack.add('        (D ? daysSign + D + ''D'' : '''') +');
  FPack.add('        ((h || m || s) ? ''T'' : '''') +');
  FPack.add('        (h ? hmsSign + h + ''H'' : '''') +');
  FPack.add('        (m ? hmsSign + m + ''M'' : '''') +');
  FPack.add('        (s ? hmsSign + s + ''S'' : '''');');
  FPack.add('}');
  FPack.add('');
  FPack.add('var proto$2 = Duration.prototype;');
  FPack.add('');
  FPack.add('proto$2.isValid        = isValid$1;');
  FPack.add('proto$2.abs            = abs;');
  FPack.add('proto$2.add            = add$1;');
  FPack.add('proto$2.subtract       = subtract$1;');
  FPack.add('proto$2.as             = as;');
  FPack.add('proto$2.asMilliseconds = asMilliseconds;');
  FPack.add('proto$2.asSeconds      = asSeconds;');
  FPack.add('proto$2.asMinutes      = asMinutes;');
  FPack.add('proto$2.asHours        = asHours;');
  FPack.add('proto$2.asDays         = asDays;');
  FPack.add('proto$2.asWeeks        = asWeeks;');
  FPack.add('proto$2.asMonths       = asMonths;');
  FPack.add('proto$2.asYears        = asYears;');
  FPack.add('proto$2.valueOf        = valueOf$1;');
  FPack.add('proto$2._bubble        = bubble;');
  FPack.add('proto$2.clone          = clone$1;');
  FPack.add('proto$2.get            = get$2;');
  FPack.add('proto$2.milliseconds   = milliseconds;');
  FPack.add('proto$2.seconds        = seconds;');
  FPack.add('proto$2.minutes        = minutes;');
  FPack.add('proto$2.hours          = hours;');
  FPack.add('proto$2.days           = days;');
  FPack.add('proto$2.weeks          = weeks;');
  FPack.add('proto$2.months         = months;');
  FPack.add('proto$2.years          = years;');
  FPack.add('proto$2.humanize       = humanize;');
  FPack.add('proto$2.toISOString    = toISOString$1;');
  FPack.add('proto$2.toString       = toISOString$1;');
  FPack.add('proto$2.toJSON         = toISOString$1;');
  FPack.add('proto$2.locale         = locale;');
  FPack.add('proto$2.localeData     = localeData;');
  FPack.add('');
  FPack.add('// Deprecations');
  FPack.add('proto$2.toIsoString = deprecate(''toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)'', toISOString$1);');
  FPack.add('proto$2.lang = lang;');
  FPack.add('');
  FPack.add('// Side effect imports');
  FPack.add('');
  FPack.add('// FORMATTING');
  FPack.add('');
  FPack.add('addFormatToken(''X'', 0, 0, ''unix'');');
  FPack.add('addFormatToken(''x'', 0, 0, ''valueOf'');');
  FPack.add('');
  FPack.add('// PARSING');
  FPack.add('');
  FPack.add('addRegexToken(''x'', matchSigned);');
  FPack.add('addRegexToken(''X'', matchTimestamp);');
  FPack.add('addParseToken(''X'', function (input, array, config) {');
  FPack.add('    config._d = new Date(parseFloat(input, 10) * 1000);');
  FPack.add('});');
  FPack.add('addParseToken(''x'', function (input, array, config) {');
  FPack.add('    config._d = new Date(toInt(input));');
  FPack.add('});');
  FPack.add('');
  FPack.add('// Side effect imports');
  FPack.add('');
  FPack.add('');
  FPack.add('hooks.version = ''2.20.1'';');
  FPack.add('');
  FPack.add('setHookCallback(createLocal);');
  FPack.add('');
  FPack.add('hooks.fn                    = proto;');
  FPack.add('hooks.min                   = min;');
  FPack.add('hooks.max                   = max;');
  FPack.add('hooks.now                   = now;');
  FPack.add('hooks.utc                   = createUTC;');
  FPack.add('hooks.unix                  = createUnix;');
  FPack.add('hooks.months                = listMonths;');
  FPack.add('hooks.isDate                = isDate;');
  FPack.add('hooks.locale                = getSetGlobalLocale;');
  FPack.add('hooks.invalid               = createInvalid;');
  FPack.add('hooks.duration              = createDuration;');
  FPack.add('hooks.isMoment              = isMoment;');
  FPack.add('hooks.weekdays              = listWeekdays;');
  FPack.add('hooks.parseZone             = createInZone;');
  FPack.add('hooks.localeData            = getLocale;');
  FPack.add('hooks.isDuration            = isDuration;');
  FPack.add('hooks.monthsShort           = listMonthsShort;');
  FPack.add('hooks.weekdaysMin           = listWeekdaysMin;');
  FPack.add('hooks.defineLocale          = defineLocale;');
  FPack.add('hooks.updateLocale          = updateLocale;');
  FPack.add('hooks.locales               = listLocales;');
  FPack.add('hooks.weekdaysShort         = listWeekdaysShort;');
  FPack.add('hooks.normalizeUnits        = normalizeUnits;');
  FPack.add('hooks.relativeTimeRounding  = getSetRelativeTimeRounding;');
  FPack.add('hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;');
  FPack.add('hooks.calendarFormat        = getCalendarFormat;');
  FPack.add('hooks.prototype             = proto;');
  FPack.add('');
  FPack.add('// currently HTML5 input type only supports 24-hour formats');
  FPack.add('hooks.HTML5_FMT = {');
  FPack.add('    DATETIME_LOCAL: ''YYYY-MM-DDTHH:mm'',             // <input type="datetime-local" />');
  FPack.add('    DATETIME_LOCAL_SECONDS: ''YYYY-MM-DDTHH:mm:ss'',  // <input type="datetime-local" step="1" />');
  FPack.add('    DATETIME_LOCAL_MS: ''YYYY-MM-DDTHH:mm:ss.SSS'',   // <input type="datetime-local" step="0.001" />');
  FPack.add('    DATE: ''YYYY-MM-DD'',                             // <input type="date" />');
  FPack.add('    TIME: ''HH:mm'',                                  // <input type="time" />');
  FPack.add('    TIME_SECONDS: ''HH:mm:ss'',                       // <input type="time" step="1" />');
  FPack.add('    TIME_MS: ''HH:mm:ss.SSS'',                        // <input type="time" step="0.001" />');
  FPack.add('    WEEK: ''YYYY-[W]WW'',                             // <input type="week" />');
  FPack.add('    MONTH: ''YYYY-MM''                                // <input type="month" />');
  FPack.add('};');
  FPack.add('');
  FPack.add('return hooks;');
  FPack.add('');
  FPack.add('})));');
  FPack.add('');
  FPack.add('},{}],7:[function(require,module,exports){');
  FPack.add('/**');
  FPack.add(' * @namespace Chart');
  FPack.add(' */');
  FPack.add('var Chart = require(29)();');
  FPack.add('');
  FPack.add('Chart.helpers = require(45);');
  FPack.add('');
  FPack.add('// @todo dispatch these helpers into appropriated helpers/helpers.* file and write unit tests!');
  FPack.add('require(27)(Chart);');
  FPack.add('');
  FPack.add('Chart.defaults = require(25);');
  FPack.add('Chart.Element = require(26);');
  FPack.add('Chart.elements = require(40);');
  FPack.add('Chart.Interaction = require(28);');
  FPack.add('Chart.layouts = require(30);');
  FPack.add('Chart.platform = require(48);');
  FPack.add('Chart.plugins = require(31);');
  FPack.add('Chart.Ticks = require(34);');
  FPack.add('');
  FPack.add('require(22)(Chart);');
  FPack.add('require(23)(Chart);');
  FPack.add('require(24)(Chart);');
  FPack.add('require(33)(Chart);');
  FPack.add('require(32)(Chart);');
  FPack.add('require(35)(Chart);');
  FPack.add('');
  FPack.add('require(55)(Chart);');
  FPack.add('require(53)(Chart);');
  FPack.add('require(54)(Chart);');
  FPack.add('require(56)(Chart);');
  FPack.add('require(57)(Chart);');
  FPack.add('require(58)(Chart);');
  FPack.add('');
  FPack.add('// Controllers must be loaded after elements');
  FPack.add('// See Chart.core.datasetController.dataElementType');
  FPack.add('require(15)(Chart);');
  FPack.add('require(16)(Chart);');
  FPack.add('require(17)(Chart);');
  FPack.add('require(18)(Chart);');
  FPack.add('require(19)(Chart);');
  FPack.add('require(20)(Chart);');
  FPack.add('require(21)(Chart);');
  FPack.add('');
  FPack.add('require(8)(Chart);');
  FPack.add('require(9)(Chart);');
  FPack.add('require(10)(Chart);');
  FPack.add('require(11)(Chart);');
  FPack.add('require(12)(Chart);');
  FPack.add('require(13)(Chart);');
  FPack.add('require(14)(Chart);');
  FPack.add('');
  FPack.add('// Loading built-it plugins');
  FPack.add('var plugins = require(49);');
  FPack.add('for (var k in plugins) {');
  FPack.add('	if (plugins.hasOwnProperty(k)) {');
  FPack.add('		Chart.plugins.register(plugins[k]);');
  FPack.add('	}');
  FPack.add('}');
  FPack.add('');
  FPack.add('Chart.platform.initialize();');
  FPack.add('');
  FPack.add('module.exports = Chart;');
  FPack.add('if (typeof window !== ''undefined'') {');
  FPack.add('	window.Chart = Chart;');
  FPack.add('}');
  FPack.add('');
  FPack.add('// DEPRECATIONS');
  FPack.add('');
  FPack.add('/**');
  FPack.add(' * Provided for backward compatibility, not available anymore');
  FPack.add(' * @namespace Chart.Legend');
  FPack.add(' * @deprecated since version 2.1.5');
  FPack.add(' * @todo remove at version 3');
  FPack.add(' * @private');
  FPack.add(' */');
  FPack.add('Chart.Legend = plugins.legend._element;');
  FPack.add('');
  FPack.add('/**');
  FPack.add(' * Provided for backward compatibility, not available anymore');
  FPack.add(' * @namespace Chart.Title');
  FPack.add(' * @deprecated since version 2.1.5');
  FPack.add(' * @todo remove at version 3');
  FPack.add(' * @private');
  FPack.add(' */');
  FPack.add('Chart.Title = plugins.title._element;');
  FPack.add('');
  FPack.add('/**');
  FPack.add(' * Provided for backward compatibility, use Chart.plugins instead');
  FPack.add(' * @namespace Chart.pluginService');
  FPack.add(' * @deprecated since version 2.1.5');
  FPack.add(' * @todo remove at version 3');
  FPack.add(' * @private');
  FPack.add(' */');
  FPack.add('Chart.pluginService = Chart.plugins;');
  FPack.add('');
  FPack.add('/**');
  FPack.add(' * Provided for backward compatibility, inheriting from Chart.PlugingBase has no');
  FPack.add(' * effect, instead simply create/register plugins via plain JavaScript objects.');
  FPack.add(' * @interface Chart.PluginBase');
  FPack.add(' * @deprecated since version 2.5.0');
  FPack.add(' * @todo remove at version 3');
  FPack.add(' * @private');
  FPack.add(' */');
  FPack.add('Chart.PluginBase = Chart.Element.extend({});');
  FPack.add('');
  FPack.add('/**');
  FPack.add(' * Provided for backward compatibility, use Chart.helpers.canvas instead.');
  FPack.add(' * @namespace Chart.canvasHelpers');
  FPack.add(' * @deprecated since version 2.6.0');
  FPack.add(' * @todo remove at version 3');
  FPack.add(' * @private');
  FPack.add(' */');
  FPack.add('Chart.canvasHelpers = Chart.helpers.canvas;');
  FPack.add('');
  FPack.add('/**');
  FPack.add(' * Provided for backward compatibility, use Chart.layouts instead.');
  FPack.add(' * @namespace Chart.layoutService');
  FPack.add(' * @deprecated since version 2.8.0');
  FPack.add(' * @todo remove at version 3');
  FPack.add(' * @private');
  FPack.add(' */');
  FPack.add('Chart.layoutService = Chart.layouts;');
  FPack.add('');
  FPack.add('},{"10":10,"11":11,"12":12,"13":13,"14":14,"15":15,"16":16,"17":17,"18":18,"19":19,"20":20,"21":21,"22":22,"23":23,"24":24,"25":25,"26":26,"27":27,"28":28,"29":29,"30":30,"31":31,"32":32,"33":33,"34"');
  FPack.add(':34,"35":35,"40":40,"45":45,"48":48,"49":49,"53":53,"54":54,"55":55,"56":56,"57":57,"58":58,"8":8,"9":9}],8:[function(require,module,exports){');
  FPack.add('''use strict'';');
  FPack.add('');
  FPack.add('module.exports = function(Chart) {');
  FPack.add('');
  FPack.add('	Chart.Bar = function(context, config) {');
  FPack.add('		config.type = ''bar'';');
  FPack.add('');
  FPack.add('		return new Chart(context, config);');
  FPack.add('	};');
  FPack.add('');
  FPack.add('};');
  FPack.add('');
  FPack.add('},{}],9:[function(require,module,exports){');
  FPack.add('''use strict'';');
  FPack.add('');
  FPack.add('module.exports = function(Chart) {');
  FPack.add('');
  FPack.add('	Chart.Bubble = function(context, config) {');
  FPack.add('		config.type = ''bubble'';');
  FPack.add('		return new Chart(context, config);');
  FPack.add('	};');
  FPack.add('');
  FPack.add('};');
  FPack.add('');
  FPack.add('},{}],10:[function(require,module,exports){');
  FPack.add('''use strict'';');
  FPack.add('');
  FPack.add('module.exports = function(Chart) {');
  FPack.add('');
  FPack.add('	Chart.Doughnut = function(context, config) {');
  FPack.add('		config.type = ''doughnut'';');
  FPack.add('');
  FPack.add('		return new Chart(context, config);');
  FPack.add('	};');
  FPack.add('');
  FPack.add('};');
  FPack.add('');
  FPack.add('},{}],11:[function(require,module,exports){');
  FPack.add('''use strict'';');
  FPack.add('');
  FPack.add('module.exports = function(Chart) {');
  FPack.add('');
  FPack.add('	Chart.Line = function(context, config) {');
  FPack.add('		config.type = ''line'';');
  FPack.add('');
  FPack.add('		return new Chart(context, config);');
  FPack.add('	};');
  FPack.add('');
  FPack.add('};');
  FPack.add('');
end;

procedure TChartbundleJS.ChartbundleJS_20;
begin
  FPack.add('},{}],12:[function(require,module,exports){');
  FPack.add('''use strict'';');
  FPack.add('');
  FPack.add('module.exports = function(Chart) {');
  FPack.add('');
  FPack.add('	Chart.PolarArea = function(context, config) {');
  FPack.add('		config.type = ''polarArea'';');
  FPack.add('');
  FPack.add('		return new Chart(context, config);');
  FPack.add('	};');
  FPack.add('');
  FPack.add('};');
  FPack.add('');
  FPack.add('},{}],13:[function(require,module,exports){');
  FPack.add('''use strict'';');
  FPack.add('');
  FPack.add('module.exports = function(Chart) {');
  FPack.add('');
  FPack.add('	Chart.Radar = function(context, config) {');
  FPack.add('		config.type = ''radar'';');
  FPack.add('');
  FPack.add('		return new Chart(context, config);');
  FPack.add('	};');
  FPack.add('');
  FPack.add('};');
  FPack.add('');
  FPack.add('},{}],14:[function(require,module,exports){');
  FPack.add('''use strict'';');
  FPack.add('');
  FPack.add('module.exports = function(Chart) {');
  FPack.add('	Chart.Scatter = function(context, config) {');
  FPack.add('		config.type = ''scatter'';');
  FPack.add('		return new Chart(context, config);');
  FPack.add('	};');
  FPack.add('};');
  FPack.add('');
  FPack.add('},{}],15:[function(require,module,exports){');
  FPack.add('''use strict'';');
  FPack.add('');
  FPack.add('var defaults = require(25);');
  FPack.add('var elements = require(40);');
  FPack.add('var helpers = require(45);');
  FPack.add('');
  FPack.add('defaults._set(''bar'', {');
  FPack.add('	hover: {');
  FPack.add('		mode: ''label''');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	scales: {');
  FPack.add('		xAxes: [{');
  FPack.add('			type: ''category'',');
  FPack.add('');
  FPack.add('			// Specific to Bar Controller');
  FPack.add('			categoryPercentage: 0.8,');
  FPack.add('			barPercentage: 0.9,');
  FPack.add('');
  FPack.add('			// offset settings');
  FPack.add('			offset: true,');
  FPack.add('');
  FPack.add('			// grid line settings');
  FPack.add('			gridLines: {');
  FPack.add('				offsetGridLines: true');
  FPack.add('			}');
  FPack.add('		}],');
  FPack.add('');
  FPack.add('		yAxes: [{');
  FPack.add('			type: ''linear''');
  FPack.add('		}]');
  FPack.add('	}');
  FPack.add('});');
  FPack.add('');
  FPack.add('defaults._set(''horizontalBar'', {');
  FPack.add('	hover: {');
  FPack.add('		mode: ''index'',');
  FPack.add('		axis: ''y''');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	scales: {');
  FPack.add('		xAxes: [{');
  FPack.add('			type: ''linear'',');
  FPack.add('			position: ''bottom''');
  FPack.add('		}],');
  FPack.add('');
  FPack.add('		yAxes: [{');
  FPack.add('			position: ''left'',');
  FPack.add('			type: ''category'',');
  FPack.add('');
  FPack.add('			// Specific to Horizontal Bar Controller');
  FPack.add('			categoryPercentage: 0.8,');
  FPack.add('			barPercentage: 0.9,');
  FPack.add('');
  FPack.add('			// offset settings');
  FPack.add('			offset: true,');
  FPack.add('');
  FPack.add('			// grid line settings');
  FPack.add('			gridLines: {');
  FPack.add('				offsetGridLines: true');
  FPack.add('			}');
  FPack.add('		}]');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	elements: {');
  FPack.add('		rectangle: {');
  FPack.add('			borderSkipped: ''left''');
  FPack.add('		}');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	tooltips: {');
  FPack.add('		callbacks: {');
  FPack.add('			title: function(item, data) {');
  FPack.add('				// Pick first xLabel for now');
  FPack.add('				var title = '''';');
  FPack.add('');
  FPack.add('				if (item.length > 0) {');
  FPack.add('					if (item[0].yLabel) {');
  FPack.add('						title = item[0].yLabel;');
  FPack.add('					} else if (data.labels.length > 0 && item[0].index < data.labels.length) {');
  FPack.add('						title = data.labels[item[0].index];');
  FPack.add('					}');
  FPack.add('				}');
  FPack.add('');
  FPack.add('				return title;');
  FPack.add('			},');
  FPack.add('');
  FPack.add('			label: function(item, data) {');
  FPack.add('				var datasetLabel = data.datasets[item.datasetIndex].label || '''';');
  FPack.add('				return datasetLabel + '': '' + item.xLabel;');
  FPack.add('			}');
  FPack.add('		},');
  FPack.add('		mode: ''index'',');
  FPack.add('		axis: ''y''');
  FPack.add('	}');
  FPack.add('});');
  FPack.add('');
  FPack.add('/**');
  FPack.add(' * Computes the "optimal" sample size to maintain bars equally sized while preventing overlap.');
  FPack.add(' * @private');
  FPack.add(' */');
  FPack.add('function computeMinSampleSize(scale, pixels) {');
  FPack.add('	var min = scale.isHorizontal() ? scale.width : scale.height;');
  FPack.add('	var ticks = scale.getTicks();');
  FPack.add('	var prev, curr, i, ilen;');
  FPack.add('');
  FPack.add('	for (i = 1, ilen = pixels.length; i < ilen; ++i) {');
  FPack.add('		min = Math.min(min, pixels[i] - pixels[i - 1]);');
  FPack.add('	}');
  FPack.add('');
  FPack.add('	for (i = 0, ilen = ticks.length; i < ilen; ++i) {');
  FPack.add('		curr = scale.getPixelForTick(i);');
  FPack.add('		min = i > 0 ? Math.min(min, curr - prev) : min;');
  FPack.add('		prev = curr;');
  FPack.add('	}');
  FPack.add('');
  FPack.add('	return min;');
  FPack.add('}');
  FPack.add('');
  FPack.add('/**');
  FPack.add(' * Computes an "ideal" category based on the absolute bar thickness or, if undefined or null,');
  FPack.add(' * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This');
  FPack.add(' * mode currently always generates bars equally sized (until we introduce scriptable options?).');
  FPack.add(' * @private');
  FPack.add(' */');
  FPack.add('function computeFitCategoryTraits(index, ruler, options) {');
  FPack.add('	var thickness = options.barThickness;');
  FPack.add('	var count = ruler.stackCount;');
  FPack.add('	var curr = ruler.pixels[index];');
  FPack.add('	var size, ratio;');
  FPack.add('');
  FPack.add('	if (helpers.isNullOrUndef(thickness)) {');
  FPack.add('		size = ruler.min * options.categoryPercentage;');
  FPack.add('		ratio = options.barPercentage;');
  FPack.add('	} else {');
  FPack.add('		// When bar thickness is enforced, category and bar percentages are ignored.');
  FPack.add('		// Note(SB): we could add support for relative bar thickness (e.g. barThickness: ''50%'')');
  FPack.add('		// and deprecate barPercentage since this value is ignored when thickness is absolute.');
  FPack.add('		size = thickness * count;');
  FPack.add('		ratio = 1;');
  FPack.add('	}');
  FPack.add('');
  FPack.add('	return {');
  FPack.add('		chunk: size / count,');
  FPack.add('		ratio: ratio,');
  FPack.add('		start: curr - (size / 2)');
  FPack.add('	};');
  FPack.add('}');
  FPack.add('');
  FPack.add('/**');
  FPack.add(' * Computes an "optimal" category that globally arranges bars side by side (no gap when');
  FPack.add(' * percentage options are 1), based on the previous and following categories. This mode');
  FPack.add(' * generates bars with different widths when data are not evenly spaced.');
  FPack.add(' * @private');
  FPack.add(' */');
  FPack.add('function computeFlexCategoryTraits(index, ruler, options) {');
  FPack.add('	var pixels = ruler.pixels;');
  FPack.add('	var curr = pixels[index];');
  FPack.add('	var prev = index > 0 ? pixels[index - 1] : null;');
  FPack.add('	var next = index < pixels.length - 1 ? pixels[index + 1] : null;');
  FPack.add('	var percent = options.categoryPercentage;');
  FPack.add('	var start, size;');
  FPack.add('');
  FPack.add('	if (prev === null) {');
  FPack.add('		// first data: its size is double based on the next point or,');
  FPack.add('		// if it''s also the last data, we use the scale end extremity.');
  FPack.add('		prev = curr - (next === null ? ruler.end - curr : next - curr);');
  FPack.add('	}');
  FPack.add('');
  FPack.add('	if (next === null) {');
  FPack.add('		// last data: its size is also double based on the previous point.');
  FPack.add('		next = curr + curr - prev;');
  FPack.add('	}');
  FPack.add('');
  FPack.add('	start = curr - ((curr - prev) / 2) * percent;');
  FPack.add('	size = ((next - prev) / 2) * percent;');
  FPack.add('');
  FPack.add('	return {');
  FPack.add('		chunk: size / ruler.stackCount,');
  FPack.add('		ratio: options.barPercentage,');
  FPack.add('		start: start');
  FPack.add('	};');
  FPack.add('}');
  FPack.add('');
  FPack.add('module.exports = function(Chart) {');
  FPack.add('');
  FPack.add('	Chart.controllers.bar = Chart.DatasetController.extend({');
  FPack.add('');
  FPack.add('		dataElementType: elements.Rectangle,');
  FPack.add('');
  FPack.add('		initialize: function() {');
  FPack.add('			var me = this;');
  FPack.add('			var meta;');
  FPack.add('');
  FPack.add('			Chart.DatasetController.prototype.initialize.apply(me, arguments);');
  FPack.add('');
  FPack.add('			meta = me.getMeta();');
  FPack.add('			meta.stack = me.getDataset().stack;');
  FPack.add('			meta.bar = true;');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		update: function(reset) {');
  FPack.add('			var me = this;');
  FPack.add('			var rects = me.getMeta().data;');
  FPack.add('			var i, ilen;');
  FPack.add('');
  FPack.add('			me._ruler = me.getRuler();');
  FPack.add('');
  FPack.add('			for (i = 0, ilen = rects.length; i < ilen; ++i) {');
  FPack.add('				me.updateElement(rects[i], i, reset);');
  FPack.add('			}');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		updateElement: function(rectangle, index, reset) {');
  FPack.add('			var me = this;');
  FPack.add('			var chart = me.chart;');
  FPack.add('			var meta = me.getMeta();');
  FPack.add('			var dataset = me.getDataset();');
  FPack.add('			var custom = rectangle.custom || {};');
  FPack.add('			var rectangleOptions = chart.options.elements.rectangle;');
  FPack.add('');
  FPack.add('			rectangle._xScale = me.getScaleForId(meta.xAxisID);');
  FPack.add('			rectangle._yScale = me.getScaleForId(meta.yAxisID);');
  FPack.add('			rectangle._datasetIndex = me.index;');
  FPack.add('			rectangle._index = index;');
  FPack.add('');
  FPack.add('			rectangle._model = {');
  FPack.add('				datasetLabel: dataset.label,');
  FPack.add('				label: chart.data.labels[index],');
  FPack.add('				borderSkipped: custom.borderSkipped ? custom.borderSkipped : rectangleOptions.borderSkipped,');
  FPack.add('				backgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.backgroundColor, index, rectangleOptions.backgroundColor),');
  FPack.add('				borderColor: custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.borderColor, index, rectangleOptions.borderColor),');
  FPack.add('				borderWidth: custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.borderWidth, index, rectangleOptions.borderWidth)');
  FPack.add('			};');
  FPack.add('');
  FPack.add('			me.updateElementGeometry(rectangle, index, reset);');
  FPack.add('');
  FPack.add('			rectangle.pivot();');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		/**');
  FPack.add('		 * @private');
  FPack.add('		 */');
  FPack.add('		updateElementGeometry: function(rectangle, index, reset) {');
  FPack.add('			var me = this;');
  FPack.add('			var model = rectangle._model;');
  FPack.add('			var vscale = me.getValueScale();');
  FPack.add('			var base = vscale.getBasePixel();');
  FPack.add('			var horizontal = vscale.isHorizontal();');
  FPack.add('			var ruler = me._ruler || me.getRuler();');
  FPack.add('			var vpixels = me.calculateBarValuePixels(me.index, index);');
  FPack.add('			var ipixels = me.calculateBarIndexPixels(me.index, index, ruler);');
  FPack.add('');
  FPack.add('			model.horizontal = horizontal;');
  FPack.add('			model.base = reset ? base : vpixels.base;');
  FPack.add('			model.x = horizontal ? reset ? base : vpixels.head : ipixels.center;');
  FPack.add('			model.y = horizontal ? ipixels.center : reset ? base : vpixels.head;');
  FPack.add('			model.height = horizontal ? ipixels.size : undefined;');
  FPack.add('			model.width = horizontal ? undefined : ipixels.size;');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		/**');
  FPack.add('		 * @private');
  FPack.add('		 */');
  FPack.add('		getValueScaleId: function() {');
  FPack.add('			return this.getMeta().yAxisID;');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		/**');
  FPack.add('		 * @private');
  FPack.add('		 */');
  FPack.add('		getIndexScaleId: function() {');
  FPack.add('			return this.getMeta().xAxisID;');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		/**');
  FPack.add('		 * @private');
  FPack.add('		 */');
  FPack.add('		getValueScale: function() {');
  FPack.add('			return this.getScaleForId(this.getValueScaleId());');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		/**');
  FPack.add('		 * @private');
  FPack.add('		 */');
  FPack.add('		getIndexScale: function() {');
  FPack.add('			return this.getScaleForId(this.getIndexScaleId());');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		/**');
  FPack.add('		 * Returns the stacks based on groups and bar visibility.');
  FPack.add('		 * @param {Number} [last] - The dataset index');
  FPack.add('		 * @returns {Array} The stack list');
  FPack.add('		 * @private');
  FPack.add('		 */');
  FPack.add('		_getStacks: function(last) {');
  FPack.add('			var me = this;');
  FPack.add('			var chart = me.chart;');
  FPack.add('			var scale = me.getIndexScale();');
end;

procedure TChartbundleJS.ChartbundleJS_21;
begin
  FPack.add('			var stacked = scale.options.stacked;');
  FPack.add('			var ilen = last === undefined ? chart.data.datasets.length : last + 1;');
  FPack.add('			var stacks = [];');
  FPack.add('			var i, meta;');
  FPack.add('');
  FPack.add('			for (i = 0; i < ilen; ++i) {');
  FPack.add('				meta = chart.getDatasetMeta(i);');
  FPack.add('				if (meta.bar && chart.isDatasetVisible(i) &&');
  FPack.add('					(stacked === false ||');
  FPack.add('					(stacked === true && stacks.indexOf(meta.stack) === -1) ||');
  FPack.add('					(stacked === undefined && (meta.stack === undefined || stacks.indexOf(meta.stack) === -1)))) {');
  FPack.add('					stacks.push(meta.stack);');
  FPack.add('				}');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			return stacks;');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		/**');
  FPack.add('		 * Returns the effective number of stacks based on groups and bar visibility.');
  FPack.add('		 * @private');
  FPack.add('		 */');
  FPack.add('		getStackCount: function() {');
  FPack.add('			return this._getStacks().length;');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		/**');
  FPack.add('		 * Returns the stack index for the given dataset based on groups and bar visibility.');
  FPack.add('		 * @param {Number} [datasetIndex] - The dataset index');
  FPack.add('		 * @param {String} [name] - The stack name to find');
  FPack.add('		 * @returns {Number} The stack index');
  FPack.add('		 * @private');
  FPack.add('		 */');
  FPack.add('		getStackIndex: function(datasetIndex, name) {');
  FPack.add('			var stacks = this._getStacks(datasetIndex);');
  FPack.add('			var index = (name !== undefined)');
  FPack.add('				? stacks.indexOf(name)');
  FPack.add('				: -1; // indexOf returns -1 if element is not present');
  FPack.add('');
  FPack.add('			return (index === -1)');
  FPack.add('				? stacks.length - 1');
  FPack.add('				: index;');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		/**');
  FPack.add('		 * @private');
  FPack.add('		 */');
  FPack.add('		getRuler: function() {');
  FPack.add('			var me = this;');
  FPack.add('			var scale = me.getIndexScale();');
  FPack.add('			var stackCount = me.getStackCount();');
  FPack.add('			var datasetIndex = me.index;');
  FPack.add('			var isHorizontal = scale.isHorizontal();');
  FPack.add('			var start = isHorizontal ? scale.left : scale.top;');
  FPack.add('			var end = start + (isHorizontal ? scale.width : scale.height);');
  FPack.add('			var pixels = [];');
  FPack.add('			var i, ilen, min;');
  FPack.add('');
  FPack.add('			for (i = 0, ilen = me.getMeta().data.length; i < ilen; ++i) {');
  FPack.add('				pixels.push(scale.getPixelForValue(null, i, datasetIndex));');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			min = helpers.isNullOrUndef(scale.options.barThickness)');
  FPack.add('				? computeMinSampleSize(scale, pixels)');
  FPack.add('				: -1;');
  FPack.add('');
  FPack.add('			return {');
  FPack.add('				min: min,');
  FPack.add('				pixels: pixels,');
  FPack.add('				start: start,');
  FPack.add('				end: end,');
  FPack.add('				stackCount: stackCount,');
  FPack.add('				scale: scale');
  FPack.add('			};');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		/**');
  FPack.add('		 * Note: pixel values are not clamped to the scale area.');
  FPack.add('		 * @private');
  FPack.add('		 */');
  FPack.add('		calculateBarValuePixels: function(datasetIndex, index) {');
  FPack.add('			var me = this;');
  FPack.add('			var chart = me.chart;');
  FPack.add('			var meta = me.getMeta();');
  FPack.add('			var scale = me.getValueScale();');
  FPack.add('			var datasets = chart.data.datasets;');
  FPack.add('			var value = scale.getRightValue(datasets[datasetIndex].data[index]);');
  FPack.add('			var stacked = scale.options.stacked;');
  FPack.add('			var stack = meta.stack;');
  FPack.add('			var start = 0;');
  FPack.add('			var i, imeta, ivalue, base, head, size;');
  FPack.add('');
  FPack.add('			if (stacked || (stacked === undefined && stack !== undefined)) {');
  FPack.add('				for (i = 0; i < datasetIndex; ++i) {');
  FPack.add('					imeta = chart.getDatasetMeta(i);');
  FPack.add('');
  FPack.add('					if (imeta.bar &&');
  FPack.add('						imeta.stack === stack &&');
  FPack.add('						imeta.controller.getValueScaleId() === scale.id &&');
  FPack.add('						chart.isDatasetVisible(i)) {');
  FPack.add('');
  FPack.add('						ivalue = scale.getRightValue(datasets[i].data[index]);');
  FPack.add('						if ((value < 0 && ivalue < 0) || (value >= 0 && ivalue > 0)) {');
  FPack.add('							start += ivalue;');
  FPack.add('						}');
  FPack.add('					}');
  FPack.add('				}');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			base = scale.getPixelForValue(start);');
  FPack.add('			head = scale.getPixelForValue(start + value);');
  FPack.add('			size = (head - base) / 2;');
  FPack.add('');
  FPack.add('			return {');
  FPack.add('				size: size,');
  FPack.add('				base: base,');
  FPack.add('				head: head,');
  FPack.add('				center: head + size / 2');
  FPack.add('			};');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		/**');
  FPack.add('		 * @private');
  FPack.add('		 */');
  FPack.add('		calculateBarIndexPixels: function(datasetIndex, index, ruler) {');
  FPack.add('			var me = this;');
  FPack.add('			var options = ruler.scale.options;');
  FPack.add('			var range = options.barThickness === ''flex''');
  FPack.add('				? computeFlexCategoryTraits(index, ruler, options)');
  FPack.add('				: computeFitCategoryTraits(index, ruler, options);');
  FPack.add('');
  FPack.add('			var stackIndex = me.getStackIndex(datasetIndex, me.getMeta().stack);');
  FPack.add('			var center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);');
  FPack.add('			var size = Math.min(');
  FPack.add('				helpers.valueOrDefault(options.maxBarThickness, Infinity),');
  FPack.add('				range.chunk * range.ratio);');
  FPack.add('');
  FPack.add('			return {');
  FPack.add('				base: center - size / 2,');
  FPack.add('				head: center + size / 2,');
  FPack.add('				center: center,');
  FPack.add('				size: size');
  FPack.add('			};');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		draw: function() {');
  FPack.add('			var me = this;');
  FPack.add('			var chart = me.chart;');
  FPack.add('			var scale = me.getValueScale();');
  FPack.add('			var rects = me.getMeta().data;');
  FPack.add('			var dataset = me.getDataset();');
  FPack.add('			var ilen = rects.length;');
  FPack.add('			var i = 0;');
  FPack.add('');
  FPack.add('			helpers.canvas.clipArea(chart.ctx, chart.chartArea);');
  FPack.add('');
  FPack.add('			for (; i < ilen; ++i) {');
  FPack.add('				if (!isNaN(scale.getRightValue(dataset.data[i]))) {');
  FPack.add('					rects[i].draw();');
  FPack.add('				}');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			helpers.canvas.unclipArea(chart.ctx);');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		setHoverStyle: function(rectangle) {');
  FPack.add('			var dataset = this.chart.data.datasets[rectangle._datasetIndex];');
  FPack.add('			var index = rectangle._index;');
  FPack.add('			var custom = rectangle.custom || {};');
  FPack.add('			var model = rectangle._model;');
  FPack.add('');
  FPack.add('			model.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : helpers.valueAtIndexOrDefault(dataset.hoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));');
  FPack.add('			model.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : helpers.valueAtIndexOrDefault(dataset.hoverBorderColor, index, helpers.getHoverColor(model.borderColor));');
  FPack.add('			model.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : helpers.valueAtIndexOrDefault(dataset.hoverBorderWidth, index, model.borderWidth);');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		removeHoverStyle: function(rectangle) {');
  FPack.add('			var dataset = this.chart.data.datasets[rectangle._datasetIndex];');
  FPack.add('			var index = rectangle._index;');
  FPack.add('			var custom = rectangle.custom || {};');
  FPack.add('			var model = rectangle._model;');
  FPack.add('			var rectangleElementOptions = this.chart.options.elements.rectangle;');
  FPack.add('');
  FPack.add('			model.backgroundColor = custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.backgroundColor, index, rectangleElementOptions.backgroundColor);');
  FPack.add('			model.borderColor = custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.borderColor, index, rectangleElementOptions.borderColor);');
  FPack.add('			model.borderWidth = custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.borderWidth, index, rectangleElementOptions.borderWidth);');
  FPack.add('		}');
  FPack.add('	});');
  FPack.add('');
  FPack.add('	Chart.controllers.horizontalBar = Chart.controllers.bar.extend({');
  FPack.add('		/**');
  FPack.add('		 * @private');
  FPack.add('		 */');
  FPack.add('		getValueScaleId: function() {');
  FPack.add('			return this.getMeta().xAxisID;');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		/**');
  FPack.add('		 * @private');
  FPack.add('		 */');
  FPack.add('		getIndexScaleId: function() {');
  FPack.add('			return this.getMeta().yAxisID;');
  FPack.add('		}');
  FPack.add('	});');
  FPack.add('};');
  FPack.add('');
  FPack.add('},{"25":25,"40":40,"45":45}],16:[function(require,module,exports){');
  FPack.add('''use strict'';');
  FPack.add('');
  FPack.add('var defaults = require(25);');
  FPack.add('var elements = require(40);');
  FPack.add('var helpers = require(45);');
  FPack.add('');
  FPack.add('defaults._set(''bubble'', {');
  FPack.add('	hover: {');
  FPack.add('		mode: ''single''');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	scales: {');
  FPack.add('		xAxes: [{');
  FPack.add('			type: ''linear'', // bubble should probably use a linear scale by default');
  FPack.add('			position: ''bottom'',');
  FPack.add('			id: ''x-axis-0'' // need an ID so datasets can reference the scale');
  FPack.add('		}],');
  FPack.add('		yAxes: [{');
  FPack.add('			type: ''linear'',');
  FPack.add('			position: ''left'',');
  FPack.add('			id: ''y-axis-0''');
  FPack.add('		}]');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	tooltips: {');
  FPack.add('		callbacks: {');
  FPack.add('			title: function() {');
  FPack.add('				// Title doesn''t make sense for scatter since we format the data as a point');
  FPack.add('				return '''';');
  FPack.add('			},');
  FPack.add('			label: function(item, data) {');
  FPack.add('				var datasetLabel = data.datasets[item.datasetIndex].label || '''';');
  FPack.add('				var dataPoint = data.datasets[item.datasetIndex].data[item.index];');
  FPack.add('				return datasetLabel + '': ('' + item.xLabel + '', '' + item.yLabel + '', '' + dataPoint.r + '')'';');
  FPack.add('			}');
  FPack.add('		}');
  FPack.add('	}');
  FPack.add('});');
  FPack.add('');
  FPack.add('');
  FPack.add('module.exports = function(Chart) {');
  FPack.add('');
  FPack.add('	Chart.controllers.bubble = Chart.DatasetController.extend({');
  FPack.add('		/**');
  FPack.add('		 * @protected');
  FPack.add('		 */');
  FPack.add('		dataElementType: elements.Point,');
  FPack.add('');
  FPack.add('		/**');
  FPack.add('		 * @protected');
  FPack.add('		 */');
  FPack.add('		update: function(reset) {');
  FPack.add('			var me = this;');
  FPack.add('			var meta = me.getMeta();');
  FPack.add('			var points = meta.data;');
  FPack.add('');
  FPack.add('			// Update Points');
  FPack.add('			helpers.each(points, function(point, index) {');
  FPack.add('				me.updateElement(point, index, reset);');
  FPack.add('			});');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		/**');
  FPack.add('		 * @protected');
  FPack.add('		 */');
  FPack.add('		updateElement: function(point, index, reset) {');
  FPack.add('			var me = this;');
  FPack.add('			var meta = me.getMeta();');
  FPack.add('			var custom = point.custom || {};');
  FPack.add('			var xScale = me.getScaleForId(meta.xAxisID);');
  FPack.add('			var yScale = me.getScaleForId(meta.yAxisID);');
  FPack.add('			var options = me._resolveElementOptions(point, index);');
  FPack.add('			var data = me.getDataset().data[index];');
  FPack.add('			var dsIndex = me.index;');
  FPack.add('');
  FPack.add('			var x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(typeof data === ''object'' ? data : NaN, index, dsIndex);');
  FPack.add('			var y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(data, index, dsIndex);');
  FPack.add('');
  FPack.add('			point._xScale = xScale;');
  FPack.add('			point._yScale = yScale;');
  FPack.add('			point._options = options;');
  FPack.add('			point._datasetIndex = dsIndex;');
  FPack.add('			point._index = index;');
  FPack.add('			point._model = {');
  FPack.add('				backgroundColor: options.backgroundColor,');
  FPack.add('				borderColor: options.borderColor,');
  FPack.add('				borderWidth: options.borderWidth,');
  FPack.add('				hitRadius: options.hitRadius,');
  FPack.add('				pointStyle: options.pointStyle,');
  FPack.add('				radius: reset ? 0 : options.radius,');
  FPack.add('				skip: custom.skip || isNaN(x) || isNaN(y),');
  FPack.add('				x: x,');
  FPack.add('				y: y,');
  FPack.add('			};');
  FPack.add('');
  FPack.add('			point.pivot();');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		/**');
  FPack.add('		 * @protected');
  FPack.add('		 */');
  FPack.add('		setHoverStyle: function(point) {');
  FPack.add('			var model = point._model;');
  FPack.add('			var options = point._options;');
  FPack.add('');
  FPack.add('			model.backgroundColor = helpers.valueOrDefault(options.hoverBackgroundColor, helpers.getHoverColor(options.backgroundColor));');
  FPack.add('			model.borderColor = helpers.valueOrDefault(options.hoverBorderColor, helpers.getHoverColor(options.borderColor));');
  FPack.add('			model.borderWidth = helpers.valueOrDefault(options.hoverBorderWidth, options.borderWidth);');
  FPack.add('			model.radius = options.radius + options.hoverRadius;');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		/**');
  FPack.add('		 * @protected');
  FPack.add('		 */');
  FPack.add('		removeHoverStyle: function(point) {');
  FPack.add('			var model = point._model;');
  FPack.add('			var options = point._options;');
  FPack.add('');
  FPack.add('			model.backgroundColor = options.backgroundColor;');
  FPack.add('			model.borderColor = options.borderColor;');
  FPack.add('			model.borderWidth = options.borderWidth;');
  FPack.add('			model.radius = options.radius;');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		/**');
  FPack.add('		 * @private');
  FPack.add('		 */');
  FPack.add('		_resolveElementOptions: function(point, index) {');
  FPack.add('			var me = this;');
end;

procedure TChartbundleJS.ChartbundleJS_22;
begin
  FPack.add('			var chart = me.chart;');
  FPack.add('			var datasets = chart.data.datasets;');
  FPack.add('			var dataset = datasets[me.index];');
  FPack.add('			var custom = point.custom || {};');
  FPack.add('			var options = chart.options.elements.point;');
  FPack.add('			var resolve = helpers.options.resolve;');
  FPack.add('			var data = dataset.data[index];');
  FPack.add('			var values = {};');
  FPack.add('			var i, ilen, key;');
  FPack.add('');
  FPack.add('			// Scriptable options');
  FPack.add('			var context = {');
  FPack.add('				chart: chart,');
  FPack.add('				dataIndex: index,');
  FPack.add('				dataset: dataset,');
  FPack.add('				datasetIndex: me.index');
  FPack.add('			};');
  FPack.add('');
  FPack.add('			var keys = [');
  FPack.add('				''backgroundColor'',');
  FPack.add('				''borderColor'',');
  FPack.add('				''borderWidth'',');
  FPack.add('				''hoverBackgroundColor'',');
  FPack.add('				''hoverBorderColor'',');
  FPack.add('				''hoverBorderWidth'',');
  FPack.add('				''hoverRadius'',');
  FPack.add('				''hitRadius'',');
  FPack.add('				''pointStyle''');
  FPack.add('			];');
  FPack.add('');
  FPack.add('			for (i = 0, ilen = keys.length; i < ilen; ++i) {');
  FPack.add('				key = keys[i];');
  FPack.add('				values[key] = resolve([');
  FPack.add('					custom[key],');
  FPack.add('					dataset[key],');
  FPack.add('					options[key]');
  FPack.add('				], context, index);');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			// Custom radius resolution');
  FPack.add('			values.radius = resolve([');
  FPack.add('				custom.radius,');
  FPack.add('				data ? data.r : undefined,');
  FPack.add('				dataset.radius,');
  FPack.add('				options.radius');
  FPack.add('			], context, index);');
  FPack.add('');
  FPack.add('			return values;');
  FPack.add('		}');
  FPack.add('	});');
  FPack.add('};');
  FPack.add('');
  FPack.add('},{"25":25,"40":40,"45":45}],17:[function(require,module,exports){');
  FPack.add('''use strict'';');
  FPack.add('');
  FPack.add('var defaults = require(25);');
  FPack.add('var elements = require(40);');
  FPack.add('var helpers = require(45);');
  FPack.add('');
  FPack.add('defaults._set(''doughnut'', {');
  FPack.add('	animation: {');
  FPack.add('		// Boolean - Whether we animate the rotation of the Doughnut');
  FPack.add('		animateRotate: true,');
  FPack.add('		// Boolean - Whether we animate scaling the Doughnut from the centre');
  FPack.add('		animateScale: false');
  FPack.add('	},');
  FPack.add('	hover: {');
  FPack.add('		mode: ''single''');
  FPack.add('	},');
  FPack.add('	legendCallback: function(chart) {');
  FPack.add('		var text = [];');
  FPack.add('		text.push(''<ul class="'' + chart.id + ''-legend">'');');
  FPack.add('');
  FPack.add('		var data = chart.data;');
  FPack.add('		var datasets = data.datasets;');
  FPack.add('		var labels = data.labels;');
  FPack.add('');
  FPack.add('		if (datasets.length) {');
  FPack.add('			for (var i = 0; i < datasets[0].data.length; ++i) {');
  FPack.add('				text.push(''<li><span style="background-color:'' + datasets[0].backgroundColor[i] + ''"></span>'');');
  FPack.add('				if (labels[i]) {');
  FPack.add('					text.push(labels[i]);');
  FPack.add('				}');
  FPack.add('				text.push(''</li>'');');
  FPack.add('			}');
  FPack.add('		}');
  FPack.add('');
  FPack.add('		text.push(''</ul>'');');
  FPack.add('		return text.join('''');');
  FPack.add('	},');
  FPack.add('	legend: {');
  FPack.add('		labels: {');
  FPack.add('			generateLabels: function(chart) {');
  FPack.add('				var data = chart.data;');
  FPack.add('				if (data.labels.length && data.datasets.length) {');
  FPack.add('					return data.labels.map(function(label, i) {');
  FPack.add('						var meta = chart.getDatasetMeta(0);');
  FPack.add('						var ds = data.datasets[0];');
  FPack.add('						var arc = meta.data[i];');
  FPack.add('						var custom = arc && arc.custom || {};');
  FPack.add('						var valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;');
  FPack.add('						var arcOpts = chart.options.elements.arc;');
  FPack.add('						var fill = custom.backgroundColor ? custom.backgroundColor : valueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);');
  FPack.add('						var stroke = custom.borderColor ? custom.borderColor : valueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);');
  FPack.add('						var bw = custom.borderWidth ? custom.borderWidth : valueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);');
  FPack.add('');
  FPack.add('						return {');
  FPack.add('							text: label,');
  FPack.add('							fillStyle: fill,');
  FPack.add('							strokeStyle: stroke,');
  FPack.add('							lineWidth: bw,');
  FPack.add('							hidden: isNaN(ds.data[i]) || meta.data[i].hidden,');
  FPack.add('');
  FPack.add('							// Extra data used for toggling the correct item');
  FPack.add('							index: i');
  FPack.add('						};');
  FPack.add('					});');
  FPack.add('				}');
  FPack.add('				return [];');
  FPack.add('			}');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		onClick: function(e, legendItem) {');
  FPack.add('			var index = legendItem.index;');
  FPack.add('			var chart = this.chart;');
  FPack.add('			var i, ilen, meta;');
  FPack.add('');
  FPack.add('			for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {');
  FPack.add('				meta = chart.getDatasetMeta(i);');
  FPack.add('				// toggle visibility of index if exists');
  FPack.add('				if (meta.data[index]) {');
  FPack.add('					meta.data[index].hidden = !meta.data[index].hidden;');
  FPack.add('				}');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			chart.update();');
  FPack.add('		}');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	// The percentage of the chart that we cut out of the middle.');
  FPack.add('	cutoutPercentage: 50,');
  FPack.add('');
  FPack.add('	// The rotation of the chart, where the first data arc begins.');
  FPack.add('	rotation: Math.PI * -0.5,');
  FPack.add('');
  FPack.add('	// The total circumference of the chart.');
  FPack.add('	circumference: Math.PI * 2.0,');
  FPack.add('');
  FPack.add('	// Need to override these to give a nice default');
  FPack.add('	tooltips: {');
  FPack.add('		callbacks: {');
  FPack.add('			title: function() {');
  FPack.add('				return '''';');
  FPack.add('			},');
  FPack.add('			label: function(tooltipItem, data) {');
  FPack.add('				var dataLabel = data.labels[tooltipItem.index];');
  FPack.add('				var value = '': '' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];');
  FPack.add('');
  FPack.add('				if (helpers.isArray(dataLabel)) {');
  FPack.add('					// show value on first line of multiline label');
  FPack.add('					// need to clone because we are changing the value');
  FPack.add('					dataLabel = dataLabel.slice();');
  FPack.add('					dataLabel[0] += value;');
  FPack.add('				} else {');
  FPack.add('					dataLabel += value;');
  FPack.add('				}');
  FPack.add('');
  FPack.add('				return dataLabel;');
  FPack.add('			}');
  FPack.add('		}');
  FPack.add('	}');
  FPack.add('});');
  FPack.add('');
  FPack.add('defaults._set(''pie'', helpers.clone(defaults.doughnut));');
  FPack.add('defaults._set(''pie'', {');
  FPack.add('	cutoutPercentage: 0');
  FPack.add('});');
  FPack.add('');
  FPack.add('module.exports = function(Chart) {');
  FPack.add('');
  FPack.add('	Chart.controllers.doughnut = Chart.controllers.pie = Chart.DatasetController.extend({');
  FPack.add('');
  FPack.add('		dataElementType: elements.Arc,');
  FPack.add('');
  FPack.add('		linkScales: helpers.noop,');
  FPack.add('');
  FPack.add('		// Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly');
  FPack.add('		getRingIndex: function(datasetIndex) {');
  FPack.add('			var ringIndex = 0;');
  FPack.add('');
  FPack.add('			for (var j = 0; j < datasetIndex; ++j) {');
  FPack.add('				if (this.chart.isDatasetVisible(j)) {');
  FPack.add('					++ringIndex;');
  FPack.add('				}');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			return ringIndex;');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		update: function(reset) {');
  FPack.add('			var me = this;');
  FPack.add('			var chart = me.chart;');
  FPack.add('			var chartArea = chart.chartArea;');
  FPack.add('			var opts = chart.options;');
  FPack.add('			var arcOpts = opts.elements.arc;');
  FPack.add('			var availableWidth = chartArea.right - chartArea.left - arcOpts.borderWidth;');
  FPack.add('			var availableHeight = chartArea.bottom - chartArea.top - arcOpts.borderWidth;');
  FPack.add('			var minSize = Math.min(availableWidth, availableHeight);');
  FPack.add('			var offset = {x: 0, y: 0};');
  FPack.add('			var meta = me.getMeta();');
  FPack.add('			var cutoutPercentage = opts.cutoutPercentage;');
  FPack.add('			var circumference = opts.circumference;');
  FPack.add('');
  FPack.add('			// If the chart''s circumference isn''t a full circle, calculate minSize as a ratio of the width/height of the arc');
  FPack.add('			if (circumference < Math.PI * 2.0) {');
  FPack.add('				var startAngle = opts.rotation % (Math.PI * 2.0);');
  FPack.add('				startAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);');
  FPack.add('				var endAngle = startAngle + circumference;');
  FPack.add('				var start = {x: Math.cos(startAngle), y: Math.sin(startAngle)};');
  FPack.add('				var end = {x: Math.cos(endAngle), y: Math.sin(endAngle)};');
  FPack.add('				var contains0 = (startAngle <= 0 && endAngle >= 0) || (startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle);');
  FPack.add('				var contains90 = (startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle);');
  FPack.add('				var contains180 = (startAngle <= -Math.PI && -Math.PI <= endAngle) || (startAngle <= Math.PI && Math.PI <= endAngle);');
  FPack.add('				var contains270 = (startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle);');
  FPack.add('				var cutout = cutoutPercentage / 100.0;');
  FPack.add('				var min = {x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)), y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout))};');
  FPack.add('				var max = {x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)), y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout))};');
  FPack.add('				var size = {width: (max.x - min.x) * 0.5, height: (max.y - min.y) * 0.5};');
  FPack.add('				minSize = Math.min(availableWidth / size.width, availableHeight / size.height);');
  FPack.add('				offset = {x: (max.x + min.x) * -0.5, y: (max.y + min.y) * -0.5};');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			chart.borderWidth = me.getMaxBorderWidth(meta.data);');
  FPack.add('			chart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);');
  FPack.add('			chart.innerRadius = Math.max(cutoutPercentage ? (chart.outerRadius / 100) * (cutoutPercentage) : 0, 0);');
  FPack.add('			chart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();');
  FPack.add('			chart.offsetX = offset.x * chart.outerRadius;');
  FPack.add('			chart.offsetY = offset.y * chart.outerRadius;');
  FPack.add('');
  FPack.add('			meta.total = me.calculateTotal();');
  FPack.add('');
  FPack.add('			me.outerRadius = chart.outerRadius - (chart.radiusLength * me.getRingIndex(me.index));');
  FPack.add('			me.innerRadius = Math.max(me.outerRadius - chart.radiusLength, 0);');
  FPack.add('');
  FPack.add('			helpers.each(meta.data, function(arc, index) {');
  FPack.add('				me.updateElement(arc, index, reset);');
  FPack.add('			});');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		updateElement: function(arc, index, reset) {');
  FPack.add('			var me = this;');
  FPack.add('			var chart = me.chart;');
  FPack.add('			var chartArea = chart.chartArea;');
  FPack.add('			var opts = chart.options;');
  FPack.add('			var animationOpts = opts.animation;');
  FPack.add('			var centerX = (chartArea.left + chartArea.right) / 2;');
  FPack.add('			var centerY = (chartArea.top + chartArea.bottom) / 2;');
  FPack.add('			var startAngle = opts.rotation; // non reset case handled later');
  FPack.add('			var endAngle = opts.rotation; // non reset case handled later');
  FPack.add('			var dataset = me.getDataset();');
  FPack.add('			var circumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI));');
  FPack.add('			var innerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius;');
  FPack.add('			var outerRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius;');
  FPack.add('			var valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;');
  FPack.add('');
  FPack.add('			helpers.extend(arc, {');
  FPack.add('				// Utility');
  FPack.add('				_datasetIndex: me.index,');
  FPack.add('				_index: index,');
  FPack.add('');
  FPack.add('				// Desired view properties');
  FPack.add('				_model: {');
  FPack.add('					x: centerX + chart.offsetX,');
  FPack.add('					y: centerY + chart.offsetY,');
  FPack.add('					startAngle: startAngle,');
  FPack.add('					endAngle: endAngle,');
  FPack.add('					circumference: circumference,');
  FPack.add('					outerRadius: outerRadius,');
  FPack.add('					innerRadius: innerRadius,');
  FPack.add('					label: valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])');
  FPack.add('				}');
  FPack.add('			});');
  FPack.add('');
  FPack.add('			var model = arc._model;');
  FPack.add('			// Resets the visual styles');
  FPack.add('			this.removeHoverStyle(arc);');
  FPack.add('');
  FPack.add('			// Set correct angles if not resetting');
  FPack.add('			if (!reset || !animationOpts.animateRotate) {');
  FPack.add('				if (index === 0) {');
  FPack.add('					model.startAngle = opts.rotation;');
  FPack.add('				} else {');
  FPack.add('					model.startAngle = me.getMeta().data[index - 1]._model.endAngle;');
  FPack.add('				}');
  FPack.add('');
  FPack.add('				model.endAngle = model.startAngle + model.circumference;');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			arc.pivot();');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		removeHoverStyle: function(arc) {');
  FPack.add('			Chart.DatasetController.prototype.removeHoverStyle.call(this, arc, this.chart.options.elements.arc);');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		calculateTotal: function() {');
  FPack.add('			var dataset = this.getDataset();');
  FPack.add('			var meta = this.getMeta();');
  FPack.add('			var total = 0;');
  FPack.add('			var value;');
  FPack.add('');
  FPack.add('			helpers.each(meta.data, function(element, index) {');
  FPack.add('				value = dataset.data[index];');
  FPack.add('				if (!isNaN(value) && !element.hidden) {');
  FPack.add('					total += Math.abs(value);');
  FPack.add('				}');
  FPack.add('			});');
  FPack.add('');
  FPack.add('			/* if (total === 0) {');
  FPack.add('				total = NaN;');
  FPack.add('			}*/');
  FPack.add('');
  FPack.add('			return total;');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		calculateCircumference: function(value) {');
  FPack.add('			var total = this.getMeta().total;');
  FPack.add('			if (total > 0 && !isNaN(value)) {');
  FPack.add('				return (Math.PI * 2.0) * (Math.abs(value) / total);');
  FPack.add('			}');
  FPack.add('			return 0;');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		// gets the max border or hover width to properly scale pie charts');
end;

procedure TChartbundleJS.ChartbundleJS_23;
begin
  FPack.add('		getMaxBorderWidth: function(arcs) {');
  FPack.add('			var max = 0;');
  FPack.add('			var index = this.index;');
  FPack.add('			var length = arcs.length;');
  FPack.add('			var borderWidth;');
  FPack.add('			var hoverWidth;');
  FPack.add('');
  FPack.add('			for (var i = 0; i < length; i++) {');
  FPack.add('				borderWidth = arcs[i]._model ? arcs[i]._model.borderWidth : 0;');
  FPack.add('				hoverWidth = arcs[i]._chart ? arcs[i]._chart.config.data.datasets[index].hoverBorderWidth : 0;');
  FPack.add('');
  FPack.add('				max = borderWidth > max ? borderWidth : max;');
  FPack.add('				max = hoverWidth > max ? hoverWidth : max;');
  FPack.add('			}');
  FPack.add('			return max;');
  FPack.add('		}');
  FPack.add('	});');
  FPack.add('};');
  FPack.add('');
  FPack.add('},{"25":25,"40":40,"45":45}],18:[function(require,module,exports){');
  FPack.add('''use strict'';');
  FPack.add('');
  FPack.add('var defaults = require(25);');
  FPack.add('var elements = require(40);');
  FPack.add('var helpers = require(45);');
  FPack.add('');
  FPack.add('defaults._set(''line'', {');
  FPack.add('	showLines: true,');
  FPack.add('	spanGaps: false,');
  FPack.add('');
  FPack.add('	hover: {');
  FPack.add('		mode: ''label''');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	scales: {');
  FPack.add('		xAxes: [{');
  FPack.add('			type: ''category'',');
  FPack.add('			id: ''x-axis-0''');
  FPack.add('		}],');
  FPack.add('		yAxes: [{');
  FPack.add('			type: ''linear'',');
  FPack.add('			id: ''y-axis-0''');
  FPack.add('		}]');
  FPack.add('	}');
  FPack.add('});');
  FPack.add('');
  FPack.add('module.exports = function(Chart) {');
  FPack.add('');
  FPack.add('	function lineEnabled(dataset, options) {');
  FPack.add('		return helpers.valueOrDefault(dataset.showLine, options.showLines);');
  FPack.add('	}');
  FPack.add('');
  FPack.add('	Chart.controllers.line = Chart.DatasetController.extend({');
  FPack.add('');
  FPack.add('		datasetElementType: elements.Line,');
  FPack.add('');
  FPack.add('		dataElementType: elements.Point,');
  FPack.add('');
  FPack.add('		update: function(reset) {');
  FPack.add('			var me = this;');
  FPack.add('			var meta = me.getMeta();');
  FPack.add('			var line = meta.dataset;');
  FPack.add('			var points = meta.data || [];');
  FPack.add('			var options = me.chart.options;');
  FPack.add('			var lineElementOptions = options.elements.line;');
  FPack.add('			var scale = me.getScaleForId(meta.yAxisID);');
  FPack.add('			var i, ilen, custom;');
  FPack.add('			var dataset = me.getDataset();');
  FPack.add('			var showLine = lineEnabled(dataset, options);');
  FPack.add('');
  FPack.add('			// Update Line');
  FPack.add('			if (showLine) {');
  FPack.add('				custom = line.custom || {};');
  FPack.add('');
  FPack.add('				// Compatibility: If the properties are defined with only the old name, use those values');
  FPack.add('				if ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {');
  FPack.add('					dataset.lineTension = dataset.tension;');
  FPack.add('				}');
  FPack.add('');
  FPack.add('				// Utility');
  FPack.add('				line._scale = scale;');
  FPack.add('				line._datasetIndex = me.index;');
  FPack.add('				// Data');
  FPack.add('				line._children = points;');
  FPack.add('				// Model');
  FPack.add('				line._model = {');
  FPack.add('					// Appearance');
  FPack.add('					// The default behavior of lines is to break at null values, according');
  FPack.add('					// to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158');
  FPack.add('					// This option gives lines the ability to span gaps');
  FPack.add('					spanGaps: dataset.spanGaps ? dataset.spanGaps : options.spanGaps,');
  FPack.add('					tension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, lineElementOptions.tension),');
  FPack.add('					backgroundColor: custom.backgroundColor ? custom.backgroundColor : (dataset.backgroundColor || lineElementOptions.backgroundColor),');
  FPack.add('					borderWidth: custom.borderWidth ? custom.borderWidth : (dataset.borderWidth || lineElementOptions.borderWidth),');
  FPack.add('					borderColor: custom.borderColor ? custom.borderColor : (dataset.borderColor || lineElementOptions.borderColor),');
  FPack.add('					borderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : (dataset.borderCapStyle || lineElementOptions.borderCapStyle),');
  FPack.add('					borderDash: custom.borderDash ? custom.borderDash : (dataset.borderDash || lineElementOptions.borderDash),');
  FPack.add('					borderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : (dataset.borderDashOffset || lineElementOptions.borderDashOffset),');
  FPack.add('					borderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : (dataset.borderJoinStyle || lineElementOptions.borderJoinStyle),');
  FPack.add('					fill: custom.fill ? custom.fill : (dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill),');
  FPack.add('					steppedLine: custom.steppedLine ? custom.steppedLine : helpers.valueOrDefault(dataset.steppedLine, lineElementOptions.stepped),');
  FPack.add('					cubicInterpolationMode: custom.cubicInterpolationMode ? custom.cubicInterpolationMode : helpers.valueOrDefault(dataset.cubicInterpolationMode, lineElementOptions.cubicInterpolationMode),');
  FPack.add('				};');
  FPack.add('');
  FPack.add('				line.pivot();');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			// Update Points');
  FPack.add('			for (i = 0, ilen = points.length; i < ilen; ++i) {');
  FPack.add('				me.updateElement(points[i], i, reset);');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			if (showLine && line._model.tension !== 0) {');
  FPack.add('				me.updateBezierControlPoints();');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			// Now pivot the point for animation');
  FPack.add('			for (i = 0, ilen = points.length; i < ilen; ++i) {');
  FPack.add('				points[i].pivot();');
  FPack.add('			}');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		getPointBackgroundColor: function(point, index) {');
  FPack.add('			var backgroundColor = this.chart.options.elements.point.backgroundColor;');
  FPack.add('			var dataset = this.getDataset();');
  FPack.add('			var custom = point.custom || {};');
  FPack.add('');
  FPack.add('			if (custom.backgroundColor) {');
  FPack.add('				backgroundColor = custom.backgroundColor;');
  FPack.add('			} else if (dataset.pointBackgroundColor) {');
  FPack.add('				backgroundColor = helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, backgroundColor);');
  FPack.add('			} else if (dataset.backgroundColor) {');
  FPack.add('				backgroundColor = dataset.backgroundColor;');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			return backgroundColor;');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		getPointBorderColor: function(point, index) {');
  FPack.add('			var borderColor = this.chart.options.elements.point.borderColor;');
  FPack.add('			var dataset = this.getDataset();');
  FPack.add('			var custom = point.custom || {};');
  FPack.add('');
  FPack.add('			if (custom.borderColor) {');
  FPack.add('				borderColor = custom.borderColor;');
  FPack.add('			} else if (dataset.pointBorderColor) {');
  FPack.add('				borderColor = helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, borderColor);');
  FPack.add('			} else if (dataset.borderColor) {');
  FPack.add('				borderColor = dataset.borderColor;');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			return borderColor;');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		getPointBorderWidth: function(point, index) {');
  FPack.add('			var borderWidth = this.chart.options.elements.point.borderWidth;');
  FPack.add('			var dataset = this.getDataset();');
  FPack.add('			var custom = point.custom || {};');
  FPack.add('');
  FPack.add('			if (!isNaN(custom.borderWidth)) {');
  FPack.add('				borderWidth = custom.borderWidth;');
  FPack.add('			} else if (!isNaN(dataset.pointBorderWidth) || helpers.isArray(dataset.pointBorderWidth)) {');
  FPack.add('				borderWidth = helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, borderWidth);');
  FPack.add('			} else if (!isNaN(dataset.borderWidth)) {');
  FPack.add('				borderWidth = dataset.borderWidth;');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			return borderWidth;');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		updateElement: function(point, index, reset) {');
  FPack.add('			var me = this;');
  FPack.add('			var meta = me.getMeta();');
  FPack.add('			var custom = point.custom || {};');
  FPack.add('			var dataset = me.getDataset();');
  FPack.add('			var datasetIndex = me.index;');
  FPack.add('			var value = dataset.data[index];');
  FPack.add('			var yScale = me.getScaleForId(meta.yAxisID);');
  FPack.add('			var xScale = me.getScaleForId(meta.xAxisID);');
  FPack.add('			var pointOptions = me.chart.options.elements.point;');
  FPack.add('			var x, y;');
  FPack.add('');
  FPack.add('			// Compatibility: If the properties are defined with only the old name, use those values');
  FPack.add('			if ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {');
  FPack.add('				dataset.pointRadius = dataset.radius;');
  FPack.add('			}');
  FPack.add('			if ((dataset.hitRadius !== undefined) && (dataset.pointHitRadius === undefined)) {');
  FPack.add('				dataset.pointHitRadius = dataset.hitRadius;');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			x = xScale.getPixelForValue(typeof value === ''object'' ? value : NaN, index, datasetIndex);');
  FPack.add('			y = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex);');
  FPack.add('');
  FPack.add('			// Utility');
  FPack.add('			point._xScale = xScale;');
  FPack.add('			point._yScale = yScale;');
  FPack.add('			point._datasetIndex = datasetIndex;');
  FPack.add('			point._index = index;');
  FPack.add('');
  FPack.add('			// Desired view properties');
  FPack.add('			point._model = {');
  FPack.add('				x: x,');
  FPack.add('				y: y,');
  FPack.add('				skip: custom.skip || isNaN(x) || isNaN(y),');
  FPack.add('				// Appearance');
  FPack.add('				radius: custom.radius || helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointOptions.radius),');
  FPack.add('				pointStyle: custom.pointStyle || helpers.valueAtIndexOrDefault(dataset.pointStyle, index, pointOptions.pointStyle),');
  FPack.add('				backgroundColor: me.getPointBackgroundColor(point, index),');
  FPack.add('				borderColor: me.getPointBorderColor(point, index),');
  FPack.add('				borderWidth: me.getPointBorderWidth(point, index),');
  FPack.add('				tension: meta.dataset._model ? meta.dataset._model.tension : 0,');
  FPack.add('				steppedLine: meta.dataset._model ? meta.dataset._model.steppedLine : false,');
  FPack.add('				// Tooltip');
  FPack.add('				hitRadius: custom.hitRadius || helpers.valueAtIndexOrDefault(dataset.pointHitRadius, index, pointOptions.hitRadius)');
  FPack.add('			};');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		calculatePointY: function(value, index, datasetIndex) {');
  FPack.add('			var me = this;');
  FPack.add('			var chart = me.chart;');
  FPack.add('			var meta = me.getMeta();');
  FPack.add('			var yScale = me.getScaleForId(meta.yAxisID);');
  FPack.add('			var sumPos = 0;');
  FPack.add('			var sumNeg = 0;');
  FPack.add('			var i, ds, dsMeta;');
  FPack.add('');
  FPack.add('			if (yScale.options.stacked) {');
  FPack.add('				for (i = 0; i < datasetIndex; i++) {');
  FPack.add('					ds = chart.data.datasets[i];');
  FPack.add('					dsMeta = chart.getDatasetMeta(i);');
  FPack.add('					if (dsMeta.type === ''line'' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {');
  FPack.add('						var stackedRightValue = Number(yScale.getRightValue(ds.data[index]));');
  FPack.add('						if (stackedRightValue < 0) {');
  FPack.add('							sumNeg += stackedRightValue || 0;');
  FPack.add('						} else {');
  FPack.add('							sumPos += stackedRightValue || 0;');
  FPack.add('						}');
  FPack.add('					}');
  FPack.add('				}');
  FPack.add('');
  FPack.add('				var rightValue = Number(yScale.getRightValue(value));');
  FPack.add('				if (rightValue < 0) {');
  FPack.add('					return yScale.getPixelForValue(sumNeg + rightValue);');
  FPack.add('				}');
  FPack.add('				return yScale.getPixelForValue(sumPos + rightValue);');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			return yScale.getPixelForValue(value);');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		updateBezierControlPoints: function() {');
  FPack.add('			var me = this;');
  FPack.add('			var meta = me.getMeta();');
  FPack.add('			var area = me.chart.chartArea;');
  FPack.add('			var points = (meta.data || []);');
  FPack.add('			var i, ilen, point, model, controlPoints;');
  FPack.add('');
  FPack.add('			// Only consider points that are drawn in case the spanGaps option is used');
  FPack.add('			if (meta.dataset._model.spanGaps) {');
  FPack.add('				points = points.filter(function(pt) {');
  FPack.add('					return !pt._model.skip;');
  FPack.add('				});');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			function capControlPoint(pt, min, max) {');
  FPack.add('				return Math.max(Math.min(pt, max), min);');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			if (meta.dataset._model.cubicInterpolationMode === ''monotone'') {');
  FPack.add('				helpers.splineCurveMonotone(points);');
  FPack.add('			} else {');
  FPack.add('				for (i = 0, ilen = points.length; i < ilen; ++i) {');
  FPack.add('					point = points[i];');
  FPack.add('					model = point._model;');
  FPack.add('					controlPoints = helpers.splineCurve(');
  FPack.add('						helpers.previousItem(points, i)._model,');
  FPack.add('						model,');
  FPack.add('						helpers.nextItem(points, i)._model,');
  FPack.add('						meta.dataset._model.tension');
  FPack.add('					);');
  FPack.add('					model.controlPointPreviousX = controlPoints.previous.x;');
  FPack.add('					model.controlPointPreviousY = controlPoints.previous.y;');
  FPack.add('					model.controlPointNextX = controlPoints.next.x;');
  FPack.add('					model.controlPointNextY = controlPoints.next.y;');
  FPack.add('				}');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			if (me.chart.options.elements.line.capBezierPoints) {');
  FPack.add('				for (i = 0, ilen = points.length; i < ilen; ++i) {');
  FPack.add('					model = points[i]._model;');
  FPack.add('					model.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);');
  FPack.add('					model.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);');
  FPack.add('					model.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);');
  FPack.add('					model.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);');
  FPack.add('				}');
  FPack.add('			}');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		draw: function() {');
  FPack.add('			var me = this;');
  FPack.add('			var chart = me.chart;');
  FPack.add('			var meta = me.getMeta();');
  FPack.add('			var points = meta.data || [];');
  FPack.add('			var area = chart.chartArea;');
  FPack.add('			var ilen = points.length;');
  FPack.add('			var i = 0;');
  FPack.add('');
  FPack.add('			helpers.canvas.clipArea(chart.ctx, area);');
  FPack.add('');
  FPack.add('			if (lineEnabled(me.getDataset(), chart.options)) {');
  FPack.add('				meta.dataset.draw();');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			helpers.canvas.unclipArea(chart.ctx);');
  FPack.add('');
  FPack.add('			// Draw the points');
  FPack.add('			for (; i < ilen; ++i) {');
  FPack.add('				points[i].draw(area);');
  FPack.add('			}');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		setHoverStyle: function(point) {');
  FPack.add('			// Point');
  FPack.add('			var dataset = this.chart.data.datasets[point._datasetIndex];');
  FPack.add('			var index = point._index;');
  FPack.add('			var custom = point.custom || {};');
  FPack.add('			var model = point._model;');
  FPack.add('');
  FPack.add('			model.radius = custom.hoverRadius || helpers.valueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);');
  FPack.add('			model.backgroundColor = custom.hoverBackgroundColor || helpers.valueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));');
  FPack.add('			model.borderColor = custom.hoverBorderColor || helpers.valueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));');
  FPack.add('			model.borderWidth = custom.hoverBorderWidth || helpers.valueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		removeHoverStyle: function(point) {');
  FPack.add('			var me = this;');
end;

procedure TChartbundleJS.ChartbundleJS_24;
begin
  FPack.add('			var dataset = me.chart.data.datasets[point._datasetIndex];');
  FPack.add('			var index = point._index;');
  FPack.add('			var custom = point.custom || {};');
  FPack.add('			var model = point._model;');
  FPack.add('');
  FPack.add('			// Compatibility: If the properties are defined with only the old name, use those values');
  FPack.add('			if ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {');
  FPack.add('				dataset.pointRadius = dataset.radius;');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			model.radius = custom.radius || helpers.valueAtIndexOrDefault(dataset.pointRadius, index, me.chart.options.elements.point.radius);');
  FPack.add('			model.backgroundColor = me.getPointBackgroundColor(point, index);');
  FPack.add('			model.borderColor = me.getPointBorderColor(point, index);');
  FPack.add('			model.borderWidth = me.getPointBorderWidth(point, index);');
  FPack.add('		}');
  FPack.add('	});');
  FPack.add('};');
  FPack.add('');
  FPack.add('},{"25":25,"40":40,"45":45}],19:[function(require,module,exports){');
  FPack.add('''use strict'';');
  FPack.add('');
  FPack.add('var defaults = require(25);');
  FPack.add('var elements = require(40);');
  FPack.add('var helpers = require(45);');
  FPack.add('');
  FPack.add('defaults._set(''polarArea'', {');
  FPack.add('	scale: {');
  FPack.add('		type: ''radialLinear'',');
  FPack.add('		angleLines: {');
  FPack.add('			display: false');
  FPack.add('		},');
  FPack.add('		gridLines: {');
  FPack.add('			circular: true');
  FPack.add('		},');
  FPack.add('		pointLabels: {');
  FPack.add('			display: false');
  FPack.add('		},');
  FPack.add('		ticks: {');
  FPack.add('			beginAtZero: true');
  FPack.add('		}');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	// Boolean - Whether to animate the rotation of the chart');
  FPack.add('	animation: {');
  FPack.add('		animateRotate: true,');
  FPack.add('		animateScale: true');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	startAngle: -0.5 * Math.PI,');
  FPack.add('	legendCallback: function(chart) {');
  FPack.add('		var text = [];');
  FPack.add('		text.push(''<ul class="'' + chart.id + ''-legend">'');');
  FPack.add('');
  FPack.add('		var data = chart.data;');
  FPack.add('		var datasets = data.datasets;');
  FPack.add('		var labels = data.labels;');
  FPack.add('');
  FPack.add('		if (datasets.length) {');
  FPack.add('			for (var i = 0; i < datasets[0].data.length; ++i) {');
  FPack.add('				text.push(''<li><span style="background-color:'' + datasets[0].backgroundColor[i] + ''"></span>'');');
  FPack.add('				if (labels[i]) {');
  FPack.add('					text.push(labels[i]);');
  FPack.add('				}');
  FPack.add('				text.push(''</li>'');');
  FPack.add('			}');
  FPack.add('		}');
  FPack.add('');
  FPack.add('		text.push(''</ul>'');');
  FPack.add('		return text.join('''');');
  FPack.add('	},');
  FPack.add('	legend: {');
  FPack.add('		labels: {');
  FPack.add('			generateLabels: function(chart) {');
  FPack.add('				var data = chart.data;');
  FPack.add('				if (data.labels.length && data.datasets.length) {');
  FPack.add('					return data.labels.map(function(label, i) {');
  FPack.add('						var meta = chart.getDatasetMeta(0);');
  FPack.add('						var ds = data.datasets[0];');
  FPack.add('						var arc = meta.data[i];');
  FPack.add('						var custom = arc.custom || {};');
  FPack.add('						var valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;');
  FPack.add('						var arcOpts = chart.options.elements.arc;');
  FPack.add('						var fill = custom.backgroundColor ? custom.backgroundColor : valueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);');
  FPack.add('						var stroke = custom.borderColor ? custom.borderColor : valueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);');
  FPack.add('						var bw = custom.borderWidth ? custom.borderWidth : valueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);');
  FPack.add('');
  FPack.add('						return {');
  FPack.add('							text: label,');
  FPack.add('							fillStyle: fill,');
  FPack.add('							strokeStyle: stroke,');
  FPack.add('							lineWidth: bw,');
  FPack.add('							hidden: isNaN(ds.data[i]) || meta.data[i].hidden,');
  FPack.add('');
  FPack.add('							// Extra data used for toggling the correct item');
  FPack.add('							index: i');
  FPack.add('						};');
  FPack.add('					});');
  FPack.add('				}');
  FPack.add('				return [];');
  FPack.add('			}');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		onClick: function(e, legendItem) {');
  FPack.add('			var index = legendItem.index;');
  FPack.add('			var chart = this.chart;');
  FPack.add('			var i, ilen, meta;');
  FPack.add('');
  FPack.add('			for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {');
  FPack.add('				meta = chart.getDatasetMeta(i);');
  FPack.add('				meta.data[index].hidden = !meta.data[index].hidden;');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			chart.update();');
  FPack.add('		}');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	// Need to override these to give a nice default');
  FPack.add('	tooltips: {');
  FPack.add('		callbacks: {');
  FPack.add('			title: function() {');
  FPack.add('				return '''';');
  FPack.add('			},');
  FPack.add('			label: function(item, data) {');
  FPack.add('				return data.labels[item.index] + '': '' + item.yLabel;');
  FPack.add('			}');
  FPack.add('		}');
  FPack.add('	}');
  FPack.add('});');
  FPack.add('');
  FPack.add('module.exports = function(Chart) {');
  FPack.add('');
  FPack.add('	Chart.controllers.polarArea = Chart.DatasetController.extend({');
  FPack.add('');
  FPack.add('		dataElementType: elements.Arc,');
  FPack.add('');
  FPack.add('		linkScales: helpers.noop,');
  FPack.add('');
  FPack.add('		update: function(reset) {');
  FPack.add('			var me = this;');
  FPack.add('			var chart = me.chart;');
  FPack.add('			var chartArea = chart.chartArea;');
  FPack.add('			var meta = me.getMeta();');
  FPack.add('			var opts = chart.options;');
  FPack.add('			var arcOpts = opts.elements.arc;');
  FPack.add('			var minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);');
  FPack.add('			chart.outerRadius = Math.max((minSize - arcOpts.borderWidth / 2) / 2, 0);');
  FPack.add('			chart.innerRadius = Math.max(opts.cutoutPercentage ? (chart.outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);');
  FPack.add('			chart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();');
  FPack.add('');
  FPack.add('			me.outerRadius = chart.outerRadius - (chart.radiusLength * me.index);');
  FPack.add('			me.innerRadius = me.outerRadius - chart.radiusLength;');
  FPack.add('');
  FPack.add('			meta.count = me.countVisibleElements();');
  FPack.add('');
  FPack.add('			helpers.each(meta.data, function(arc, index) {');
  FPack.add('				me.updateElement(arc, index, reset);');
  FPack.add('			});');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		updateElement: function(arc, index, reset) {');
  FPack.add('			var me = this;');
  FPack.add('			var chart = me.chart;');
  FPack.add('			var dataset = me.getDataset();');
  FPack.add('			var opts = chart.options;');
  FPack.add('			var animationOpts = opts.animation;');
  FPack.add('			var scale = chart.scale;');
  FPack.add('			var labels = chart.data.labels;');
  FPack.add('');
  FPack.add('			var circumference = me.calculateCircumference(dataset.data[index]);');
  FPack.add('			var centerX = scale.xCenter;');
  FPack.add('			var centerY = scale.yCenter;');
  FPack.add('');
  FPack.add('			// If there is NaN data before us, we need to calculate the starting angle correctly.');
  FPack.add('			// We could be way more efficient here, but its unlikely that the polar area chart will have a lot of data');
  FPack.add('			var visibleCount = 0;');
  FPack.add('			var meta = me.getMeta();');
  FPack.add('			for (var i = 0; i < index; ++i) {');
  FPack.add('				if (!isNaN(dataset.data[i]) && !meta.data[i].hidden) {');
  FPack.add('					++visibleCount;');
  FPack.add('				}');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			// var negHalfPI = -0.5 * Math.PI;');
  FPack.add('			var datasetStartAngle = opts.startAngle;');
  FPack.add('			var distance = arc.hidden ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);');
  FPack.add('			var startAngle = datasetStartAngle + (circumference * visibleCount);');
  FPack.add('			var endAngle = startAngle + (arc.hidden ? 0 : circumference);');
  FPack.add('');
  FPack.add('			var resetRadius = animationOpts.animateScale ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);');
  FPack.add('');
  FPack.add('			helpers.extend(arc, {');
  FPack.add('				// Utility');
  FPack.add('				_datasetIndex: me.index,');
  FPack.add('				_index: index,');
  FPack.add('				_scale: scale,');
  FPack.add('');
  FPack.add('				// Desired view properties');
  FPack.add('				_model: {');
  FPack.add('					x: centerX,');
  FPack.add('					y: centerY,');
  FPack.add('					innerRadius: 0,');
  FPack.add('					outerRadius: reset ? resetRadius : distance,');
  FPack.add('					startAngle: reset && animationOpts.animateRotate ? datasetStartAngle : startAngle,');
  FPack.add('					endAngle: reset && animationOpts.animateRotate ? datasetStartAngle : endAngle,');
  FPack.add('					label: helpers.valueAtIndexOrDefault(labels, index, labels[index])');
  FPack.add('				}');
  FPack.add('			});');
  FPack.add('');
  FPack.add('			// Apply border and fill style');
  FPack.add('			me.removeHoverStyle(arc);');
  FPack.add('');
  FPack.add('			arc.pivot();');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		removeHoverStyle: function(arc) {');
  FPack.add('			Chart.DatasetController.prototype.removeHoverStyle.call(this, arc, this.chart.options.elements.arc);');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		countVisibleElements: function() {');
  FPack.add('			var dataset = this.getDataset();');
  FPack.add('			var meta = this.getMeta();');
  FPack.add('			var count = 0;');
  FPack.add('');
  FPack.add('			helpers.each(meta.data, function(element, index) {');
  FPack.add('				if (!isNaN(dataset.data[index]) && !element.hidden) {');
  FPack.add('					count++;');
  FPack.add('				}');
  FPack.add('			});');
  FPack.add('');
  FPack.add('			return count;');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		calculateCircumference: function(value) {');
  FPack.add('			var count = this.getMeta().count;');
  FPack.add('			if (count > 0 && !isNaN(value)) {');
  FPack.add('				return (2 * Math.PI) / count;');
  FPack.add('			}');
  FPack.add('			return 0;');
  FPack.add('		}');
  FPack.add('	});');
  FPack.add('};');
  FPack.add('');
  FPack.add('},{"25":25,"40":40,"45":45}],20:[function(require,module,exports){');
  FPack.add('''use strict'';');
  FPack.add('');
  FPack.add('var defaults = require(25);');
  FPack.add('var elements = require(40);');
  FPack.add('var helpers = require(45);');
  FPack.add('');
  FPack.add('defaults._set(''radar'', {');
  FPack.add('	scale: {');
  FPack.add('		type: ''radialLinear''');
  FPack.add('	},');
  FPack.add('	elements: {');
  FPack.add('		line: {');
  FPack.add('			tension: 0 // no bezier in radar');
  FPack.add('		}');
  FPack.add('	}');
  FPack.add('});');
  FPack.add('');
  FPack.add('module.exports = function(Chart) {');
  FPack.add('');
  FPack.add('	Chart.controllers.radar = Chart.DatasetController.extend({');
  FPack.add('');
  FPack.add('		datasetElementType: elements.Line,');
  FPack.add('');
  FPack.add('		dataElementType: elements.Point,');
  FPack.add('');
  FPack.add('		linkScales: helpers.noop,');
  FPack.add('');
  FPack.add('		update: function(reset) {');
  FPack.add('			var me = this;');
  FPack.add('			var meta = me.getMeta();');
  FPack.add('			var line = meta.dataset;');
  FPack.add('			var points = meta.data;');
  FPack.add('			var custom = line.custom || {};');
  FPack.add('			var dataset = me.getDataset();');
  FPack.add('			var lineElementOptions = me.chart.options.elements.line;');
  FPack.add('			var scale = me.chart.scale;');
  FPack.add('');
  FPack.add('			// Compatibility: If the properties are defined with only the old name, use those values');
  FPack.add('			if ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {');
  FPack.add('				dataset.lineTension = dataset.tension;');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			helpers.extend(meta.dataset, {');
  FPack.add('				// Utility');
  FPack.add('				_datasetIndex: me.index,');
  FPack.add('				_scale: scale,');
  FPack.add('				// Data');
  FPack.add('				_children: points,');
  FPack.add('				_loop: true,');
  FPack.add('				// Model');
  FPack.add('				_model: {');
  FPack.add('					// Appearance');
  FPack.add('					tension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, lineElementOptions.tension),');
  FPack.add('					backgroundColor: custom.backgroundColor ? custom.backgroundColor : (dataset.backgroundColor || lineElementOptions.backgroundColor),');
  FPack.add('					borderWidth: custom.borderWidth ? custom.borderWidth : (dataset.borderWidth || lineElementOptions.borderWidth),');
  FPack.add('					borderColor: custom.borderColor ? custom.borderColor : (dataset.borderColor || lineElementOptions.borderColor),');
  FPack.add('					fill: custom.fill ? custom.fill : (dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill),');
  FPack.add('					borderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : (dataset.borderCapStyle || lineElementOptions.borderCapStyle),');
  FPack.add('					borderDash: custom.borderDash ? custom.borderDash : (dataset.borderDash || lineElementOptions.borderDash),');
  FPack.add('					borderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : (dataset.borderDashOffset || lineElementOptions.borderDashOffset),');
  FPack.add('					borderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : (dataset.borderJoinStyle || lineElementOptions.borderJoinStyle),');
  FPack.add('				}');
  FPack.add('			});');
  FPack.add('');
  FPack.add('			meta.dataset.pivot();');
  FPack.add('');
  FPack.add('			// Update Points');
  FPack.add('			helpers.each(points, function(point, index) {');
  FPack.add('				me.updateElement(point, index, reset);');
  FPack.add('			}, me);');
  FPack.add('');
  FPack.add('			// Update bezier control points');
  FPack.add('			me.updateBezierControlPoints();');
  FPack.add('		},');
  FPack.add('		updateElement: function(point, index, reset) {');
  FPack.add('			var me = this;');
  FPack.add('			var custom = point.custom || {};');
  FPack.add('			var dataset = me.getDataset();');
  FPack.add('			var scale = me.chart.scale;');
  FPack.add('			var pointElementOptions = me.chart.options.elements.point;');
  FPack.add('			var pointPosition = scale.getPointPositionForValue(index, dataset.data[index]);');
  FPack.add('');
  FPack.add('			// Compatibility: If the properties are defined with only the old name, use those values');
  FPack.add('			if ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {');
  FPack.add('				dataset.pointRadius = dataset.radius;');
  FPack.add('			}');
  FPack.add('			if ((dataset.hitRadius !== undefined) && (dataset.pointHitRadius === undefined)) {');
  FPack.add('				dataset.pointHitRadius = dataset.hitRadius;');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			helpers.extend(point, {');
  FPack.add('				// Utility');
  FPack.add('				_datasetIndex: me.index,');
end;

procedure TChartbundleJS.ChartbundleJS_25;
begin
  FPack.add('				_index: index,');
  FPack.add('				_scale: scale,');
  FPack.add('');
  FPack.add('				// Desired view properties');
  FPack.add('				_model: {');
  FPack.add('					x: reset ? scale.xCenter : pointPosition.x, // value not used in dataset scale, but we want a consistent API between scales');
  FPack.add('					y: reset ? scale.yCenter : pointPosition.y,');
  FPack.add('');
  FPack.add('					// Appearance');
  FPack.add('					tension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, me.chart.options.elements.line.tension),');
  FPack.add('					radius: custom.radius ? custom.radius : helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointElementOptions.radius),');
  FPack.add('					backgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, pointElementOptions.backgroundColor),');
  FPack.add('					borderColor: custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, pointElementOptions.borderColor),');
  FPack.add('					borderWidth: custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, pointElementOptions.borderWidth),');
  FPack.add('					pointStyle: custom.pointStyle ? custom.pointStyle : helpers.valueAtIndexOrDefault(dataset.pointStyle, index, pointElementOptions.pointStyle),');
  FPack.add('');
  FPack.add('					// Tooltip');
  FPack.add('					hitRadius: custom.hitRadius ? custom.hitRadius : helpers.valueAtIndexOrDefault(dataset.pointHitRadius, index, pointElementOptions.hitRadius)');
  FPack.add('				}');
  FPack.add('			});');
  FPack.add('');
  FPack.add('			point._model.skip = custom.skip ? custom.skip : (isNaN(point._model.x) || isNaN(point._model.y));');
  FPack.add('		},');
  FPack.add('		updateBezierControlPoints: function() {');
  FPack.add('			var chartArea = this.chart.chartArea;');
  FPack.add('			var meta = this.getMeta();');
  FPack.add('');
  FPack.add('			helpers.each(meta.data, function(point, index) {');
  FPack.add('				var model = point._model;');
  FPack.add('				var controlPoints = helpers.splineCurve(');
  FPack.add('					helpers.previousItem(meta.data, index, true)._model,');
  FPack.add('					model,');
  FPack.add('					helpers.nextItem(meta.data, index, true)._model,');
  FPack.add('					model.tension');
  FPack.add('				);');
  FPack.add('');
  FPack.add('				// Prevent the bezier going outside of the bounds of the graph');
  FPack.add('				model.controlPointPreviousX = Math.max(Math.min(controlPoints.previous.x, chartArea.right), chartArea.left);');
  FPack.add('				model.controlPointPreviousY = Math.max(Math.min(controlPoints.previous.y, chartArea.bottom), chartArea.top);');
  FPack.add('');
  FPack.add('				model.controlPointNextX = Math.max(Math.min(controlPoints.next.x, chartArea.right), chartArea.left);');
  FPack.add('				model.controlPointNextY = Math.max(Math.min(controlPoints.next.y, chartArea.bottom), chartArea.top);');
  FPack.add('');
  FPack.add('				// Now pivot the point for animation');
  FPack.add('				point.pivot();');
  FPack.add('			});');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		setHoverStyle: function(point) {');
  FPack.add('			// Point');
  FPack.add('			var dataset = this.chart.data.datasets[point._datasetIndex];');
  FPack.add('			var custom = point.custom || {};');
  FPack.add('			var index = point._index;');
  FPack.add('			var model = point._model;');
  FPack.add('');
  FPack.add('			model.radius = custom.hoverRadius ? custom.hoverRadius : helpers.valueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);');
  FPack.add('			model.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : helpers.valueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));');
  FPack.add('			model.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : helpers.valueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));');
  FPack.add('			model.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : helpers.valueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		removeHoverStyle: function(point) {');
  FPack.add('			var dataset = this.chart.data.datasets[point._datasetIndex];');
  FPack.add('			var custom = point.custom || {};');
  FPack.add('			var index = point._index;');
  FPack.add('			var model = point._model;');
  FPack.add('			var pointElementOptions = this.chart.options.elements.point;');
  FPack.add('');
  FPack.add('			model.radius = custom.radius ? custom.radius : helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointElementOptions.radius);');
  FPack.add('			model.backgroundColor = custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, pointElementOptions.backgroundColor);');
  FPack.add('			model.borderColor = custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, pointElementOptions.borderColor);');
  FPack.add('			model.borderWidth = custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, pointElementOptions.borderWidth);');
  FPack.add('		}');
  FPack.add('	});');
  FPack.add('};');
  FPack.add('');
  FPack.add('},{"25":25,"40":40,"45":45}],21:[function(require,module,exports){');
  FPack.add('''use strict'';');
  FPack.add('');
  FPack.add('var defaults = require(25);');
  FPack.add('');
  FPack.add('defaults._set(''scatter'', {');
  FPack.add('	hover: {');
  FPack.add('		mode: ''single''');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	scales: {');
  FPack.add('		xAxes: [{');
  FPack.add('			id: ''x-axis-1'',    // need an ID so datasets can reference the scale');
  FPack.add('			type: ''linear'',    // scatter should not use a category axis');
  FPack.add('			position: ''bottom''');
  FPack.add('		}],');
  FPack.add('		yAxes: [{');
  FPack.add('			id: ''y-axis-1'',');
  FPack.add('			type: ''linear'',');
  FPack.add('			position: ''left''');
  FPack.add('		}]');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	showLines: false,');
  FPack.add('');
  FPack.add('	tooltips: {');
  FPack.add('		callbacks: {');
  FPack.add('			title: function() {');
  FPack.add('				return '''';     // doesn''t make sense for scatter since data are formatted as a point');
  FPack.add('			},');
  FPack.add('			label: function(item) {');
  FPack.add('				return ''('' + item.xLabel + '', '' + item.yLabel + '')'';');
  FPack.add('			}');
  FPack.add('		}');
  FPack.add('	}');
  FPack.add('});');
  FPack.add('');
  FPack.add('module.exports = function(Chart) {');
  FPack.add('');
  FPack.add('	// Scatter charts use line controllers');
  FPack.add('	Chart.controllers.scatter = Chart.controllers.line;');
  FPack.add('');
  FPack.add('};');
  FPack.add('');
  FPack.add('},{"25":25}],22:[function(require,module,exports){');
  FPack.add('/* global window: false */');
  FPack.add('''use strict'';');
  FPack.add('');
  FPack.add('var defaults = require(25);');
  FPack.add('var Element = require(26);');
  FPack.add('var helpers = require(45);');
  FPack.add('');
  FPack.add('defaults._set(''global'', {');
  FPack.add('	animation: {');
  FPack.add('		duration: 1000,');
  FPack.add('		easing: ''easeOutQuart'',');
  FPack.add('		onProgress: helpers.noop,');
  FPack.add('		onComplete: helpers.noop');
  FPack.add('	}');
  FPack.add('});');
  FPack.add('');
  FPack.add('module.exports = function(Chart) {');
  FPack.add('');
  FPack.add('	Chart.Animation = Element.extend({');
  FPack.add('		chart: null, // the animation associated chart instance');
  FPack.add('		currentStep: 0, // the current animation step');
  FPack.add('		numSteps: 60, // default number of steps');
  FPack.add('		easing: '''', // the easing to use for this animation');
  FPack.add('		render: null, // render function used by the animation service');
  FPack.add('');
  FPack.add('		onAnimationProgress: null, // user specified callback to fire on each step of the animation');
  FPack.add('		onAnimationComplete: null, // user specified callback to fire when the animation finishes');
  FPack.add('	});');
  FPack.add('');
  FPack.add('	Chart.animationService = {');
  FPack.add('		frameDuration: 17,');
  FPack.add('		animations: [],');
  FPack.add('		dropFrames: 0,');
  FPack.add('		request: null,');
  FPack.add('');
  FPack.add('		/**');
  FPack.add('		 * @param {Chart} chart - The chart to animate.');
  FPack.add('		 * @param {Chart.Animation} animation - The animation that we will animate.');
  FPack.add('		 * @param {Number} duration - The animation duration in ms.');
  FPack.add('		 * @param {Boolean} lazy - if true, the chart is not marked as animating to enable more responsive interactions');
  FPack.add('		 */');
  FPack.add('		addAnimation: function(chart, animation, duration, lazy) {');
  FPack.add('			var animations = this.animations;');
  FPack.add('			var i, ilen;');
  FPack.add('');
  FPack.add('			animation.chart = chart;');
  FPack.add('');
  FPack.add('			if (!lazy) {');
  FPack.add('				chart.animating = true;');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			for (i = 0, ilen = animations.length; i < ilen; ++i) {');
  FPack.add('				if (animations[i].chart === chart) {');
  FPack.add('					animations[i] = animation;');
  FPack.add('					return;');
  FPack.add('				}');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			animations.push(animation);');
  FPack.add('');
  FPack.add('			// If there are no animations queued, manually kickstart a digest, for lack of a better word');
  FPack.add('			if (animations.length === 1) {');
  FPack.add('				this.requestAnimationFrame();');
  FPack.add('			}');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		cancelAnimation: function(chart) {');
  FPack.add('			var index = helpers.findIndex(this.animations, function(animation) {');
  FPack.add('				return animation.chart === chart;');
  FPack.add('			});');
  FPack.add('');
  FPack.add('			if (index !== -1) {');
  FPack.add('				this.animations.splice(index, 1);');
  FPack.add('				chart.animating = false;');
  FPack.add('			}');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		requestAnimationFrame: function() {');
  FPack.add('			var me = this;');
  FPack.add('			if (me.request === null) {');
  FPack.add('				// Skip animation frame requests until the active one is executed.');
  FPack.add('				// This can happen when processing mouse events, e.g. ''mousemove''');
  FPack.add('				// and ''mouseout'' events will trigger multiple renders.');
  FPack.add('				me.request = helpers.requestAnimFrame.call(window, function() {');
  FPack.add('					me.request = null;');
  FPack.add('					me.startDigest();');
  FPack.add('				});');
  FPack.add('			}');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		/**');
  FPack.add('		 * @private');
  FPack.add('		 */');
  FPack.add('		startDigest: function() {');
  FPack.add('			var me = this;');
  FPack.add('			var startTime = Date.now();');
  FPack.add('			var framesToDrop = 0;');
  FPack.add('');
  FPack.add('			if (me.dropFrames > 1) {');
  FPack.add('				framesToDrop = Math.floor(me.dropFrames);');
  FPack.add('				me.dropFrames = me.dropFrames % 1;');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			me.advance(1 + framesToDrop);');
  FPack.add('');
  FPack.add('			var endTime = Date.now();');
  FPack.add('');
  FPack.add('			me.dropFrames += (endTime - startTime) / me.frameDuration;');
  FPack.add('');
  FPack.add('			// Do we have more stuff to animate?');
  FPack.add('			if (me.animations.length > 0) {');
  FPack.add('				me.requestAnimationFrame();');
  FPack.add('			}');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		/**');
  FPack.add('		 * @private');
  FPack.add('		 */');
  FPack.add('		advance: function(count) {');
  FPack.add('			var animations = this.animations;');
  FPack.add('			var animation, chart;');
  FPack.add('			var i = 0;');
  FPack.add('');
  FPack.add('			while (i < animations.length) {');
  FPack.add('				animation = animations[i];');
  FPack.add('				chart = animation.chart;');
  FPack.add('');
  FPack.add('				animation.currentStep = (animation.currentStep || 0) + count;');
  FPack.add('				animation.currentStep = Math.min(animation.currentStep, animation.numSteps);');
  FPack.add('');
  FPack.add('				helpers.callback(animation.render, [chart, animation], chart);');
  FPack.add('				helpers.callback(animation.onAnimationProgress, [animation], chart);');
  FPack.add('');
  FPack.add('				if (animation.currentStep >= animation.numSteps) {');
  FPack.add('					helpers.callback(animation.onAnimationComplete, [animation], chart);');
  FPack.add('					chart.animating = false;');
  FPack.add('					animations.splice(i, 1);');
  FPack.add('				} else {');
  FPack.add('					++i;');
  FPack.add('				}');
  FPack.add('			}');
  FPack.add('		}');
  FPack.add('	};');
  FPack.add('');
  FPack.add('	/**');
  FPack.add('	 * Provided for backward compatibility, use Chart.Animation instead');
  FPack.add('	 * @prop Chart.Animation#animationObject');
  FPack.add('	 * @deprecated since version 2.6.0');
  FPack.add('	 * @todo remove at version 3');
  FPack.add('	 */');
  FPack.add('	Object.defineProperty(Chart.Animation.prototype, ''animationObject'', {');
  FPack.add('		get: function() {');
  FPack.add('			return this;');
  FPack.add('		}');
  FPack.add('	});');
  FPack.add('');
  FPack.add('	/**');
  FPack.add('	 * Provided for backward compatibility, use Chart.Animation#chart instead');
  FPack.add('	 * @prop Chart.Animation#chartInstance');
  FPack.add('	 * @deprecated since version 2.6.0');
  FPack.add('	 * @todo remove at version 3');
  FPack.add('	 */');
  FPack.add('	Object.defineProperty(Chart.Animation.prototype, ''chartInstance'', {');
  FPack.add('		get: function() {');
  FPack.add('			return this.chart;');
  FPack.add('		},');
  FPack.add('		set: function(value) {');
  FPack.add('			this.chart = value;');
  FPack.add('		}');
  FPack.add('	});');
  FPack.add('');
  FPack.add('};');
  FPack.add('');
  FPack.add('},{"25":25,"26":26,"45":45}],23:[function(require,module,exports){');
  FPack.add('''use strict'';');
  FPack.add('');
  FPack.add('var defaults = require(25);');
  FPack.add('var helpers = require(45);');
  FPack.add('var Interaction = require(28);');
  FPack.add('var layouts = require(30);');
  FPack.add('var platform = require(48);');
  FPack.add('var plugins = require(31);');
  FPack.add('');
  FPack.add('module.exports = function(Chart) {');
  FPack.add('');
  FPack.add('	// Create a dictionary of chart types, to allow for extension of existing types');
  FPack.add('	Chart.types = {};');
  FPack.add('');
  FPack.add('	// Store a reference to each instance - allowing us to globally resize chart instances on window resize.');
  FPack.add('	// Destroy method on the chart will remove the instance of the chart from this reference.');
  FPack.add('	Chart.instances = {};');
  FPack.add('');
  FPack.add('	// Controllers available for dataset visualization eg. bar, line, slice, etc.');
  FPack.add('	Chart.controllers = {};');
  FPack.add('');
  FPack.add('	/**');
  FPack.add('	 * Initializes the given config with global and chart default values.');
  FPack.add('	 */');
  FPack.add('	function initConfig(config) {');
  FPack.add('		config = config || {};');
  FPack.add('');
  FPack.add('		// Do NOT use configMerge() for the data object because this method merges arrays');
  FPack.add('		// and so would change references to labels and datasets, preventing data updates.');
  FPack.add('		var data = config.data = config.data || {};');
  FPack.add('		data.datasets = data.datasets || [];');
  FPack.add('		data.labels = data.labels || [];');
  FPack.add('');
  FPack.add('		config.options = helpers.configMerge(');
  FPack.add('			defaults.global,');
  FPack.add('			defaults[config.type],');
  FPack.add('			config.options || {});');
  FPack.add('');
  FPack.add('		return config;');
  FPack.add('	}');
end;

procedure TChartbundleJS.ChartbundleJS_26;
begin
  FPack.add('');
  FPack.add('	/**');
  FPack.add('	 * Updates the config of the chart');
  FPack.add('	 * @param chart {Chart} chart to update the options for');
  FPack.add('	 */');
  FPack.add('	function updateConfig(chart) {');
  FPack.add('		var newOptions = chart.options;');
  FPack.add('');
  FPack.add('		helpers.each(chart.scales, function(scale) {');
  FPack.add('			layouts.removeBox(chart, scale);');
  FPack.add('		});');
  FPack.add('');
  FPack.add('		newOptions = helpers.configMerge(');
  FPack.add('			Chart.defaults.global,');
  FPack.add('			Chart.defaults[chart.config.type],');
  FPack.add('			newOptions);');
  FPack.add('');
  FPack.add('		chart.options = chart.config.options = newOptions;');
  FPack.add('		chart.ensureScalesHaveIDs();');
  FPack.add('		chart.buildOrUpdateScales();');
  FPack.add('		// Tooltip');
  FPack.add('		chart.tooltip._options = newOptions.tooltips;');
  FPack.add('		chart.tooltip.initialize();');
  FPack.add('	}');
  FPack.add('');
  FPack.add('	function positionIsHorizontal(position) {');
  FPack.add('		return position === ''top'' || position === ''bottom'';');
  FPack.add('	}');
  FPack.add('');
  FPack.add('	helpers.extend(Chart.prototype, /** @lends Chart */ {');
  FPack.add('		/**');
  FPack.add('		 * @private');
  FPack.add('		 */');
  FPack.add('		construct: function(item, config) {');
  FPack.add('			var me = this;');
  FPack.add('');
  FPack.add('			config = initConfig(config);');
  FPack.add('');
  FPack.add('			var context = platform.acquireContext(item, config);');
  FPack.add('			var canvas = context && context.canvas;');
  FPack.add('			var height = canvas && canvas.height;');
  FPack.add('			var width = canvas && canvas.width;');
  FPack.add('');
  FPack.add('			me.id = helpers.uid();');
  FPack.add('			me.ctx = context;');
  FPack.add('			me.canvas = canvas;');
  FPack.add('			me.config = config;');
  FPack.add('			me.width = width;');
  FPack.add('			me.height = height;');
  FPack.add('			me.aspectRatio = height ? width / height : null;');
  FPack.add('			me.options = config.options;');
  FPack.add('			me._bufferedRender = false;');
  FPack.add('');
  FPack.add('			/**');
  FPack.add('			 * Provided for backward compatibility, Chart and Chart.Controller have been merged,');
  FPack.add('			 * the "instance" still need to be defined since it might be called from plugins.');
  FPack.add('			 * @prop Chart#chart');
  FPack.add('			 * @deprecated since version 2.6.0');
  FPack.add('			 * @todo remove at version 3');
  FPack.add('			 * @private');
  FPack.add('			 */');
  FPack.add('			me.chart = me;');
  FPack.add('			me.controller = me; // chart.chart.controller #inception');
  FPack.add('');
  FPack.add('			// Add the chart instance to the global namespace');
  FPack.add('			Chart.instances[me.id] = me;');
  FPack.add('');
  FPack.add('			// Define alias to the config data: `chart.data === chart.config.data`');
  FPack.add('			Object.defineProperty(me, ''data'', {');
  FPack.add('				get: function() {');
  FPack.add('					return me.config.data;');
  FPack.add('				},');
  FPack.add('				set: function(value) {');
  FPack.add('					me.config.data = value;');
  FPack.add('				}');
  FPack.add('			});');
  FPack.add('');
  FPack.add('			if (!context || !canvas) {');
  FPack.add('				// The given item is not a compatible context2d element, let''s return before finalizing');
  FPack.add('				// the chart initialization but after setting basic chart / controller properties that');
  FPack.add('				// can help to figure out that the chart is not valid (e.g chart.canvas !== null);');
  FPack.add('				// https://github.com/chartjs/Chart.js/issues/2807');
  FPack.add('				console.error("Failed to create chart: can''t acquire context from the given item");');
  FPack.add('				return;');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			me.initialize();');
  FPack.add('			me.update();');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		/**');
  FPack.add('		 * @private');
  FPack.add('		 */');
  FPack.add('		initialize: function() {');
  FPack.add('			var me = this;');
  FPack.add('');
  FPack.add('			// Before init plugin notification');
  FPack.add('			plugins.notify(me, ''beforeInit'');');
  FPack.add('');
  FPack.add('			helpers.retinaScale(me, me.options.devicePixelRatio);');
  FPack.add('');
  FPack.add('			me.bindEvents();');
  FPack.add('');
  FPack.add('			if (me.options.responsive) {');
  FPack.add('				// Initial resize before chart draws (must be silent to preserve initial animations).');
  FPack.add('				me.resize(true);');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			// Make sure scales have IDs and are built before we build any controllers.');
  FPack.add('			me.ensureScalesHaveIDs();');
  FPack.add('			me.buildOrUpdateScales();');
  FPack.add('			me.initToolTip();');
  FPack.add('');
  FPack.add('			// After init plugin notification');
  FPack.add('			plugins.notify(me, ''afterInit'');');
  FPack.add('');
  FPack.add('			return me;');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		clear: function() {');
  FPack.add('			helpers.canvas.clear(this);');
  FPack.add('			return this;');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		stop: function() {');
  FPack.add('			// Stops any current animation loop occurring');
  FPack.add('			Chart.animationService.cancelAnimation(this);');
  FPack.add('			return this;');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		resize: function(silent) {');
  FPack.add('			var me = this;');
  FPack.add('			var options = me.options;');
  FPack.add('			var canvas = me.canvas;');
  FPack.add('			var aspectRatio = (options.maintainAspectRatio && me.aspectRatio) || null;');
  FPack.add('');
  FPack.add('			// the canvas render width and height will be casted to integers so make sure that');
  FPack.add('			// the canvas display style uses the same integer values to avoid blurring effect.');
  FPack.add('');
  FPack.add('			// Set to 0 instead of canvas.size because the size defaults to 300x150 if the element is collased');
  FPack.add('			var newWidth = Math.max(0, Math.floor(helpers.getMaximumWidth(canvas)));');
  FPack.add('			var newHeight = Math.max(0, Math.floor(aspectRatio ? newWidth / aspectRatio : helpers.getMaximumHeight(canvas)));');
  FPack.add('');
  FPack.add('			if (me.width === newWidth && me.height === newHeight) {');
  FPack.add('				return;');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			canvas.width = me.width = newWidth;');
  FPack.add('			canvas.height = me.height = newHeight;');
  FPack.add('			canvas.style.width = newWidth + ''px'';');
  FPack.add('			canvas.style.height = newHeight + ''px'';');
  FPack.add('');
  FPack.add('			helpers.retinaScale(me, options.devicePixelRatio);');
  FPack.add('');
  FPack.add('			if (!silent) {');
  FPack.add('				// Notify any plugins about the resize');
  FPack.add('				var newSize = {width: newWidth, height: newHeight};');
  FPack.add('				plugins.notify(me, ''resize'', [newSize]);');
  FPack.add('');
  FPack.add('				// Notify of resize');
  FPack.add('				if (me.options.onResize) {');
  FPack.add('					me.options.onResize(me, newSize);');
  FPack.add('				}');
  FPack.add('');
  FPack.add('				me.stop();');
  FPack.add('				me.update(me.options.responsiveAnimationDuration);');
  FPack.add('			}');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		ensureScalesHaveIDs: function() {');
  FPack.add('			var options = this.options;');
  FPack.add('			var scalesOptions = options.scales || {};');
  FPack.add('			var scaleOptions = options.scale;');
  FPack.add('');
  FPack.add('			helpers.each(scalesOptions.xAxes, function(xAxisOptions, index) {');
  FPack.add('				xAxisOptions.id = xAxisOptions.id || (''x-axis-'' + index);');
  FPack.add('			});');
  FPack.add('');
  FPack.add('			helpers.each(scalesOptions.yAxes, function(yAxisOptions, index) {');
  FPack.add('				yAxisOptions.id = yAxisOptions.id || (''y-axis-'' + index);');
  FPack.add('			});');
  FPack.add('');
  FPack.add('			if (scaleOptions) {');
  FPack.add('				scaleOptions.id = scaleOptions.id || ''scale'';');
  FPack.add('			}');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		/**');
  FPack.add('		 * Builds a map of scale ID to scale object for future lookup.');
  FPack.add('		 */');
  FPack.add('		buildOrUpdateScales: function() {');
  FPack.add('			var me = this;');
  FPack.add('			var options = me.options;');
  FPack.add('			var scales = me.scales || {};');
  FPack.add('			var items = [];');
  FPack.add('			var updated = Object.keys(scales).reduce(function(obj, id) {');
  FPack.add('				obj[id] = false;');
  FPack.add('				return obj;');
  FPack.add('			}, {});');
  FPack.add('');
  FPack.add('			if (options.scales) {');
  FPack.add('				items = items.concat(');
  FPack.add('					(options.scales.xAxes || []).map(function(xAxisOptions) {');
  FPack.add('						return {options: xAxisOptions, dtype: ''category'', dposition: ''bottom''};');
  FPack.add('					}),');
  FPack.add('					(options.scales.yAxes || []).map(function(yAxisOptions) {');
  FPack.add('						return {options: yAxisOptions, dtype: ''linear'', dposition: ''left''};');
  FPack.add('					})');
  FPack.add('				);');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			if (options.scale) {');
  FPack.add('				items.push({');
  FPack.add('					options: options.scale,');
  FPack.add('					dtype: ''radialLinear'',');
  FPack.add('					isDefault: true,');
  FPack.add('					dposition: ''chartArea''');
  FPack.add('				});');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			helpers.each(items, function(item) {');
  FPack.add('				var scaleOptions = item.options;');
  FPack.add('				var id = scaleOptions.id;');
  FPack.add('				var scaleType = helpers.valueOrDefault(scaleOptions.type, item.dtype);');
  FPack.add('');
  FPack.add('				if (positionIsHorizontal(scaleOptions.position) !== positionIsHorizontal(item.dposition)) {');
  FPack.add('					scaleOptions.position = item.dposition;');
  FPack.add('				}');
  FPack.add('');
  FPack.add('				updated[id] = true;');
  FPack.add('				var scale = null;');
  FPack.add('				if (id in scales && scales[id].type === scaleType) {');
  FPack.add('					scale = scales[id];');
  FPack.add('					scale.options = scaleOptions;');
  FPack.add('					scale.ctx = me.ctx;');
  FPack.add('					scale.chart = me;');
  FPack.add('				} else {');
  FPack.add('					var scaleClass = Chart.scaleService.getScaleConstructor(scaleType);');
  FPack.add('					if (!scaleClass) {');
  FPack.add('						return;');
  FPack.add('					}');
  FPack.add('					scale = new scaleClass({');
  FPack.add('						id: id,');
  FPack.add('						type: scaleType,');
  FPack.add('						options: scaleOptions,');
  FPack.add('						ctx: me.ctx,');
  FPack.add('						chart: me');
  FPack.add('					});');
  FPack.add('					scales[scale.id] = scale;');
  FPack.add('				}');
  FPack.add('');
  FPack.add('				scale.mergeTicksOptions();');
  FPack.add('');
  FPack.add('				// TODO(SB): I think we should be able to remove this custom case (options.scale)');
  FPack.add('				// and consider it as a regular scale part of the "scales"" map only! This would');
  FPack.add('				// make the logic easier and remove some useless? custom code.');
  FPack.add('				if (item.isDefault) {');
  FPack.add('					me.scale = scale;');
  FPack.add('				}');
  FPack.add('			});');
  FPack.add('			// clear up discarded scales');
  FPack.add('			helpers.each(updated, function(hasUpdated, id) {');
  FPack.add('				if (!hasUpdated) {');
  FPack.add('					delete scales[id];');
  FPack.add('				}');
  FPack.add('			});');
  FPack.add('');
  FPack.add('			me.scales = scales;');
  FPack.add('');
  FPack.add('			Chart.scaleService.addScalesToLayout(this);');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		buildOrUpdateControllers: function() {');
  FPack.add('			var me = this;');
  FPack.add('			var types = [];');
  FPack.add('			var newControllers = [];');
  FPack.add('');
  FPack.add('			helpers.each(me.data.datasets, function(dataset, datasetIndex) {');
  FPack.add('				var meta = me.getDatasetMeta(datasetIndex);');
  FPack.add('				var type = dataset.type || me.config.type;');
  FPack.add('');
  FPack.add('				if (meta.type && meta.type !== type) {');
  FPack.add('					me.destroyDatasetMeta(datasetIndex);');
  FPack.add('					meta = me.getDatasetMeta(datasetIndex);');
  FPack.add('				}');
  FPack.add('				meta.type = type;');
  FPack.add('');
  FPack.add('				types.push(meta.type);');
  FPack.add('');
  FPack.add('				if (meta.controller) {');
  FPack.add('					meta.controller.updateIndex(datasetIndex);');
  FPack.add('					meta.controller.linkScales();');
  FPack.add('				} else {');
  FPack.add('					var ControllerClass = Chart.controllers[meta.type];');
  FPack.add('					if (ControllerClass === undefined) {');
  FPack.add('						throw new Error(''"'' + meta.type + ''" is not a chart type.'');');
  FPack.add('					}');
  FPack.add('');
  FPack.add('					meta.controller = new ControllerClass(me, datasetIndex);');
  FPack.add('					newControllers.push(meta.controller);');
  FPack.add('				}');
  FPack.add('			}, me);');
  FPack.add('');
  FPack.add('			return newControllers;');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		/**');
  FPack.add('		 * Reset the elements of all datasets');
  FPack.add('		 * @private');
  FPack.add('		 */');
  FPack.add('		resetElements: function() {');
  FPack.add('			var me = this;');
  FPack.add('			helpers.each(me.data.datasets, function(dataset, datasetIndex) {');
  FPack.add('				me.getDatasetMeta(datasetIndex).controller.reset();');
  FPack.add('			}, me);');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		/**');
  FPack.add('		* Resets the chart back to it''s state before the initial animation');
  FPack.add('		*/');
  FPack.add('		reset: function() {');
  FPack.add('			this.resetElements();');
  FPack.add('			this.tooltip.initialize();');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		update: function(config) {');
  FPack.add('			var me = this;');
  FPack.add('');
  FPack.add('			if (!config || typeof config !== ''object'') {');
  FPack.add('				// backwards compatibility');
  FPack.add('				config = {');
  FPack.add('					duration: config,');
  FPack.add('					lazy: arguments[1]');
  FPack.add('				};');
  FPack.add('			}');
  FPack.add('');
end;

procedure TChartbundleJS.ChartbundleJS_27;
begin
  FPack.add('			updateConfig(me);');
  FPack.add('');
  FPack.add('			// plugins options references might have change, let''s invalidate the cache');
  FPack.add('			// https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167');
  FPack.add('			plugins._invalidate(me);');
  FPack.add('');
  FPack.add('			if (plugins.notify(me, ''beforeUpdate'') === false) {');
  FPack.add('				return;');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			// In case the entire data object changed');
  FPack.add('			me.tooltip._data = me.data;');
  FPack.add('');
  FPack.add('			// Make sure dataset controllers are updated and new controllers are reset');
  FPack.add('			var newControllers = me.buildOrUpdateControllers();');
  FPack.add('');
  FPack.add('			// Make sure all dataset controllers have correct meta data counts');
  FPack.add('			helpers.each(me.data.datasets, function(dataset, datasetIndex) {');
  FPack.add('				me.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();');
  FPack.add('			}, me);');
  FPack.add('');
  FPack.add('			me.updateLayout();');
  FPack.add('');
  FPack.add('			// Can only reset the new controllers after the scales have been updated');
  FPack.add('			if (me.options.animation && me.options.animation.duration) {');
  FPack.add('				helpers.each(newControllers, function(controller) {');
  FPack.add('					controller.reset();');
  FPack.add('				});');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			me.updateDatasets();');
  FPack.add('');
  FPack.add('			// Need to reset tooltip in case it is displayed with elements that are removed');
  FPack.add('			// after update.');
  FPack.add('			me.tooltip.initialize();');
  FPack.add('');
  FPack.add('			// Last active contains items that were previously in the tooltip.');
  FPack.add('			// When we reset the tooltip, we need to clear it');
  FPack.add('			me.lastActive = [];');
  FPack.add('');
  FPack.add('			// Do this before render so that any plugins that need final scale updates can use it');
  FPack.add('			plugins.notify(me, ''afterUpdate'');');
  FPack.add('');
  FPack.add('			if (me._bufferedRender) {');
  FPack.add('				me._bufferedRequest = {');
  FPack.add('					duration: config.duration,');
  FPack.add('					easing: config.easing,');
  FPack.add('					lazy: config.lazy');
  FPack.add('				};');
  FPack.add('			} else {');
  FPack.add('				me.render(config);');
  FPack.add('			}');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		/**');
  FPack.add('		 * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`');
  FPack.add('		 * hook, in which case, plugins will not be called on `afterLayout`.');
  FPack.add('		 * @private');
  FPack.add('		 */');
  FPack.add('		updateLayout: function() {');
  FPack.add('			var me = this;');
  FPack.add('');
  FPack.add('			if (plugins.notify(me, ''beforeLayout'') === false) {');
  FPack.add('				return;');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			layouts.update(this, this.width, this.height);');
  FPack.add('');
  FPack.add('			/**');
  FPack.add('			 * Provided for backward compatibility, use `afterLayout` instead.');
  FPack.add('			 * @method IPlugin#afterScaleUpdate');
  FPack.add('			 * @deprecated since version 2.5.0');
  FPack.add('			 * @todo remove at version 3');
  FPack.add('			 * @private');
  FPack.add('			 */');
  FPack.add('			plugins.notify(me, ''afterScaleUpdate'');');
  FPack.add('			plugins.notify(me, ''afterLayout'');');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		/**');
  FPack.add('		 * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`');
  FPack.add('		 * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.');
  FPack.add('		 * @private');
  FPack.add('		 */');
  FPack.add('		updateDatasets: function() {');
  FPack.add('			var me = this;');
  FPack.add('');
  FPack.add('			if (plugins.notify(me, ''beforeDatasetsUpdate'') === false) {');
  FPack.add('				return;');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			for (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {');
  FPack.add('				me.updateDataset(i);');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			plugins.notify(me, ''afterDatasetsUpdate'');');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		/**');
  FPack.add('		 * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`');
  FPack.add('		 * hook, in which case, plugins will not be called on `afterDatasetUpdate`.');
  FPack.add('		 * @private');
  FPack.add('		 */');
  FPack.add('		updateDataset: function(index) {');
  FPack.add('			var me = this;');
  FPack.add('			var meta = me.getDatasetMeta(index);');
  FPack.add('			var args = {');
  FPack.add('				meta: meta,');
  FPack.add('				index: index');
  FPack.add('			};');
  FPack.add('');
  FPack.add('			if (plugins.notify(me, ''beforeDatasetUpdate'', [args]) === false) {');
  FPack.add('				return;');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			meta.controller.update();');
  FPack.add('');
  FPack.add('			plugins.notify(me, ''afterDatasetUpdate'', [args]);');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		render: function(config) {');
  FPack.add('			var me = this;');
  FPack.add('');
  FPack.add('			if (!config || typeof config !== ''object'') {');
  FPack.add('				// backwards compatibility');
  FPack.add('				config = {');
  FPack.add('					duration: config,');
  FPack.add('					lazy: arguments[1]');
  FPack.add('				};');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			var duration = config.duration;');
  FPack.add('			var lazy = config.lazy;');
  FPack.add('');
  FPack.add('			if (plugins.notify(me, ''beforeRender'') === false) {');
  FPack.add('				return;');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			var animationOptions = me.options.animation;');
  FPack.add('			var onComplete = function(animation) {');
  FPack.add('				plugins.notify(me, ''afterRender'');');
  FPack.add('				helpers.callback(animationOptions && animationOptions.onComplete, [animation], me);');
  FPack.add('			};');
  FPack.add('');
  FPack.add('			if (animationOptions && ((typeof duration !== ''undefined'' && duration !== 0) || (typeof duration === ''undefined'' && animationOptions.duration !== 0))) {');
  FPack.add('				var animation = new Chart.Animation({');
  FPack.add('					numSteps: (duration || animationOptions.duration) / 16.66, // 60 fps');
  FPack.add('					easing: config.easing || animationOptions.easing,');
  FPack.add('');
  FPack.add('					render: function(chart, animationObject) {');
  FPack.add('						var easingFunction = helpers.easing.effects[animationObject.easing];');
  FPack.add('						var currentStep = animationObject.currentStep;');
  FPack.add('						var stepDecimal = currentStep / animationObject.numSteps;');
  FPack.add('');
  FPack.add('						chart.draw(easingFunction(stepDecimal), stepDecimal, currentStep);');
  FPack.add('					},');
  FPack.add('');
  FPack.add('					onAnimationProgress: animationOptions.onProgress,');
  FPack.add('					onAnimationComplete: onComplete');
  FPack.add('				});');
  FPack.add('');
  FPack.add('				Chart.animationService.addAnimation(me, animation, duration, lazy);');
  FPack.add('			} else {');
  FPack.add('				me.draw();');
  FPack.add('');
  FPack.add('				// See https://github.com/chartjs/Chart.js/issues/3781');
  FPack.add('				onComplete(new Chart.Animation({numSteps: 0, chart: me}));');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			return me;');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		draw: function(easingValue) {');
  FPack.add('			var me = this;');
  FPack.add('');
  FPack.add('			me.clear();');
  FPack.add('');
  FPack.add('			if (helpers.isNullOrUndef(easingValue)) {');
  FPack.add('				easingValue = 1;');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			me.transition(easingValue);');
  FPack.add('');
  FPack.add('			if (plugins.notify(me, ''beforeDraw'', [easingValue]) === false) {');
  FPack.add('				return;');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			// Draw all the scales');
  FPack.add('			helpers.each(me.boxes, function(box) {');
  FPack.add('				box.draw(me.chartArea);');
  FPack.add('			}, me);');
  FPack.add('');
  FPack.add('			if (me.scale) {');
  FPack.add('				me.scale.draw();');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			me.drawDatasets(easingValue);');
  FPack.add('			me._drawTooltip(easingValue);');
  FPack.add('');
  FPack.add('			plugins.notify(me, ''afterDraw'', [easingValue]);');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		/**');
  FPack.add('		 * @private');
  FPack.add('		 */');
  FPack.add('		transition: function(easingValue) {');
  FPack.add('			var me = this;');
  FPack.add('');
  FPack.add('			for (var i = 0, ilen = (me.data.datasets || []).length; i < ilen; ++i) {');
  FPack.add('				if (me.isDatasetVisible(i)) {');
  FPack.add('					me.getDatasetMeta(i).controller.transition(easingValue);');
  FPack.add('				}');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			me.tooltip.transition(easingValue);');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		/**');
  FPack.add('		 * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`');
  FPack.add('		 * hook, in which case, plugins will not be called on `afterDatasetsDraw`.');
  FPack.add('		 * @private');
  FPack.add('		 */');
  FPack.add('		drawDatasets: function(easingValue) {');
  FPack.add('			var me = this;');
  FPack.add('');
  FPack.add('			if (plugins.notify(me, ''beforeDatasetsDraw'', [easingValue]) === false) {');
  FPack.add('				return;');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			// Draw datasets reversed to support proper line stacking');
  FPack.add('			for (var i = (me.data.datasets || []).length - 1; i >= 0; --i) {');
  FPack.add('				if (me.isDatasetVisible(i)) {');
  FPack.add('					me.drawDataset(i, easingValue);');
  FPack.add('				}');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			plugins.notify(me, ''afterDatasetsDraw'', [easingValue]);');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		/**');
  FPack.add('		 * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`');
  FPack.add('		 * hook, in which case, plugins will not be called on `afterDatasetDraw`.');
  FPack.add('		 * @private');
  FPack.add('		 */');
  FPack.add('		drawDataset: function(index, easingValue) {');
  FPack.add('			var me = this;');
  FPack.add('			var meta = me.getDatasetMeta(index);');
  FPack.add('			var args = {');
  FPack.add('				meta: meta,');
  FPack.add('				index: index,');
  FPack.add('				easingValue: easingValue');
  FPack.add('			};');
  FPack.add('');
  FPack.add('			if (plugins.notify(me, ''beforeDatasetDraw'', [args]) === false) {');
  FPack.add('				return;');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			meta.controller.draw(easingValue);');
  FPack.add('');
  FPack.add('			plugins.notify(me, ''afterDatasetDraw'', [args]);');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		/**');
  FPack.add('		 * Draws tooltip unless a plugin returns `false` to the `beforeTooltipDraw`');
  FPack.add('		 * hook, in which case, plugins will not be called on `afterTooltipDraw`.');
  FPack.add('		 * @private');
  FPack.add('		 */');
  FPack.add('		_drawTooltip: function(easingValue) {');
  FPack.add('			var me = this;');
  FPack.add('			var tooltip = me.tooltip;');
  FPack.add('			var args = {');
  FPack.add('				tooltip: tooltip,');
  FPack.add('				easingValue: easingValue');
  FPack.add('			};');
  FPack.add('');
  FPack.add('			if (plugins.notify(me, ''beforeTooltipDraw'', [args]) === false) {');
  FPack.add('				return;');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			tooltip.draw();');
  FPack.add('');
  FPack.add('			plugins.notify(me, ''afterTooltipDraw'', [args]);');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		// Get the single element that was clicked on');
  FPack.add('		// @return : An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw');
  FPack.add('		getElementAtEvent: function(e) {');
  FPack.add('			return Interaction.modes.single(this, e);');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		getElementsAtEvent: function(e) {');
  FPack.add('			return Interaction.modes.label(this, e, {intersect: true});');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		getElementsAtXAxis: function(e) {');
  FPack.add('			return Interaction.modes[''x-axis''](this, e, {intersect: true});');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		getElementsAtEventForMode: function(e, mode, options) {');
  FPack.add('			var method = Interaction.modes[mode];');
  FPack.add('			if (typeof method === ''function'') {');
  FPack.add('				return method(this, e, options);');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			return [];');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		getDatasetAtEvent: function(e) {');
  FPack.add('			return Interaction.modes.dataset(this, e, {intersect: true});');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		getDatasetMeta: function(datasetIndex) {');
  FPack.add('			var me = this;');
  FPack.add('			var dataset = me.data.datasets[datasetIndex];');
  FPack.add('			if (!dataset._meta) {');
  FPack.add('				dataset._meta = {};');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			var meta = dataset._meta[me.id];');
  FPack.add('			if (!meta) {');
  FPack.add('				meta = dataset._meta[me.id] = {');
  FPack.add('					type: null,');
  FPack.add('					data: [],');
  FPack.add('					dataset: null,');
  FPack.add('					controller: null,');
  FPack.add('					hidden: null,			// See isDatasetVisible() comment');
  FPack.add('					xAxisID: null,');
  FPack.add('					yAxisID: null');
  FPack.add('				};');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			return meta;');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		getVisibleDatasetCount: function() {');
  FPack.add('			var count = 0;');
end;

procedure TChartbundleJS.ChartbundleJS_28;
begin
  FPack.add('			for (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {');
  FPack.add('				if (this.isDatasetVisible(i)) {');
  FPack.add('					count++;');
  FPack.add('				}');
  FPack.add('			}');
  FPack.add('			return count;');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		isDatasetVisible: function(datasetIndex) {');
  FPack.add('			var meta = this.getDatasetMeta(datasetIndex);');
  FPack.add('');
  FPack.add('			// meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,');
  FPack.add('			// the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.');
  FPack.add('			return typeof meta.hidden === ''boolean'' ? !meta.hidden : !this.data.datasets[datasetIndex].hidden;');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		generateLegend: function() {');
  FPack.add('			return this.options.legendCallback(this);');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		/**');
  FPack.add('		 * @private');
  FPack.add('		 */');
  FPack.add('		destroyDatasetMeta: function(datasetIndex) {');
  FPack.add('			var id = this.id;');
  FPack.add('			var dataset = this.data.datasets[datasetIndex];');
  FPack.add('			var meta = dataset._meta && dataset._meta[id];');
  FPack.add('');
  FPack.add('			if (meta) {');
  FPack.add('				meta.controller.destroy();');
  FPack.add('				delete dataset._meta[id];');
  FPack.add('			}');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		destroy: function() {');
  FPack.add('			var me = this;');
  FPack.add('			var canvas = me.canvas;');
  FPack.add('			var i, ilen;');
  FPack.add('');
  FPack.add('			me.stop();');
  FPack.add('');
  FPack.add('			// dataset controllers need to cleanup associated data');
  FPack.add('			for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {');
  FPack.add('				me.destroyDatasetMeta(i);');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			if (canvas) {');
  FPack.add('				me.unbindEvents();');
  FPack.add('				helpers.canvas.clear(me);');
  FPack.add('				platform.releaseContext(me.ctx);');
  FPack.add('				me.canvas = null;');
  FPack.add('				me.ctx = null;');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			plugins.notify(me, ''destroy'');');
  FPack.add('');
  FPack.add('			delete Chart.instances[me.id];');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		toBase64Image: function() {');
  FPack.add('			return this.canvas.toDataURL.apply(this.canvas, arguments);');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		initToolTip: function() {');
  FPack.add('			var me = this;');
  FPack.add('			me.tooltip = new Chart.Tooltip({');
  FPack.add('				_chart: me,');
  FPack.add('				_chartInstance: me, // deprecated, backward compatibility');
  FPack.add('				_data: me.data,');
  FPack.add('				_options: me.options.tooltips');
  FPack.add('			}, me);');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		/**');
  FPack.add('		 * @private');
  FPack.add('		 */');
  FPack.add('		bindEvents: function() {');
  FPack.add('			var me = this;');
  FPack.add('			var listeners = me._listeners = {};');
  FPack.add('			var listener = function() {');
  FPack.add('				me.eventHandler.apply(me, arguments);');
  FPack.add('			};');
  FPack.add('');
  FPack.add('			helpers.each(me.options.events, function(type) {');
  FPack.add('				platform.addEventListener(me, type, listener);');
  FPack.add('				listeners[type] = listener;');
  FPack.add('			});');
  FPack.add('');
  FPack.add('			// Elements used to detect size change should not be injected for non responsive charts.');
  FPack.add('			// See https://github.com/chartjs/Chart.js/issues/2210');
  FPack.add('			if (me.options.responsive) {');
  FPack.add('				listener = function() {');
  FPack.add('					me.resize();');
  FPack.add('				};');
  FPack.add('');
  FPack.add('				platform.addEventListener(me, ''resize'', listener);');
  FPack.add('				listeners.resize = listener;');
  FPack.add('			}');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		/**');
  FPack.add('		 * @private');
  FPack.add('		 */');
  FPack.add('		unbindEvents: function() {');
  FPack.add('			var me = this;');
  FPack.add('			var listeners = me._listeners;');
  FPack.add('			if (!listeners) {');
  FPack.add('				return;');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			delete me._listeners;');
  FPack.add('			helpers.each(listeners, function(listener, type) {');
  FPack.add('				platform.removeEventListener(me, type, listener);');
  FPack.add('			});');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		updateHoverStyle: function(elements, mode, enabled) {');
  FPack.add('			var method = enabled ? ''setHoverStyle'' : ''removeHoverStyle'';');
  FPack.add('			var element, i, ilen;');
  FPack.add('');
  FPack.add('			for (i = 0, ilen = elements.length; i < ilen; ++i) {');
  FPack.add('				element = elements[i];');
  FPack.add('				if (element) {');
  FPack.add('					this.getDatasetMeta(element._datasetIndex).controller[method](element);');
  FPack.add('				}');
  FPack.add('			}');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		/**');
  FPack.add('		 * @private');
  FPack.add('		 */');
  FPack.add('		eventHandler: function(e) {');
  FPack.add('			var me = this;');
  FPack.add('			var tooltip = me.tooltip;');
  FPack.add('');
  FPack.add('			if (plugins.notify(me, ''beforeEvent'', [e]) === false) {');
  FPack.add('				return;');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			// Buffer any update calls so that renders do not occur');
  FPack.add('			me._bufferedRender = true;');
  FPack.add('			me._bufferedRequest = null;');
  FPack.add('');
  FPack.add('			var changed = me.handleEvent(e);');
  FPack.add('			// for smooth tooltip animations issue #4989');
  FPack.add('			// the tooltip should be the source of change');
  FPack.add('			// Animation check workaround:');
  FPack.add('			// tooltip._start will be null when tooltip isn''t animating');
  FPack.add('			if (tooltip) {');
  FPack.add('				changed = tooltip._start');
  FPack.add('					? tooltip.handleEvent(e)');
  FPack.add('					: changed | tooltip.handleEvent(e);');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			plugins.notify(me, ''afterEvent'', [e]);');
  FPack.add('');
  FPack.add('			var bufferedRequest = me._bufferedRequest;');
  FPack.add('			if (bufferedRequest) {');
  FPack.add('				// If we have an update that was triggered, we need to do a normal render');
  FPack.add('				me.render(bufferedRequest);');
  FPack.add('			} else if (changed && !me.animating) {');
  FPack.add('				// If entering, leaving, or changing elements, animate the change via pivot');
  FPack.add('				me.stop();');
  FPack.add('');
  FPack.add('				// We only need to render at this point. Updating will cause scales to be');
  FPack.add('				// recomputed generating flicker & using more memory than necessary.');
  FPack.add('				me.render(me.options.hover.animationDuration, true);');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			me._bufferedRender = false;');
  FPack.add('			me._bufferedRequest = null;');
  FPack.add('');
  FPack.add('			return me;');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		/**');
  FPack.add('		 * Handle an event');
  FPack.add('		 * @private');
  FPack.add('		 * @param {IEvent} event the event to handle');
  FPack.add('		 * @return {Boolean} true if the chart needs to re-render');
  FPack.add('		 */');
  FPack.add('		handleEvent: function(e) {');
  FPack.add('			var me = this;');
  FPack.add('			var options = me.options || {};');
  FPack.add('			var hoverOptions = options.hover;');
  FPack.add('			var changed = false;');
  FPack.add('');
  FPack.add('			me.lastActive = me.lastActive || [];');
  FPack.add('');
  FPack.add('			// Find Active Elements for hover and tooltips');
  FPack.add('			if (e.type === ''mouseout'') {');
  FPack.add('				me.active = [];');
  FPack.add('			} else {');
  FPack.add('				me.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			// Invoke onHover hook');
  FPack.add('			// Need to call with native event here to not break backwards compatibility');
  FPack.add('			helpers.callback(options.onHover || options.hover.onHover, [e.native, me.active], me);');
  FPack.add('');
  FPack.add('			if (e.type === ''mouseup'' || e.type === ''click'') {');
  FPack.add('				if (options.onClick) {');
  FPack.add('					// Use e.native here for backwards compatibility');
  FPack.add('					options.onClick.call(me, e.native, me.active);');
  FPack.add('				}');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			// Remove styling for last active (even if it may still be active)');
  FPack.add('			if (me.lastActive.length) {');
  FPack.add('				me.updateHoverStyle(me.lastActive, hoverOptions.mode, false);');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			// Built in hover styling');
  FPack.add('			if (me.active.length && hoverOptions.mode) {');
  FPack.add('				me.updateHoverStyle(me.active, hoverOptions.mode, true);');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			changed = !helpers.arrayEquals(me.active, me.lastActive);');
  FPack.add('');
  FPack.add('			// Remember Last Actives');
  FPack.add('			me.lastActive = me.active;');
  FPack.add('');
  FPack.add('			return changed;');
  FPack.add('		}');
  FPack.add('	});');
  FPack.add('');
  FPack.add('	/**');
  FPack.add('	 * Provided for backward compatibility, use Chart instead.');
  FPack.add('	 * @class Chart.Controller');
  FPack.add('	 * @deprecated since version 2.6.0');
  FPack.add('	 * @todo remove at version 3');
  FPack.add('	 * @private');
  FPack.add('	 */');
  FPack.add('	Chart.Controller = Chart;');
  FPack.add('};');
  FPack.add('');
  FPack.add('},{"25":25,"28":28,"30":30,"31":31,"45":45,"48":48}],24:[function(require,module,exports){');
  FPack.add('''use strict'';');
  FPack.add('');
  FPack.add('var helpers = require(45);');
  FPack.add('');
  FPack.add('module.exports = function(Chart) {');
  FPack.add('');
  FPack.add('	var arrayEvents = [''push'', ''pop'', ''shift'', ''splice'', ''unshift''];');
  FPack.add('');
  FPack.add('	/**');
  FPack.add('	 * Hooks the array methods that add or remove values (''push'', pop'', ''shift'', ''splice'',');
  FPack.add('	 * ''unshift'') and notify the listener AFTER the array has been altered. Listeners are');
  FPack.add('	 * called on the ''onData*'' callbacks (e.g. onDataPush, etc.) with same arguments.');
  FPack.add('	 */');
  FPack.add('	function listenArrayEvents(array, listener) {');
  FPack.add('		if (array._chartjs) {');
  FPack.add('			array._chartjs.listeners.push(listener);');
  FPack.add('			return;');
  FPack.add('		}');
  FPack.add('');
  FPack.add('		Object.defineProperty(array, ''_chartjs'', {');
  FPack.add('			configurable: true,');
  FPack.add('			enumerable: false,');
  FPack.add('			value: {');
  FPack.add('				listeners: [listener]');
  FPack.add('			}');
  FPack.add('		});');
  FPack.add('');
  FPack.add('		arrayEvents.forEach(function(key) {');
  FPack.add('			var method = ''onData'' + key.charAt(0).toUpperCase() + key.slice(1);');
  FPack.add('			var base = array[key];');
  FPack.add('');
  FPack.add('			Object.defineProperty(array, key, {');
  FPack.add('				configurable: true,');
  FPack.add('				enumerable: false,');
  FPack.add('				value: function() {');
  FPack.add('					var args = Array.prototype.slice.call(arguments);');
  FPack.add('					var res = base.apply(this, args);');
  FPack.add('');
  FPack.add('					helpers.each(array._chartjs.listeners, function(object) {');
  FPack.add('						if (typeof object[method] === ''function'') {');
  FPack.add('							object[method].apply(object, args);');
  FPack.add('						}');
  FPack.add('					});');
  FPack.add('');
  FPack.add('					return res;');
  FPack.add('				}');
  FPack.add('			});');
  FPack.add('		});');
  FPack.add('	}');
  FPack.add('');
  FPack.add('	/**');
  FPack.add('	 * Removes the given array event listener and cleanup extra attached properties (such as');
  FPack.add('	 * the _chartjs stub and overridden methods) if array doesn''t have any more listeners.');
  FPack.add('	 */');
  FPack.add('	function unlistenArrayEvents(array, listener) {');
  FPack.add('		var stub = array._chartjs;');
  FPack.add('		if (!stub) {');
  FPack.add('			return;');
  FPack.add('		}');
  FPack.add('');
  FPack.add('		var listeners = stub.listeners;');
  FPack.add('		var index = listeners.indexOf(listener);');
  FPack.add('		if (index !== -1) {');
  FPack.add('			listeners.splice(index, 1);');
  FPack.add('		}');
  FPack.add('');
  FPack.add('		if (listeners.length > 0) {');
  FPack.add('			return;');
  FPack.add('		}');
  FPack.add('');
  FPack.add('		arrayEvents.forEach(function(key) {');
  FPack.add('			delete array[key];');
  FPack.add('		});');
  FPack.add('');
  FPack.add('		delete array._chartjs;');
  FPack.add('	}');
  FPack.add('');
  FPack.add('	// Base class for all dataset controllers (line, bar, etc)');
  FPack.add('	Chart.DatasetController = function(chart, datasetIndex) {');
  FPack.add('		this.initialize(chart, datasetIndex);');
  FPack.add('	};');
  FPack.add('');
  FPack.add('	helpers.extend(Chart.DatasetController.prototype, {');
  FPack.add('');
  FPack.add('		/**');
  FPack.add('		 * Element type used to generate a meta dataset (e.g. Chart.element.Line).');
  FPack.add('		 * @type {Chart.core.element}');
  FPack.add('		 */');
  FPack.add('		datasetElementType: null,');
  FPack.add('');
  FPack.add('		/**');
  FPack.add('		 * Element type used to generate a meta data (e.g. Chart.element.Point).');
  FPack.add('		 * @type {Chart.core.element}');
  FPack.add('		 */');
  FPack.add('		dataElementType: null,');
  FPack.add('');
  FPack.add('		initialize: function(chart, datasetIndex) {');
  FPack.add('			var me = this;');
  FPack.add('			me.chart = chart;');
end;

procedure TChartbundleJS.ChartbundleJS_29;
begin
  FPack.add('			me.index = datasetIndex;');
  FPack.add('			me.linkScales();');
  FPack.add('			me.addElements();');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		updateIndex: function(datasetIndex) {');
  FPack.add('			this.index = datasetIndex;');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		linkScales: function() {');
  FPack.add('			var me = this;');
  FPack.add('			var meta = me.getMeta();');
  FPack.add('			var dataset = me.getDataset();');
  FPack.add('');
  FPack.add('			if (meta.xAxisID === null || !(meta.xAxisID in me.chart.scales)) {');
  FPack.add('				meta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;');
  FPack.add('			}');
  FPack.add('			if (meta.yAxisID === null || !(meta.yAxisID in me.chart.scales)) {');
  FPack.add('				meta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;');
  FPack.add('			}');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		getDataset: function() {');
  FPack.add('			return this.chart.data.datasets[this.index];');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		getMeta: function() {');
  FPack.add('			return this.chart.getDatasetMeta(this.index);');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		getScaleForId: function(scaleID) {');
  FPack.add('			return this.chart.scales[scaleID];');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		reset: function() {');
  FPack.add('			this.update(true);');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		/**');
  FPack.add('		 * @private');
  FPack.add('		 */');
  FPack.add('		destroy: function() {');
  FPack.add('			if (this._data) {');
  FPack.add('				unlistenArrayEvents(this._data, this);');
  FPack.add('			}');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		createMetaDataset: function() {');
  FPack.add('			var me = this;');
  FPack.add('			var type = me.datasetElementType;');
  FPack.add('			return type && new type({');
  FPack.add('				_chart: me.chart,');
  FPack.add('				_datasetIndex: me.index');
  FPack.add('			});');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		createMetaData: function(index) {');
  FPack.add('			var me = this;');
  FPack.add('			var type = me.dataElementType;');
  FPack.add('			return type && new type({');
  FPack.add('				_chart: me.chart,');
  FPack.add('				_datasetIndex: me.index,');
  FPack.add('				_index: index');
  FPack.add('			});');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		addElements: function() {');
  FPack.add('			var me = this;');
  FPack.add('			var meta = me.getMeta();');
  FPack.add('			var data = me.getDataset().data || [];');
  FPack.add('			var metaData = meta.data;');
  FPack.add('			var i, ilen;');
  FPack.add('');
  FPack.add('			for (i = 0, ilen = data.length; i < ilen; ++i) {');
  FPack.add('				metaData[i] = metaData[i] || me.createMetaData(i);');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			meta.dataset = meta.dataset || me.createMetaDataset();');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		addElementAndReset: function(index) {');
  FPack.add('			var element = this.createMetaData(index);');
  FPack.add('			this.getMeta().data.splice(index, 0, element);');
  FPack.add('			this.updateElement(element, index, true);');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		buildOrUpdateElements: function() {');
  FPack.add('			var me = this;');
  FPack.add('			var dataset = me.getDataset();');
  FPack.add('			var data = dataset.data || (dataset.data = []);');
  FPack.add('');
  FPack.add('			// In order to correctly handle data addition/deletion animation (an thus simulate');
  FPack.add('			// real-time charts), we need to monitor these data modifications and synchronize');
  FPack.add('			// the internal meta data accordingly.');
  FPack.add('			if (me._data !== data) {');
  FPack.add('				if (me._data) {');
  FPack.add('					// This case happens when the user replaced the data array instance.');
  FPack.add('					unlistenArrayEvents(me._data, me);');
  FPack.add('				}');
  FPack.add('');
  FPack.add('				listenArrayEvents(data, me);');
  FPack.add('				me._data = data;');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			// Re-sync meta data in case the user replaced the data array or if we missed');
  FPack.add('			// any updates and so make sure that we handle number of datapoints changing.');
  FPack.add('			me.resyncElements();');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		update: helpers.noop,');
  FPack.add('');
  FPack.add('		transition: function(easingValue) {');
  FPack.add('			var meta = this.getMeta();');
  FPack.add('			var elements = meta.data || [];');
  FPack.add('			var ilen = elements.length;');
  FPack.add('			var i = 0;');
  FPack.add('');
  FPack.add('			for (; i < ilen; ++i) {');
  FPack.add('				elements[i].transition(easingValue);');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			if (meta.dataset) {');
  FPack.add('				meta.dataset.transition(easingValue);');
  FPack.add('			}');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		draw: function() {');
  FPack.add('			var meta = this.getMeta();');
  FPack.add('			var elements = meta.data || [];');
  FPack.add('			var ilen = elements.length;');
  FPack.add('			var i = 0;');
  FPack.add('');
  FPack.add('			if (meta.dataset) {');
  FPack.add('				meta.dataset.draw();');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			for (; i < ilen; ++i) {');
  FPack.add('				elements[i].draw();');
  FPack.add('			}');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		removeHoverStyle: function(element, elementOpts) {');
  FPack.add('			var dataset = this.chart.data.datasets[element._datasetIndex];');
  FPack.add('			var index = element._index;');
  FPack.add('			var custom = element.custom || {};');
  FPack.add('			var valueOrDefault = helpers.valueAtIndexOrDefault;');
  FPack.add('			var model = element._model;');
  FPack.add('');
  FPack.add('			model.backgroundColor = custom.backgroundColor ? custom.backgroundColor : valueOrDefault(dataset.backgroundColor, index, elementOpts.backgroundColor);');
  FPack.add('			model.borderColor = custom.borderColor ? custom.borderColor : valueOrDefault(dataset.borderColor, index, elementOpts.borderColor);');
  FPack.add('			model.borderWidth = custom.borderWidth ? custom.borderWidth : valueOrDefault(dataset.borderWidth, index, elementOpts.borderWidth);');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		setHoverStyle: function(element) {');
  FPack.add('			var dataset = this.chart.data.datasets[element._datasetIndex];');
  FPack.add('			var index = element._index;');
  FPack.add('			var custom = element.custom || {};');
  FPack.add('			var valueOrDefault = helpers.valueAtIndexOrDefault;');
  FPack.add('			var getHoverColor = helpers.getHoverColor;');
  FPack.add('			var model = element._model;');
  FPack.add('');
  FPack.add('			model.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : valueOrDefault(dataset.hoverBackgroundColor, index, getHoverColor(model.backgroundColor));');
  FPack.add('			model.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : valueOrDefault(dataset.hoverBorderColor, index, getHoverColor(model.borderColor));');
  FPack.add('			model.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : valueOrDefault(dataset.hoverBorderWidth, index, model.borderWidth);');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		/**');
  FPack.add('		 * @private');
  FPack.add('		 */');
  FPack.add('		resyncElements: function() {');
  FPack.add('			var me = this;');
  FPack.add('			var meta = me.getMeta();');
  FPack.add('			var data = me.getDataset().data;');
  FPack.add('			var numMeta = meta.data.length;');
  FPack.add('			var numData = data.length;');
  FPack.add('');
  FPack.add('			if (numData < numMeta) {');
  FPack.add('				meta.data.splice(numData, numMeta - numData);');
  FPack.add('			} else if (numData > numMeta) {');
  FPack.add('				me.insertElements(numMeta, numData - numMeta);');
  FPack.add('			}');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		/**');
  FPack.add('		 * @private');
  FPack.add('		 */');
  FPack.add('		insertElements: function(start, count) {');
  FPack.add('			for (var i = 0; i < count; ++i) {');
  FPack.add('				this.addElementAndReset(start + i);');
  FPack.add('			}');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		/**');
  FPack.add('		 * @private');
  FPack.add('		 */');
  FPack.add('		onDataPush: function() {');
  FPack.add('			this.insertElements(this.getDataset().data.length - 1, arguments.length);');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		/**');
  FPack.add('		 * @private');
  FPack.add('		 */');
  FPack.add('		onDataPop: function() {');
  FPack.add('			this.getMeta().data.pop();');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		/**');
  FPack.add('		 * @private');
  FPack.add('		 */');
  FPack.add('		onDataShift: function() {');
  FPack.add('			this.getMeta().data.shift();');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		/**');
  FPack.add('		 * @private');
  FPack.add('		 */');
  FPack.add('		onDataSplice: function(start, count) {');
  FPack.add('			this.getMeta().data.splice(start, count);');
  FPack.add('			this.insertElements(start, arguments.length - 2);');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		/**');
  FPack.add('		 * @private');
  FPack.add('		 */');
  FPack.add('		onDataUnshift: function() {');
  FPack.add('			this.insertElements(0, arguments.length);');
  FPack.add('		}');
  FPack.add('	});');
  FPack.add('');
  FPack.add('	Chart.DatasetController.extend = helpers.inherits;');
  FPack.add('};');
  FPack.add('');
  FPack.add('},{"45":45}],25:[function(require,module,exports){');
  FPack.add('''use strict'';');
  FPack.add('');
  FPack.add('var helpers = require(45);');
  FPack.add('');
  FPack.add('module.exports = {');
  FPack.add('	/**');
  FPack.add('	 * @private');
  FPack.add('	 */');
  FPack.add('	_set: function(scope, values) {');
  FPack.add('		return helpers.merge(this[scope] || (this[scope] = {}), values);');
  FPack.add('	}');
  FPack.add('};');
  FPack.add('');
  FPack.add('},{"45":45}],26:[function(require,module,exports){');
  FPack.add('''use strict'';');
  FPack.add('');
  FPack.add('var color = require(2);');
  FPack.add('var helpers = require(45);');
  FPack.add('');
  FPack.add('function interpolate(start, view, model, ease) {');
  FPack.add('	var keys = Object.keys(model);');
  FPack.add('	var i, ilen, key, actual, origin, target, type, c0, c1;');
  FPack.add('');
  FPack.add('	for (i = 0, ilen = keys.length; i < ilen; ++i) {');
  FPack.add('		key = keys[i];');
  FPack.add('');
  FPack.add('		target = model[key];');
  FPack.add('');
  FPack.add('		// if a value is added to the model after pivot() has been called, the view');
  FPack.add('		// doesn''t contain it, so let''s initialize the view to the target value.');
  FPack.add('		if (!view.hasOwnProperty(key)) {');
  FPack.add('			view[key] = target;');
  FPack.add('		}');
  FPack.add('');
  FPack.add('		actual = view[key];');
  FPack.add('');
  FPack.add('		if (actual === target || key[0] === ''_'') {');
  FPack.add('			continue;');
  FPack.add('		}');
  FPack.add('');
  FPack.add('		if (!start.hasOwnProperty(key)) {');
  FPack.add('			start[key] = actual;');
  FPack.add('		}');
  FPack.add('');
  FPack.add('		origin = start[key];');
  FPack.add('');
  FPack.add('		type = typeof target;');
  FPack.add('');
  FPack.add('		if (type === typeof origin) {');
  FPack.add('			if (type === ''string'') {');
  FPack.add('				c0 = color(origin);');
  FPack.add('				if (c0.valid) {');
  FPack.add('					c1 = color(target);');
  FPack.add('					if (c1.valid) {');
  FPack.add('						view[key] = c1.mix(c0, ease).rgbString();');
  FPack.add('						continue;');
  FPack.add('					}');
  FPack.add('				}');
  FPack.add('			} else if (type === ''number'' && isFinite(origin) && isFinite(target)) {');
  FPack.add('				view[key] = origin + (target - origin) * ease;');
  FPack.add('				continue;');
  FPack.add('			}');
  FPack.add('		}');
  FPack.add('');
  FPack.add('		view[key] = target;');
  FPack.add('	}');
  FPack.add('}');
  FPack.add('');
  FPack.add('var Element = function(configuration) {');
  FPack.add('	helpers.extend(this, configuration);');
  FPack.add('	this.initialize.apply(this, arguments);');
  FPack.add('};');
  FPack.add('');
  FPack.add('helpers.extend(Element.prototype, {');
  FPack.add('');
  FPack.add('	initialize: function() {');
  FPack.add('		this.hidden = false;');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	pivot: function() {');
  FPack.add('		var me = this;');
  FPack.add('		if (!me._view) {');
  FPack.add('			me._view = helpers.clone(me._model);');
  FPack.add('		}');
  FPack.add('		me._start = {};');
  FPack.add('		return me;');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	transition: function(ease) {');
  FPack.add('		var me = this;');
  FPack.add('		var model = me._model;');
  FPack.add('		var start = me._start;');
  FPack.add('		var view = me._view;');
  FPack.add('');
  FPack.add('		// No animation -> No Transition');
  FPack.add('		if (!model || ease === 1) {');
  FPack.add('			me._view = model;');
  FPack.add('			me._start = null;');
  FPack.add('			return me;');
  FPack.add('		}');
  FPack.add('');
  FPack.add('		if (!view) {');
  FPack.add('			view = me._view = {};');
end;

procedure TChartbundleJS.ChartbundleJS_30;
begin
  FPack.add('		}');
  FPack.add('');
  FPack.add('		if (!start) {');
  FPack.add('			start = me._start = {};');
  FPack.add('		}');
  FPack.add('');
  FPack.add('		interpolate(start, view, model, ease);');
  FPack.add('');
  FPack.add('		return me;');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	tooltipPosition: function() {');
  FPack.add('		return {');
  FPack.add('			x: this._model.x,');
  FPack.add('			y: this._model.y');
  FPack.add('		};');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	hasValue: function() {');
  FPack.add('		return helpers.isNumber(this._model.x) && helpers.isNumber(this._model.y);');
  FPack.add('	}');
  FPack.add('});');
  FPack.add('');
  FPack.add('Element.extend = helpers.inherits;');
  FPack.add('');
  FPack.add('module.exports = Element;');
  FPack.add('');
  FPack.add('},{"2":2,"45":45}],27:[function(require,module,exports){');
  FPack.add('/* global window: false */');
  FPack.add('/* global document: false */');
  FPack.add('''use strict'';');
  FPack.add('');
  FPack.add('var color = require(2);');
  FPack.add('var defaults = require(25);');
  FPack.add('var helpers = require(45);');
  FPack.add('');
  FPack.add('module.exports = function(Chart) {');
  FPack.add('');
  FPack.add('	// -- Basic js utility methods');
  FPack.add('');
  FPack.add('	helpers.configMerge = function(/* objects ... */) {');
  FPack.add('		return helpers.merge(helpers.clone(arguments[0]), [].slice.call(arguments, 1), {');
  FPack.add('			merger: function(key, target, source, options) {');
  FPack.add('				var tval = target[key] || {};');
  FPack.add('				var sval = source[key];');
  FPack.add('');
  FPack.add('				if (key === ''scales'') {');
  FPack.add('					// scale config merging is complex. Add our own function here for that');
  FPack.add('					target[key] = helpers.scaleMerge(tval, sval);');
  FPack.add('				} else if (key === ''scale'') {');
  FPack.add('					// used in polar area & radar charts since there is only one scale');
  FPack.add('					target[key] = helpers.merge(tval, [Chart.scaleService.getScaleDefaults(sval.type), sval]);');
  FPack.add('				} else {');
  FPack.add('					helpers._merger(key, target, source, options);');
  FPack.add('				}');
  FPack.add('			}');
  FPack.add('		});');
  FPack.add('	};');
  FPack.add('');
  FPack.add('	helpers.scaleMerge = function(/* objects ... */) {');
  FPack.add('		return helpers.merge(helpers.clone(arguments[0]), [].slice.call(arguments, 1), {');
  FPack.add('			merger: function(key, target, source, options) {');
  FPack.add('				if (key === ''xAxes'' || key === ''yAxes'') {');
  FPack.add('					var slen = source[key].length;');
  FPack.add('					var i, type, scale;');
  FPack.add('');
  FPack.add('					if (!target[key]) {');
  FPack.add('						target[key] = [];');
  FPack.add('					}');
  FPack.add('');
  FPack.add('					for (i = 0; i < slen; ++i) {');
  FPack.add('						scale = source[key][i];');
  FPack.add('						type = helpers.valueOrDefault(scale.type, key === ''xAxes'' ? ''category'' : ''linear'');');
  FPack.add('');
  FPack.add('						if (i >= target[key].length) {');
  FPack.add('							target[key].push({});');
  FPack.add('						}');
  FPack.add('');
  FPack.add('						if (!target[key][i].type || (scale.type && scale.type !== target[key][i].type)) {');
  FPack.add('							// new/untyped scale or type changed: let''s apply the new defaults');
  FPack.add('							// then merge source scale to correctly overwrite the defaults.');
  FPack.add('							helpers.merge(target[key][i], [Chart.scaleService.getScaleDefaults(type), scale]);');
  FPack.add('						} else {');
  FPack.add('							// scales type are the same');
  FPack.add('							helpers.merge(target[key][i], scale);');
  FPack.add('						}');
  FPack.add('					}');
  FPack.add('				} else {');
  FPack.add('					helpers._merger(key, target, source, options);');
  FPack.add('				}');
  FPack.add('			}');
  FPack.add('		});');
  FPack.add('	};');
  FPack.add('');
  FPack.add('	helpers.where = function(collection, filterCallback) {');
  FPack.add('		if (helpers.isArray(collection) && Array.prototype.filter) {');
  FPack.add('			return collection.filter(filterCallback);');
  FPack.add('		}');
  FPack.add('		var filtered = [];');
  FPack.add('');
  FPack.add('		helpers.each(collection, function(item) {');
  FPack.add('			if (filterCallback(item)) {');
  FPack.add('				filtered.push(item);');
  FPack.add('			}');
  FPack.add('		});');
  FPack.add('');
  FPack.add('		return filtered;');
  FPack.add('	};');
  FPack.add('	helpers.findIndex = Array.prototype.findIndex ?');
  FPack.add('		function(array, callback, scope) {');
  FPack.add('			return array.findIndex(callback, scope);');
  FPack.add('		} :');
  FPack.add('		function(array, callback, scope) {');
  FPack.add('			scope = scope === undefined ? array : scope;');
  FPack.add('			for (var i = 0, ilen = array.length; i < ilen; ++i) {');
  FPack.add('				if (callback.call(scope, array[i], i, array)) {');
  FPack.add('					return i;');
  FPack.add('				}');
  FPack.add('			}');
  FPack.add('			return -1;');
  FPack.add('		};');
  FPack.add('	helpers.findNextWhere = function(arrayToSearch, filterCallback, startIndex) {');
  FPack.add('		// Default to start of the array');
  FPack.add('		if (helpers.isNullOrUndef(startIndex)) {');
  FPack.add('			startIndex = -1;');
  FPack.add('		}');
  FPack.add('		for (var i = startIndex + 1; i < arrayToSearch.length; i++) {');
  FPack.add('			var currentItem = arrayToSearch[i];');
  FPack.add('			if (filterCallback(currentItem)) {');
  FPack.add('				return currentItem;');
  FPack.add('			}');
  FPack.add('		}');
  FPack.add('	};');
  FPack.add('	helpers.findPreviousWhere = function(arrayToSearch, filterCallback, startIndex) {');
  FPack.add('		// Default to end of the array');
  FPack.add('		if (helpers.isNullOrUndef(startIndex)) {');
  FPack.add('			startIndex = arrayToSearch.length;');
  FPack.add('		}');
  FPack.add('		for (var i = startIndex - 1; i >= 0; i--) {');
  FPack.add('			var currentItem = arrayToSearch[i];');
  FPack.add('			if (filterCallback(currentItem)) {');
  FPack.add('				return currentItem;');
  FPack.add('			}');
  FPack.add('		}');
  FPack.add('	};');
  FPack.add('');
  FPack.add('	// -- Math methods');
  FPack.add('	helpers.isNumber = function(n) {');
  FPack.add('		return !isNaN(parseFloat(n)) && isFinite(n);');
  FPack.add('	};');
  FPack.add('	helpers.almostEquals = function(x, y, epsilon) {');
  FPack.add('		return Math.abs(x - y) < epsilon;');
  FPack.add('	};');
  FPack.add('	helpers.almostWhole = function(x, epsilon) {');
  FPack.add('		var rounded = Math.round(x);');
  FPack.add('		return (((rounded - epsilon) < x) && ((rounded + epsilon) > x));');
  FPack.add('	};');
  FPack.add('	helpers.max = function(array) {');
  FPack.add('		return array.reduce(function(max, value) {');
  FPack.add('			if (!isNaN(value)) {');
  FPack.add('				return Math.max(max, value);');
  FPack.add('			}');
  FPack.add('			return max;');
  FPack.add('		}, Number.NEGATIVE_INFINITY);');
  FPack.add('	};');
  FPack.add('	helpers.min = function(array) {');
  FPack.add('		return array.reduce(function(min, value) {');
  FPack.add('			if (!isNaN(value)) {');
  FPack.add('				return Math.min(min, value);');
  FPack.add('			}');
  FPack.add('			return min;');
  FPack.add('		}, Number.POSITIVE_INFINITY);');
  FPack.add('	};');
  FPack.add('	helpers.sign = Math.sign ?');
  FPack.add('		function(x) {');
  FPack.add('			return Math.sign(x);');
  FPack.add('		} :');
  FPack.add('		function(x) {');
  FPack.add('			x = +x; // convert to a number');
  FPack.add('			if (x === 0 || isNaN(x)) {');
  FPack.add('				return x;');
  FPack.add('			}');
  FPack.add('			return x > 0 ? 1 : -1;');
  FPack.add('		};');
  FPack.add('	helpers.log10 = Math.log10 ?');
  FPack.add('		function(x) {');
  FPack.add('			return Math.log10(x);');
  FPack.add('		} :');
  FPack.add('		function(x) {');
  FPack.add('			var exponent = Math.log(x) * Math.LOG10E; // Math.LOG10E = 1 / Math.LN10.');
  FPack.add('			// Check for whole powers of 10,');
  FPack.add('			// which due to floating point rounding error should be corrected.');
  FPack.add('			var powerOf10 = Math.round(exponent);');
  FPack.add('			var isPowerOf10 = x === Math.pow(10, powerOf10);');
  FPack.add('');
  FPack.add('			return isPowerOf10 ? powerOf10 : exponent;');
  FPack.add('		};');
  FPack.add('	helpers.toRadians = function(degrees) {');
  FPack.add('		return degrees * (Math.PI / 180);');
  FPack.add('	};');
  FPack.add('	helpers.toDegrees = function(radians) {');
  FPack.add('		return radians * (180 / Math.PI);');
  FPack.add('	};');
  FPack.add('	// Gets the angle from vertical upright to the point about a centre.');
  FPack.add('	helpers.getAngleFromPoint = function(centrePoint, anglePoint) {');
  FPack.add('		var distanceFromXCenter = anglePoint.x - centrePoint.x;');
  FPack.add('		var distanceFromYCenter = anglePoint.y - centrePoint.y;');
  FPack.add('		var radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);');
  FPack.add('');
  FPack.add('		var angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);');
  FPack.add('');
  FPack.add('		if (angle < (-0.5 * Math.PI)) {');
  FPack.add('			angle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]');
  FPack.add('		}');
  FPack.add('');
  FPack.add('		return {');
  FPack.add('			angle: angle,');
  FPack.add('			distance: radialDistanceFromCenter');
  FPack.add('		};');
  FPack.add('	};');
  FPack.add('	helpers.distanceBetweenPoints = function(pt1, pt2) {');
  FPack.add('		return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));');
  FPack.add('	};');
  FPack.add('	helpers.aliasPixel = function(pixelWidth) {');
  FPack.add('		return (pixelWidth % 2 === 0) ? 0 : 0.5;');
  FPack.add('	};');
  FPack.add('	helpers.splineCurve = function(firstPoint, middlePoint, afterPoint, t) {');
  FPack.add('		// Props to Rob Spencer at scaled innovation for his post on splining between points');
  FPack.add('		// http://scaledinnovation.com/analytics/splines/aboutSplines.html');
  FPack.add('');
  FPack.add('		// This function must also respect "skipped" points');
  FPack.add('');
  FPack.add('		var previous = firstPoint.skip ? middlePoint : firstPoint;');
  FPack.add('		var current = middlePoint;');
  FPack.add('		var next = afterPoint.skip ? middlePoint : afterPoint;');
  FPack.add('');
  FPack.add('		var d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));');
  FPack.add('		var d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));');
  FPack.add('');
  FPack.add('		var s01 = d01 / (d01 + d12);');
  FPack.add('		var s12 = d12 / (d01 + d12);');
  FPack.add('');
  FPack.add('		// If all points are the same, s01 & s02 will be inf');
  FPack.add('		s01 = isNaN(s01) ? 0 : s01;');
  FPack.add('		s12 = isNaN(s12) ? 0 : s12;');
  FPack.add('');
  FPack.add('		var fa = t * s01; // scaling factor for triangle Ta');
  FPack.add('		var fb = t * s12;');
  FPack.add('');
  FPack.add('		return {');
  FPack.add('			previous: {');
  FPack.add('				x: current.x - fa * (next.x - previous.x),');
  FPack.add('				y: current.y - fa * (next.y - previous.y)');
  FPack.add('			},');
  FPack.add('			next: {');
  FPack.add('				x: current.x + fb * (next.x - previous.x),');
  FPack.add('				y: current.y + fb * (next.y - previous.y)');
  FPack.add('			}');
  FPack.add('		};');
  FPack.add('	};');
  FPack.add('	helpers.EPSILON = Number.EPSILON || 1e-14;');
  FPack.add('	helpers.splineCurveMonotone = function(points) {');
  FPack.add('		// This function calculates B껩er control points in a similar way than |splineCurve|,');
  FPack.add('		// but preserves monotonicity of the provided data and ensures no local extremums are added');
  FPack.add('		// between the dataset discrete points due to the interpolation.');
  FPack.add('		// See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation');
  FPack.add('');
  FPack.add('		var pointsWithTangents = (points || []).map(function(point) {');
  FPack.add('			return {');
  FPack.add('				model: point._model,');
  FPack.add('				deltaK: 0,');
  FPack.add('				mK: 0');
  FPack.add('			};');
  FPack.add('		});');
  FPack.add('');
  FPack.add('		// Calculate slopes (deltaK) and initialize tangents (mK)');
  FPack.add('		var pointsLen = pointsWithTangents.length;');
  FPack.add('		var i, pointBefore, pointCurrent, pointAfter;');
  FPack.add('		for (i = 0; i < pointsLen; ++i) {');
  FPack.add('			pointCurrent = pointsWithTangents[i];');
  FPack.add('			if (pointCurrent.model.skip) {');
  FPack.add('				continue;');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;');
  FPack.add('			pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;');
  FPack.add('			if (pointAfter && !pointAfter.model.skip) {');
  FPack.add('				var slopeDeltaX = (pointAfter.model.x - pointCurrent.model.x);');
  FPack.add('');
  FPack.add('				// In the case of two points that appear at the same x pixel, slopeDeltaX is 0');
  FPack.add('				pointCurrent.deltaK = slopeDeltaX !== 0 ? (pointAfter.model.y - pointCurrent.model.y) / slopeDeltaX : 0;');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			if (!pointBefore || pointBefore.model.skip) {');
  FPack.add('				pointCurrent.mK = pointCurrent.deltaK;');
  FPack.add('			} else if (!pointAfter || pointAfter.model.skip) {');
  FPack.add('				pointCurrent.mK = pointBefore.deltaK;');
  FPack.add('			} else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {');
  FPack.add('				pointCurrent.mK = 0;');
  FPack.add('			} else {');
  FPack.add('				pointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;');
  FPack.add('			}');
  FPack.add('		}');
  FPack.add('');
  FPack.add('		// Adjust tangents to ensure monotonic properties');
  FPack.add('		var alphaK, betaK, tauK, squaredMagnitude;');
  FPack.add('		for (i = 0; i < pointsLen - 1; ++i) {');
  FPack.add('			pointCurrent = pointsWithTangents[i];');
  FPack.add('			pointAfter = pointsWithTangents[i + 1];');
  FPack.add('			if (pointCurrent.model.skip || pointAfter.model.skip) {');
  FPack.add('				continue;');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			if (helpers.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {');
  FPack.add('				pointCurrent.mK = pointAfter.mK = 0;');
  FPack.add('				continue;');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			alphaK = pointCurrent.mK / pointCurrent.deltaK;');
  FPack.add('			betaK = pointAfter.mK / pointCurrent.deltaK;');
  FPack.add('			squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);');
  FPack.add('			if (squaredMagnitude <= 9) {');
  FPack.add('				continue;');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			tauK = 3 / Math.sqrt(squaredMagnitude);');
  FPack.add('			pointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;');
  FPack.add('			pointAfter.mK = betaK * tauK * pointCurrent.deltaK;');
  FPack.add('		}');
  FPack.add('');
  FPack.add('		// Compute control points');
  FPack.add('		var deltaX;');
  FPack.add('		for (i = 0; i < pointsLen; ++i) {');
  FPack.add('			pointCurrent = pointsWithTangents[i];');
  FPack.add('			if (pointCurrent.model.skip) {');
  FPack.add('				continue;');
end;

procedure TChartbundleJS.ChartbundleJS_31;
begin
  FPack.add('			}');
  FPack.add('');
  FPack.add('			pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;');
  FPack.add('			pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;');
  FPack.add('			if (pointBefore && !pointBefore.model.skip) {');
  FPack.add('				deltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;');
  FPack.add('				pointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;');
  FPack.add('				pointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;');
  FPack.add('			}');
  FPack.add('			if (pointAfter && !pointAfter.model.skip) {');
  FPack.add('				deltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;');
  FPack.add('				pointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;');
  FPack.add('				pointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;');
  FPack.add('			}');
  FPack.add('		}');
  FPack.add('	};');
  FPack.add('	helpers.nextItem = function(collection, index, loop) {');
  FPack.add('		if (loop) {');
  FPack.add('			return index >= collection.length - 1 ? collection[0] : collection[index + 1];');
  FPack.add('		}');
  FPack.add('		return index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];');
  FPack.add('	};');
  FPack.add('	helpers.previousItem = function(collection, index, loop) {');
  FPack.add('		if (loop) {');
  FPack.add('			return index <= 0 ? collection[collection.length - 1] : collection[index - 1];');
  FPack.add('		}');
  FPack.add('		return index <= 0 ? collection[0] : collection[index - 1];');
  FPack.add('	};');
  FPack.add('	// Implementation of the nice number algorithm used in determining where axis labels will go');
  FPack.add('	helpers.niceNum = function(range, round) {');
  FPack.add('		var exponent = Math.floor(helpers.log10(range));');
  FPack.add('		var fraction = range / Math.pow(10, exponent);');
  FPack.add('		var niceFraction;');
  FPack.add('');
  FPack.add('		if (round) {');
  FPack.add('			if (fraction < 1.5) {');
  FPack.add('				niceFraction = 1;');
  FPack.add('			} else if (fraction < 3) {');
  FPack.add('				niceFraction = 2;');
  FPack.add('			} else if (fraction < 7) {');
  FPack.add('				niceFraction = 5;');
  FPack.add('			} else {');
  FPack.add('				niceFraction = 10;');
  FPack.add('			}');
  FPack.add('		} else if (fraction <= 1.0) {');
  FPack.add('			niceFraction = 1;');
  FPack.add('		} else if (fraction <= 2) {');
  FPack.add('			niceFraction = 2;');
  FPack.add('		} else if (fraction <= 5) {');
  FPack.add('			niceFraction = 5;');
  FPack.add('		} else {');
  FPack.add('			niceFraction = 10;');
  FPack.add('		}');
  FPack.add('');
  FPack.add('		return niceFraction * Math.pow(10, exponent);');
  FPack.add('	};');
  FPack.add('	// Request animation polyfill - http://www.paulirish.com/2011/requestanimationframe-for-smart-animating/');
  FPack.add('	helpers.requestAnimFrame = (function() {');
  FPack.add('		if (typeof window === ''undefined'') {');
  FPack.add('			return function(callback) {');
  FPack.add('				callback();');
  FPack.add('			};');
  FPack.add('		}');
  FPack.add('		return window.requestAnimationFrame ||');
  FPack.add('			window.webkitRequestAnimationFrame ||');
  FPack.add('			window.mozRequestAnimationFrame ||');
  FPack.add('			window.oRequestAnimationFrame ||');
  FPack.add('			window.msRequestAnimationFrame ||');
  FPack.add('			function(callback) {');
  FPack.add('				return window.setTimeout(callback, 1000 / 60);');
  FPack.add('			};');
  FPack.add('	}());');
  FPack.add('	// -- DOM methods');
  FPack.add('	helpers.getRelativePosition = function(evt, chart) {');
  FPack.add('		var mouseX, mouseY;');
  FPack.add('		var e = evt.originalEvent || evt;');
  FPack.add('		var canvas = evt.currentTarget || evt.srcElement;');
  FPack.add('		var boundingRect = canvas.getBoundingClientRect();');
  FPack.add('');
  FPack.add('		var touches = e.touches;');
  FPack.add('		if (touches && touches.length > 0) {');
  FPack.add('			mouseX = touches[0].clientX;');
  FPack.add('			mouseY = touches[0].clientY;');
  FPack.add('');
  FPack.add('		} else {');
  FPack.add('			mouseX = e.clientX;');
  FPack.add('			mouseY = e.clientY;');
  FPack.add('		}');
  FPack.add('');
  FPack.add('		// Scale mouse coordinates into canvas coordinates');
  FPack.add('		// by following the pattern laid out by ''jerryj'' in the comments of');
  FPack.add('		// http://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/');
  FPack.add('		var paddingLeft = parseFloat(helpers.getStyle(canvas, ''padding-left''));');
  FPack.add('		var paddingTop = parseFloat(helpers.getStyle(canvas, ''padding-top''));');
  FPack.add('		var paddingRight = parseFloat(helpers.getStyle(canvas, ''padding-right''));');
  FPack.add('		var paddingBottom = parseFloat(helpers.getStyle(canvas, ''padding-bottom''));');
  FPack.add('		var width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;');
  FPack.add('		var height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom;');
  FPack.add('');
  FPack.add('		// We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However');
  FPack.add('		// the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here');
  FPack.add('		mouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / (width) * canvas.width / chart.currentDevicePixelRatio);');
  FPack.add('		mouseY = Math.round((mouseY - boundingRect.top - paddingTop) / (height) * canvas.height / chart.currentDevicePixelRatio);');
  FPack.add('');
  FPack.add('		return {');
  FPack.add('			x: mouseX,');
  FPack.add('			y: mouseY');
  FPack.add('		};');
  FPack.add('');
  FPack.add('	};');
  FPack.add('');
  FPack.add('	// Private helper function to convert max-width/max-height values that may be percentages into a number');
  FPack.add('	function parseMaxStyle(styleValue, node, parentProperty) {');
  FPack.add('		var valueInPixels;');
  FPack.add('		if (typeof styleValue === ''string'') {');
  FPack.add('			valueInPixels = parseInt(styleValue, 10);');
  FPack.add('');
  FPack.add('			if (styleValue.indexOf(''%'') !== -1) {');
  FPack.add('				// percentage * size in dimension');
  FPack.add('				valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];');
  FPack.add('			}');
  FPack.add('		} else {');
  FPack.add('			valueInPixels = styleValue;');
  FPack.add('		}');
  FPack.add('');
  FPack.add('		return valueInPixels;');
  FPack.add('	}');
  FPack.add('');
  FPack.add('	/**');
  FPack.add('	 * Returns if the given value contains an effective constraint.');
  FPack.add('	 * @private');
  FPack.add('	 */');
  FPack.add('	function isConstrainedValue(value) {');
  FPack.add('		return value !== undefined && value !== null && value !== ''none'';');
  FPack.add('	}');
  FPack.add('');
  FPack.add('	// Private helper to get a constraint dimension');
  FPack.add('	// @param domNode : the node to check the constraint on');
  FPack.add('	// @param maxStyle : the style that defines the maximum for the direction we are using (maxWidth / maxHeight)');
  FPack.add('	// @param percentageProperty : property of parent to use when calculating width as a percentage');
  FPack.add('	// @see http://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser');
  FPack.add('	function getConstraintDimension(domNode, maxStyle, percentageProperty) {');
  FPack.add('		var view = document.defaultView;');
  FPack.add('		var parentNode = domNode.parentNode;');
  FPack.add('		var constrainedNode = view.getComputedStyle(domNode)[maxStyle];');
  FPack.add('		var constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];');
  FPack.add('		var hasCNode = isConstrainedValue(constrainedNode);');
  FPack.add('		var hasCContainer = isConstrainedValue(constrainedContainer);');
  FPack.add('		var infinity = Number.POSITIVE_INFINITY;');
  FPack.add('');
  FPack.add('		if (hasCNode || hasCContainer) {');
  FPack.add('			return Math.min(');
  FPack.add('				hasCNode ? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity,');
  FPack.add('				hasCContainer ? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);');
  FPack.add('		}');
  FPack.add('');
  FPack.add('		return ''none'';');
  FPack.add('	}');
  FPack.add('	// returns Number or undefined if no constraint');
  FPack.add('	helpers.getConstraintWidth = function(domNode) {');
  FPack.add('		return getConstraintDimension(domNode, ''max-width'', ''clientWidth'');');
  FPack.add('	};');
  FPack.add('	// returns Number or undefined if no constraint');
  FPack.add('	helpers.getConstraintHeight = function(domNode) {');
  FPack.add('		return getConstraintDimension(domNode, ''max-height'', ''clientHeight'');');
  FPack.add('	};');
  FPack.add('	helpers.getMaximumWidth = function(domNode) {');
  FPack.add('		var container = domNode.parentNode;');
  FPack.add('		if (!container) {');
  FPack.add('			return domNode.clientWidth;');
  FPack.add('		}');
  FPack.add('');
  FPack.add('		var paddingLeft = parseInt(helpers.getStyle(container, ''padding-left''), 10);');
  FPack.add('		var paddingRight = parseInt(helpers.getStyle(container, ''padding-right''), 10);');
  FPack.add('		var w = container.clientWidth - paddingLeft - paddingRight;');
  FPack.add('		var cw = helpers.getConstraintWidth(domNode);');
  FPack.add('		return isNaN(cw) ? w : Math.min(w, cw);');
  FPack.add('	};');
  FPack.add('	helpers.getMaximumHeight = function(domNode) {');
  FPack.add('		var container = domNode.parentNode;');
  FPack.add('		if (!container) {');
  FPack.add('			return domNode.clientHeight;');
  FPack.add('		}');
  FPack.add('');
  FPack.add('		var paddingTop = parseInt(helpers.getStyle(container, ''padding-top''), 10);');
  FPack.add('		var paddingBottom = parseInt(helpers.getStyle(container, ''padding-bottom''), 10);');
  FPack.add('		var h = container.clientHeight - paddingTop - paddingBottom;');
  FPack.add('		var ch = helpers.getConstraintHeight(domNode);');
  FPack.add('		return isNaN(ch) ? h : Math.min(h, ch);');
  FPack.add('	};');
  FPack.add('	helpers.getStyle = function(el, property) {');
  FPack.add('		return el.currentStyle ?');
  FPack.add('			el.currentStyle[property] :');
  FPack.add('			document.defaultView.getComputedStyle(el, null).getPropertyValue(property);');
  FPack.add('	};');
  FPack.add('	helpers.retinaScale = function(chart, forceRatio) {');
  FPack.add('		var pixelRatio = chart.currentDevicePixelRatio = forceRatio || window.devicePixelRatio || 1;');
  FPack.add('		if (pixelRatio === 1) {');
  FPack.add('			return;');
  FPack.add('		}');
  FPack.add('');
  FPack.add('		var canvas = chart.canvas;');
  FPack.add('		var height = chart.height;');
  FPack.add('		var width = chart.width;');
  FPack.add('');
  FPack.add('		canvas.height = height * pixelRatio;');
  FPack.add('		canvas.width = width * pixelRatio;');
  FPack.add('		chart.ctx.scale(pixelRatio, pixelRatio);');
  FPack.add('');
  FPack.add('		// If no style has been set on the canvas, the render size is used as display size,');
  FPack.add('		// making the chart visually bigger, so let''s enforce it to the "correct" values.');
  FPack.add('		// See https://github.com/chartjs/Chart.js/issues/3575');
  FPack.add('		if (!canvas.style.height && !canvas.style.width) {');
  FPack.add('			canvas.style.height = height + ''px'';');
  FPack.add('			canvas.style.width = width + ''px'';');
  FPack.add('		}');
  FPack.add('	};');
  FPack.add('	// -- Canvas methods');
  FPack.add('	helpers.fontString = function(pixelSize, fontStyle, fontFamily) {');
  FPack.add('		return fontStyle + '' '' + pixelSize + ''px '' + fontFamily;');
  FPack.add('	};');
  FPack.add('	helpers.longestText = function(ctx, font, arrayOfThings, cache) {');
  FPack.add('		cache = cache || {};');
  FPack.add('		var data = cache.data = cache.data || {};');
  FPack.add('		var gc = cache.garbageCollect = cache.garbageCollect || [];');
  FPack.add('');
  FPack.add('		if (cache.font !== font) {');
  FPack.add('			data = cache.data = {};');
  FPack.add('			gc = cache.garbageCollect = [];');
  FPack.add('			cache.font = font;');
  FPack.add('		}');
  FPack.add('');
  FPack.add('		ctx.font = font;');
  FPack.add('		var longest = 0;');
  FPack.add('		helpers.each(arrayOfThings, function(thing) {');
  FPack.add('			// Undefined strings and arrays should not be measured');
  FPack.add('			if (thing !== undefined && thing !== null && helpers.isArray(thing) !== true) {');
  FPack.add('				longest = helpers.measureText(ctx, data, gc, longest, thing);');
  FPack.add('			} else if (helpers.isArray(thing)) {');
  FPack.add('				// if it is an array lets measure each element');
  FPack.add('				// to do maybe simplify this function a bit so we can do this more recursively?');
  FPack.add('				helpers.each(thing, function(nestedThing) {');
  FPack.add('					// Undefined strings and arrays should not be measured');
  FPack.add('					if (nestedThing !== undefined && nestedThing !== null && !helpers.isArray(nestedThing)) {');
  FPack.add('						longest = helpers.measureText(ctx, data, gc, longest, nestedThing);');
  FPack.add('					}');
  FPack.add('				});');
  FPack.add('			}');
  FPack.add('		});');
  FPack.add('');
  FPack.add('		var gcLen = gc.length / 2;');
  FPack.add('		if (gcLen > arrayOfThings.length) {');
  FPack.add('			for (var i = 0; i < gcLen; i++) {');
  FPack.add('				delete data[gc[i]];');
  FPack.add('			}');
  FPack.add('			gc.splice(0, gcLen);');
  FPack.add('		}');
  FPack.add('		return longest;');
  FPack.add('	};');
  FPack.add('	helpers.measureText = function(ctx, data, gc, longest, string) {');
  FPack.add('		var textWidth = data[string];');
  FPack.add('		if (!textWidth) {');
  FPack.add('			textWidth = data[string] = ctx.measureText(string).width;');
  FPack.add('			gc.push(string);');
  FPack.add('		}');
  FPack.add('		if (textWidth > longest) {');
  FPack.add('			longest = textWidth;');
  FPack.add('		}');
  FPack.add('		return longest;');
  FPack.add('	};');
  FPack.add('	helpers.numberOfLabelLines = function(arrayOfThings) {');
  FPack.add('		var numberOfLines = 1;');
  FPack.add('		helpers.each(arrayOfThings, function(thing) {');
  FPack.add('			if (helpers.isArray(thing)) {');
  FPack.add('				if (thing.length > numberOfLines) {');
  FPack.add('					numberOfLines = thing.length;');
  FPack.add('				}');
  FPack.add('			}');
  FPack.add('		});');
  FPack.add('		return numberOfLines;');
  FPack.add('	};');
  FPack.add('');
  FPack.add('	helpers.color = !color ?');
  FPack.add('		function(value) {');
  FPack.add('			console.error(''Color.js not found!'');');
  FPack.add('			return value;');
  FPack.add('		} :');
  FPack.add('		function(value) {');
  FPack.add('			/* global CanvasGradient */');
  FPack.add('			if (value instanceof CanvasGradient) {');
  FPack.add('				value = defaults.global.defaultColor;');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			return color(value);');
  FPack.add('		};');
  FPack.add('');
  FPack.add('	helpers.getHoverColor = function(colorValue) {');
  FPack.add('		/* global CanvasPattern */');
  FPack.add('		return (colorValue instanceof CanvasPattern) ?');
  FPack.add('			colorValue :');
  FPack.add('			helpers.color(colorValue).saturate(0.5).darken(0.1).rgbString();');
  FPack.add('	};');
  FPack.add('};');
  FPack.add('');
  FPack.add('},{"2":2,"25":25,"45":45}],28:[function(require,module,exports){');
  FPack.add('''use strict'';');
  FPack.add('');
  FPack.add('var helpers = require(45);');
  FPack.add('');
  FPack.add('/**');
  FPack.add(' * Helper function to get relative position for an event');
  FPack.add(' * @param {Event|IEvent} event - The event to get the position for');
  FPack.add(' * @param {Chart} chart - The chart');
  FPack.add(' * @returns {Point} the event position');
  FPack.add(' */');
  FPack.add('function getRelativePosition(e, chart) {');
  FPack.add('	if (e.native) {');
  FPack.add('		return {');
  FPack.add('			x: e.x,');
  FPack.add('			y: e.y');
  FPack.add('		};');
  FPack.add('	}');
  FPack.add('');
  FPack.add('	return helpers.getRelativePosition(e, chart);');
  FPack.add('}');
  FPack.add('');
  FPack.add('/**');
  FPack.add(' * Helper function to traverse all of the visible elements in the chart');
  FPack.add(' * @param chart {chart} the chart');
  FPack.add(' * @param handler {Function} the callback to execute for each visible item');
  FPack.add(' */');
  FPack.add('function parseVisibleItems(chart, handler) {');
  FPack.add('	var datasets = chart.data.datasets;');
  FPack.add('	var meta, i, j, ilen, jlen;');
  FPack.add('');
  FPack.add('	for (i = 0, ilen = datasets.length; i < ilen; ++i) {');
end;

procedure TChartbundleJS.ChartbundleJS_32;
begin
  FPack.add('		if (!chart.isDatasetVisible(i)) {');
  FPack.add('			continue;');
  FPack.add('		}');
  FPack.add('');
  FPack.add('		meta = chart.getDatasetMeta(i);');
  FPack.add('		for (j = 0, jlen = meta.data.length; j < jlen; ++j) {');
  FPack.add('			var element = meta.data[j];');
  FPack.add('			if (!element._view.skip) {');
  FPack.add('				handler(element);');
  FPack.add('			}');
  FPack.add('		}');
  FPack.add('	}');
  FPack.add('}');
  FPack.add('');
  FPack.add('/**');
  FPack.add(' * Helper function to get the items that intersect the event position');
  FPack.add(' * @param items {ChartElement[]} elements to filter');
  FPack.add(' * @param position {Point} the point to be nearest to');
  FPack.add(' * @return {ChartElement[]} the nearest items');
  FPack.add(' */');
  FPack.add('function getIntersectItems(chart, position) {');
  FPack.add('	var elements = [];');
  FPack.add('');
  FPack.add('	parseVisibleItems(chart, function(element) {');
  FPack.add('		if (element.inRange(position.x, position.y)) {');
  FPack.add('			elements.push(element);');
  FPack.add('		}');
  FPack.add('	});');
  FPack.add('');
  FPack.add('	return elements;');
  FPack.add('}');
  FPack.add('');
  FPack.add('/**');
  FPack.add(' * Helper function to get the items nearest to the event position considering all visible items in teh chart');
  FPack.add(' * @param chart {Chart} the chart to look at elements from');
  FPack.add(' * @param position {Point} the point to be nearest to');
  FPack.add(' * @param intersect {Boolean} if true, only consider items that intersect the position');
  FPack.add(' * @param distanceMetric {Function} function to provide the distance between points');
  FPack.add(' * @return {ChartElement[]} the nearest items');
  FPack.add(' */');
  FPack.add('function getNearestItems(chart, position, intersect, distanceMetric) {');
  FPack.add('	var minDistance = Number.POSITIVE_INFINITY;');
  FPack.add('	var nearestItems = [];');
  FPack.add('');
  FPack.add('	parseVisibleItems(chart, function(element) {');
  FPack.add('		if (intersect && !element.inRange(position.x, position.y)) {');
  FPack.add('			return;');
  FPack.add('		}');
  FPack.add('');
  FPack.add('		var center = element.getCenterPoint();');
  FPack.add('		var distance = distanceMetric(position, center);');
  FPack.add('');
  FPack.add('		if (distance < minDistance) {');
  FPack.add('			nearestItems = [element];');
  FPack.add('			minDistance = distance;');
  FPack.add('		} else if (distance === minDistance) {');
  FPack.add('			// Can have multiple items at the same distance in which case we sort by size');
  FPack.add('			nearestItems.push(element);');
  FPack.add('		}');
  FPack.add('	});');
  FPack.add('');
  FPack.add('	return nearestItems;');
  FPack.add('}');
  FPack.add('');
  FPack.add('/**');
  FPack.add(' * Get a distance metric function for two points based on the');
  FPack.add(' * axis mode setting');
  FPack.add(' * @param {String} axis the axis mode. x|y|xy');
  FPack.add(' */');
  FPack.add('function getDistanceMetricForAxis(axis) {');
  FPack.add('	var useX = axis.indexOf(''x'') !== -1;');
  FPack.add('	var useY = axis.indexOf(''y'') !== -1;');
  FPack.add('');
  FPack.add('	return function(pt1, pt2) {');
  FPack.add('		var deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;');
  FPack.add('		var deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;');
  FPack.add('		return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));');
  FPack.add('	};');
  FPack.add('}');
  FPack.add('');
  FPack.add('function indexMode(chart, e, options) {');
  FPack.add('	var position = getRelativePosition(e, chart);');
  FPack.add('	// Default axis for index mode is ''x'' to match old behaviour');
  FPack.add('	options.axis = options.axis || ''x'';');
  FPack.add('	var distanceMetric = getDistanceMetricForAxis(options.axis);');
  FPack.add('	var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);');
  FPack.add('	var elements = [];');
  FPack.add('');
  FPack.add('	if (!items.length) {');
  FPack.add('		return [];');
  FPack.add('	}');
  FPack.add('');
  FPack.add('	chart.data.datasets.forEach(function(dataset, datasetIndex) {');
  FPack.add('		if (chart.isDatasetVisible(datasetIndex)) {');
  FPack.add('			var meta = chart.getDatasetMeta(datasetIndex);');
  FPack.add('			var element = meta.data[items[0]._index];');
  FPack.add('');
  FPack.add('			// don''t count items that are skipped (null data)');
  FPack.add('			if (element && !element._view.skip) {');
  FPack.add('				elements.push(element);');
  FPack.add('			}');
  FPack.add('		}');
  FPack.add('	});');
  FPack.add('');
  FPack.add('	return elements;');
  FPack.add('}');
  FPack.add('');
  FPack.add('/**');
  FPack.add(' * @interface IInteractionOptions');
  FPack.add(' */');
  FPack.add('/**');
  FPack.add(' * If true, only consider items that intersect the point');
  FPack.add(' * @name IInterfaceOptions#boolean');
  FPack.add(' * @type Boolean');
  FPack.add(' */');
  FPack.add('');
  FPack.add('/**');
  FPack.add(' * Contains interaction related functions');
  FPack.add(' * @namespace Chart.Interaction');
  FPack.add(' */');
  FPack.add('module.exports = {');
  FPack.add('	// Helper function for different modes');
  FPack.add('	modes: {');
  FPack.add('		single: function(chart, e) {');
  FPack.add('			var position = getRelativePosition(e, chart);');
  FPack.add('			var elements = [];');
  FPack.add('');
  FPack.add('			parseVisibleItems(chart, function(element) {');
  FPack.add('				if (element.inRange(position.x, position.y)) {');
  FPack.add('					elements.push(element);');
  FPack.add('					return elements;');
  FPack.add('				}');
  FPack.add('			});');
  FPack.add('');
  FPack.add('			return elements.slice(0, 1);');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		/**');
  FPack.add('		 * @function Chart.Interaction.modes.label');
  FPack.add('		 * @deprecated since version 2.4.0');
  FPack.add('		 * @todo remove at version 3');
  FPack.add('		 * @private');
  FPack.add('		 */');
  FPack.add('		label: indexMode,');
  FPack.add('');
  FPack.add('		/**');
  FPack.add('		 * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something');
  FPack.add('		 * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item');
  FPack.add('		 * @function Chart.Interaction.modes.index');
  FPack.add('		 * @since v2.4.0');
  FPack.add('		 * @param chart {chart} the chart we are returning items from');
  FPack.add('		 * @param e {Event} the event we are find things at');
  FPack.add('		 * @param options {IInteractionOptions} options to use during interaction');
  FPack.add('		 * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned');
  FPack.add('		 */');
  FPack.add('		index: indexMode,');
  FPack.add('');
  FPack.add('		/**');
  FPack.add('		 * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something');
  FPack.add('		 * If the options.intersect is false, we find the nearest item and return the items in that dataset');
  FPack.add('		 * @function Chart.Interaction.modes.dataset');
  FPack.add('		 * @param chart {chart} the chart we are returning items from');
  FPack.add('		 * @param e {Event} the event we are find things at');
  FPack.add('		 * @param options {IInteractionOptions} options to use during interaction');
  FPack.add('		 * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned');
  FPack.add('		 */');
  FPack.add('		dataset: function(chart, e, options) {');
  FPack.add('			var position = getRelativePosition(e, chart);');
  FPack.add('			options.axis = options.axis || ''xy'';');
  FPack.add('			var distanceMetric = getDistanceMetricForAxis(options.axis);');
  FPack.add('			var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);');
  FPack.add('');
  FPack.add('			if (items.length > 0) {');
  FPack.add('				items = chart.getDatasetMeta(items[0]._datasetIndex).data;');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			return items;');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		/**');
  FPack.add('		 * @function Chart.Interaction.modes.x-axis');
  FPack.add('		 * @deprecated since version 2.4.0. Use index mode and intersect == true');
  FPack.add('		 * @todo remove at version 3');
  FPack.add('		 * @private');
  FPack.add('		 */');
  FPack.add('		''x-axis'': function(chart, e) {');
  FPack.add('			return indexMode(chart, e, {intersect: false});');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		/**');
  FPack.add('		 * Point mode returns all elements that hit test based on the event position');
  FPack.add('		 * of the event');
  FPack.add('		 * @function Chart.Interaction.modes.intersect');
  FPack.add('		 * @param chart {chart} the chart we are returning items from');
  FPack.add('		 * @param e {Event} the event we are find things at');
  FPack.add('		 * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned');
  FPack.add('		 */');
  FPack.add('		point: function(chart, e) {');
  FPack.add('			var position = getRelativePosition(e, chart);');
  FPack.add('			return getIntersectItems(chart, position);');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		/**');
  FPack.add('		 * nearest mode returns the element closest to the point');
  FPack.add('		 * @function Chart.Interaction.modes.intersect');
  FPack.add('		 * @param chart {chart} the chart we are returning items from');
  FPack.add('		 * @param e {Event} the event we are find things at');
  FPack.add('		 * @param options {IInteractionOptions} options to use');
  FPack.add('		 * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned');
  FPack.add('		 */');
  FPack.add('		nearest: function(chart, e, options) {');
  FPack.add('			var position = getRelativePosition(e, chart);');
  FPack.add('			options.axis = options.axis || ''xy'';');
  FPack.add('			var distanceMetric = getDistanceMetricForAxis(options.axis);');
  FPack.add('			var nearestItems = getNearestItems(chart, position, options.intersect, distanceMetric);');
  FPack.add('');
  FPack.add('			// We have multiple items at the same distance from the event. Now sort by smallest');
  FPack.add('			if (nearestItems.length > 1) {');
  FPack.add('				nearestItems.sort(function(a, b) {');
  FPack.add('					var sizeA = a.getArea();');
  FPack.add('					var sizeB = b.getArea();');
  FPack.add('					var ret = sizeA - sizeB;');
  FPack.add('');
  FPack.add('					if (ret === 0) {');
  FPack.add('						// if equal sort by dataset index');
  FPack.add('						ret = a._datasetIndex - b._datasetIndex;');
  FPack.add('					}');
  FPack.add('');
  FPack.add('					return ret;');
  FPack.add('				});');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			// Return only 1 item');
  FPack.add('			return nearestItems.slice(0, 1);');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		/**');
  FPack.add('		 * x mode returns the elements that hit-test at the current x coordinate');
  FPack.add('		 * @function Chart.Interaction.modes.x');
  FPack.add('		 * @param chart {chart} the chart we are returning items from');
  FPack.add('		 * @param e {Event} the event we are find things at');
  FPack.add('		 * @param options {IInteractionOptions} options to use');
  FPack.add('		 * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned');
  FPack.add('		 */');
  FPack.add('		x: function(chart, e, options) {');
  FPack.add('			var position = getRelativePosition(e, chart);');
  FPack.add('			var items = [];');
  FPack.add('			var intersectsItem = false;');
  FPack.add('');
  FPack.add('			parseVisibleItems(chart, function(element) {');
  FPack.add('				if (element.inXRange(position.x)) {');
  FPack.add('					items.push(element);');
  FPack.add('				}');
  FPack.add('');
  FPack.add('				if (element.inRange(position.x, position.y)) {');
  FPack.add('					intersectsItem = true;');
  FPack.add('				}');
  FPack.add('			});');
  FPack.add('');
  FPack.add('			// If we want to trigger on an intersect and we don''t have any items');
  FPack.add('			// that intersect the position, return nothing');
  FPack.add('			if (options.intersect && !intersectsItem) {');
  FPack.add('				items = [];');
  FPack.add('			}');
  FPack.add('			return items;');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		/**');
  FPack.add('		 * y mode returns the elements that hit-test at the current y coordinate');
  FPack.add('		 * @function Chart.Interaction.modes.y');
  FPack.add('		 * @param chart {chart} the chart we are returning items from');
  FPack.add('		 * @param e {Event} the event we are find things at');
  FPack.add('		 * @param options {IInteractionOptions} options to use');
  FPack.add('		 * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned');
  FPack.add('		 */');
  FPack.add('		y: function(chart, e, options) {');
  FPack.add('			var position = getRelativePosition(e, chart);');
  FPack.add('			var items = [];');
  FPack.add('			var intersectsItem = false;');
  FPack.add('');
  FPack.add('			parseVisibleItems(chart, function(element) {');
  FPack.add('				if (element.inYRange(position.y)) {');
  FPack.add('					items.push(element);');
  FPack.add('				}');
  FPack.add('');
  FPack.add('				if (element.inRange(position.x, position.y)) {');
  FPack.add('					intersectsItem = true;');
  FPack.add('				}');
  FPack.add('			});');
  FPack.add('');
  FPack.add('			// If we want to trigger on an intersect and we don''t have any items');
  FPack.add('			// that intersect the position, return nothing');
  FPack.add('			if (options.intersect && !intersectsItem) {');
  FPack.add('				items = [];');
  FPack.add('			}');
  FPack.add('			return items;');
  FPack.add('		}');
  FPack.add('	}');
  FPack.add('};');
  FPack.add('');
  FPack.add('},{"45":45}],29:[function(require,module,exports){');
  FPack.add('''use strict'';');
  FPack.add('');
  FPack.add('var defaults = require(25);');
  FPack.add('');
  FPack.add('defaults._set(''global'', {');
  FPack.add('	responsive: true,');
  FPack.add('	responsiveAnimationDuration: 0,');
  FPack.add('	maintainAspectRatio: true,');
  FPack.add('	events: [''mousemove'', ''mouseout'', ''click'', ''touchstart'', ''touchmove''],');
  FPack.add('	hover: {');
  FPack.add('		onHover: null,');
  FPack.add('		mode: ''nearest'',');
  FPack.add('		intersect: true,');
  FPack.add('		animationDuration: 400');
  FPack.add('	},');
  FPack.add('	onClick: null,');
  FPack.add('	defaultColor: ''rgba(0,0,0,0.1)'',');
  FPack.add('	defaultFontColor: ''#666'',');
  FPack.add('	defaultFontFamily: "''Helvetica Neue'', ''Helvetica'', ''Arial'', sans-serif",');
  FPack.add('	defaultFontSize: 12,');
  FPack.add('	defaultFontStyle: ''normal'',');
  FPack.add('	showLines: true,');
  FPack.add('');
  FPack.add('	// Element defaults defined in element extensions');
  FPack.add('	elements: {},');
  FPack.add('');
  FPack.add('	// Layout options such as padding');
  FPack.add('	layout: {');
  FPack.add('		padding: {');
  FPack.add('			top: 0,');
  FPack.add('			right: 0,');
  FPack.add('			bottom: 0,');
  FPack.add('			left: 0');
  FPack.add('		}');
  FPack.add('	}');
end;

procedure TChartbundleJS.ChartbundleJS_33;
begin
  FPack.add('});');
  FPack.add('');
  FPack.add('module.exports = function() {');
  FPack.add('');
  FPack.add('	// Occupy the global variable of Chart, and create a simple base class');
  FPack.add('	var Chart = function(item, config) {');
  FPack.add('		this.construct(item, config);');
  FPack.add('		return this;');
  FPack.add('	};');
  FPack.add('');
  FPack.add('	Chart.Chart = Chart;');
  FPack.add('');
  FPack.add('	return Chart;');
  FPack.add('};');
  FPack.add('');
  FPack.add('},{"25":25}],30:[function(require,module,exports){');
  FPack.add('''use strict'';');
  FPack.add('');
  FPack.add('var helpers = require(45);');
  FPack.add('');
  FPack.add('function filterByPosition(array, position) {');
  FPack.add('	return helpers.where(array, function(v) {');
  FPack.add('		return v.position === position;');
  FPack.add('	});');
  FPack.add('}');
  FPack.add('');
  FPack.add('function sortByWeight(array, reverse) {');
  FPack.add('	array.forEach(function(v, i) {');
  FPack.add('		v._tmpIndex_ = i;');
  FPack.add('		return v;');
  FPack.add('	});');
  FPack.add('	array.sort(function(a, b) {');
  FPack.add('		var v0 = reverse ? b : a;');
  FPack.add('		var v1 = reverse ? a : b;');
  FPack.add('		return v0.weight === v1.weight ?');
  FPack.add('			v0._tmpIndex_ - v1._tmpIndex_ :');
  FPack.add('			v0.weight - v1.weight;');
  FPack.add('	});');
  FPack.add('	array.forEach(function(v) {');
  FPack.add('		delete v._tmpIndex_;');
  FPack.add('	});');
  FPack.add('}');
  FPack.add('');
  FPack.add('/**');
  FPack.add(' * @interface ILayoutItem');
  FPack.add(' * @prop {String} position - The position of the item in the chart layout. Possible values are');
  FPack.add(' * ''left'', ''top'', ''right'', ''bottom'', and ''chartArea''');
  FPack.add(' * @prop {Number} weight - The weight used to sort the item. Higher weights are further away from the chart area');
  FPack.add(' * @prop {Boolean} fullWidth - if true, and the item is horizontal, then push vertical boxes down');
  FPack.add(' * @prop {Function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)');
  FPack.add(' * @prop {Function} update - Takes two parameters: width and height. Returns size of item');
  FPack.add(' * @prop {Function} getPadding -  Returns an object with padding on the edges');
  FPack.add(' * @prop {Number} width - Width of item. Must be valid after update()');
  FPack.add(' * @prop {Number} height - Height of item. Must be valid after update()');
  FPack.add(' * @prop {Number} left - Left edge of the item. Set by layout system and cannot be used in update');
  FPack.add(' * @prop {Number} top - Top edge of the item. Set by layout system and cannot be used in update');
  FPack.add(' * @prop {Number} right - Right edge of the item. Set by layout system and cannot be used in update');
  FPack.add(' * @prop {Number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update');
  FPack.add(' */');
  FPack.add('');
  FPack.add('// The layout service is very self explanatory.  It''s responsible for the layout within a chart.');
  FPack.add('// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need');
  FPack.add('// It is this service''s responsibility of carrying out that layout.');
  FPack.add('module.exports = {');
  FPack.add('	defaults: {},');
  FPack.add('');
  FPack.add('	/**');
  FPack.add('	 * Register a box to a chart.');
  FPack.add('	 * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.');
  FPack.add('	 * @param {Chart} chart - the chart to use');
  FPack.add('	 * @param {ILayoutItem} item - the item to add to be layed out');
  FPack.add('	 */');
  FPack.add('	addBox: function(chart, item) {');
  FPack.add('		if (!chart.boxes) {');
  FPack.add('			chart.boxes = [];');
  FPack.add('		}');
  FPack.add('');
  FPack.add('		// initialize item with default values');
  FPack.add('		item.fullWidth = item.fullWidth || false;');
  FPack.add('		item.position = item.position || ''top'';');
  FPack.add('		item.weight = item.weight || 0;');
  FPack.add('');
  FPack.add('		chart.boxes.push(item);');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	/**');
  FPack.add('	 * Remove a layoutItem from a chart');
  FPack.add('	 * @param {Chart} chart - the chart to remove the box from');
  FPack.add('	 * @param {Object} layoutItem - the item to remove from the layout');
  FPack.add('	 */');
  FPack.add('	removeBox: function(chart, layoutItem) {');
  FPack.add('		var index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;');
  FPack.add('		if (index !== -1) {');
  FPack.add('			chart.boxes.splice(index, 1);');
  FPack.add('		}');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	/**');
  FPack.add('	 * Sets (or updates) options on the given `item`.');
  FPack.add('	 * @param {Chart} chart - the chart in which the item lives (or will be added to)');
  FPack.add('	 * @param {Object} item - the item to configure with the given options');
  FPack.add('	 * @param {Object} options - the new item options.');
  FPack.add('	 */');
  FPack.add('	configure: function(chart, item, options) {');
  FPack.add('		var props = [''fullWidth'', ''position'', ''weight''];');
  FPack.add('		var ilen = props.length;');
  FPack.add('		var i = 0;');
  FPack.add('		var prop;');
  FPack.add('');
  FPack.add('		for (; i < ilen; ++i) {');
  FPack.add('			prop = props[i];');
  FPack.add('			if (options.hasOwnProperty(prop)) {');
  FPack.add('				item[prop] = options[prop];');
  FPack.add('			}');
  FPack.add('		}');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	/**');
  FPack.add('	 * Fits boxes of the given chart into the given size by having each box measure itself');
  FPack.add('	 * then running a fitting algorithm');
  FPack.add('	 * @param {Chart} chart - the chart');
  FPack.add('	 * @param {Number} width - the width to fit into');
  FPack.add('	 * @param {Number} height - the height to fit into');
  FPack.add('	 */');
  FPack.add('	update: function(chart, width, height) {');
  FPack.add('		if (!chart) {');
  FPack.add('			return;');
  FPack.add('		}');
  FPack.add('');
  FPack.add('		var layoutOptions = chart.options.layout || {};');
  FPack.add('		var padding = helpers.options.toPadding(layoutOptions.padding);');
  FPack.add('		var leftPadding = padding.left;');
  FPack.add('		var rightPadding = padding.right;');
  FPack.add('		var topPadding = padding.top;');
  FPack.add('		var bottomPadding = padding.bottom;');
  FPack.add('');
  FPack.add('		var leftBoxes = filterByPosition(chart.boxes, ''left'');');
  FPack.add('		var rightBoxes = filterByPosition(chart.boxes, ''right'');');
  FPack.add('		var topBoxes = filterByPosition(chart.boxes, ''top'');');
  FPack.add('		var bottomBoxes = filterByPosition(chart.boxes, ''bottom'');');
  FPack.add('		var chartAreaBoxes = filterByPosition(chart.boxes, ''chartArea'');');
  FPack.add('');
  FPack.add('		// Sort boxes by weight. A higher weight is further away from the chart area');
  FPack.add('		sortByWeight(leftBoxes, true);');
  FPack.add('		sortByWeight(rightBoxes, false);');
  FPack.add('		sortByWeight(topBoxes, true);');
  FPack.add('		sortByWeight(bottomBoxes, false);');
  FPack.add('');
  FPack.add('		// Essentially we now have any number of boxes on each of the 4 sides.');
  FPack.add('		// Our canvas looks like the following.');
  FPack.add('		// The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and');
  FPack.add('		// B1 is the bottom axis');
  FPack.add('		// There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays');
  FPack.add('		// These locations are single-box locations only, when trying to register a chartArea location that is already taken,');
  FPack.add('		// an error will be thrown.');
  FPack.add('		//');
  FPack.add('		// |----------------------------------------------------|');
  FPack.add('		// |                  T1 (Full Width)                   |');
  FPack.add('		// |----------------------------------------------------|');
  FPack.add('		// |    |    |                 T2                  |    |');
  FPack.add('		// |    |----|-------------------------------------|----|');
  FPack.add('		// |    |    | C1 |                           | C2 |    |');
  FPack.add('		// |    |    |----|                           |----|    |');
  FPack.add('		// |    |    |                                     |    |');
  FPack.add('		// | L1 | L2 |           ChartArea (C0)            | R1 |');
  FPack.add('		// |    |    |                                     |    |');
  FPack.add('		// |    |    |----|                           |----|    |');
  FPack.add('		// |    |    | C3 |                           | C4 |    |');
  FPack.add('		// |    |----|-------------------------------------|----|');
  FPack.add('		// |    |    |                 B1                  |    |');
  FPack.add('		// |----------------------------------------------------|');
  FPack.add('		// |                  B2 (Full Width)                   |');
  FPack.add('		// |----------------------------------------------------|');
  FPack.add('		//');
  FPack.add('		// What we do to find the best sizing, we do the following');
  FPack.add('		// 1. Determine the minimum size of the chart area.');
  FPack.add('		// 2. Split the remaining width equally between each vertical axis');
  FPack.add('		// 3. Split the remaining height equally between each horizontal axis');
  FPack.add('		// 4. Give each layout the maximum size it can be. The layout will return it''s minimum size');
  FPack.add('		// 5. Adjust the sizes of each axis based on it''s minimum reported size.');
  FPack.add('		// 6. Refit each axis');
  FPack.add('		// 7. Position each axis in the final location');
  FPack.add('		// 8. Tell the chart the final location of the chart area');
  FPack.add('		// 9. Tell any axes that overlay the chart area the positions of the chart area');
  FPack.add('');
  FPack.add('		// Step 1');
  FPack.add('		var chartWidth = width - leftPadding - rightPadding;');
  FPack.add('		var chartHeight = height - topPadding - bottomPadding;');
  FPack.add('		var chartAreaWidth = chartWidth / 2; // min 50%');
  FPack.add('		var chartAreaHeight = chartHeight / 2; // min 50%');
  FPack.add('');
  FPack.add('		// Step 2');
  FPack.add('		var verticalBoxWidth = (width - chartAreaWidth) / (leftBoxes.length + rightBoxes.length);');
  FPack.add('');
  FPack.add('		// Step 3');
  FPack.add('		var horizontalBoxHeight = (height - chartAreaHeight) / (topBoxes.length + bottomBoxes.length);');
  FPack.add('');
  FPack.add('		// Step 4');
  FPack.add('		var maxChartAreaWidth = chartWidth;');
  FPack.add('		var maxChartAreaHeight = chartHeight;');
  FPack.add('		var minBoxSizes = [];');
  FPack.add('');
  FPack.add('		function getMinimumBoxSize(box) {');
  FPack.add('			var minSize;');
  FPack.add('			var isHorizontal = box.isHorizontal();');
  FPack.add('');
  FPack.add('			if (isHorizontal) {');
  FPack.add('				minSize = box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, horizontalBoxHeight);');
  FPack.add('				maxChartAreaHeight -= minSize.height;');
  FPack.add('			} else {');
  FPack.add('				minSize = box.update(verticalBoxWidth, maxChartAreaHeight);');
  FPack.add('				maxChartAreaWidth -= minSize.width;');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			minBoxSizes.push({');
  FPack.add('				horizontal: isHorizontal,');
  FPack.add('				minSize: minSize,');
  FPack.add('				box: box,');
  FPack.add('			});');
  FPack.add('		}');
  FPack.add('');
  FPack.add('		helpers.each(leftBoxes.concat(rightBoxes, topBoxes, bottomBoxes), getMinimumBoxSize);');
  FPack.add('');
  FPack.add('		// If a horizontal box has padding, we move the left boxes over to avoid ugly charts (see issue #2478)');
  FPack.add('		var maxHorizontalLeftPadding = 0;');
  FPack.add('		var maxHorizontalRightPadding = 0;');
  FPack.add('		var maxVerticalTopPadding = 0;');
  FPack.add('		var maxVerticalBottomPadding = 0;');
  FPack.add('');
  FPack.add('		helpers.each(topBoxes.concat(bottomBoxes), function(horizontalBox) {');
  FPack.add('			if (horizontalBox.getPadding) {');
  FPack.add('				var boxPadding = horizontalBox.getPadding();');
  FPack.add('				maxHorizontalLeftPadding = Math.max(maxHorizontalLeftPadding, boxPadding.left);');
  FPack.add('				maxHorizontalRightPadding = Math.max(maxHorizontalRightPadding, boxPadding.right);');
  FPack.add('			}');
  FPack.add('		});');
  FPack.add('');
  FPack.add('		helpers.each(leftBoxes.concat(rightBoxes), function(verticalBox) {');
  FPack.add('			if (verticalBox.getPadding) {');
  FPack.add('				var boxPadding = verticalBox.getPadding();');
  FPack.add('				maxVerticalTopPadding = Math.max(maxVerticalTopPadding, boxPadding.top);');
  FPack.add('				maxVerticalBottomPadding = Math.max(maxVerticalBottomPadding, boxPadding.bottom);');
  FPack.add('			}');
  FPack.add('		});');
  FPack.add('');
  FPack.add('		// At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could');
  FPack.add('		// be if the axes are drawn at their minimum sizes.');
  FPack.add('		// Steps 5 & 6');
  FPack.add('		var totalLeftBoxesWidth = leftPadding;');
  FPack.add('		var totalRightBoxesWidth = rightPadding;');
  FPack.add('		var totalTopBoxesHeight = topPadding;');
  FPack.add('		var totalBottomBoxesHeight = bottomPadding;');
  FPack.add('');
  FPack.add('		// Function to fit a box');
  FPack.add('		function fitBox(box) {');
  FPack.add('			var minBoxSize = helpers.findNextWhere(minBoxSizes, function(minBox) {');
  FPack.add('				return minBox.box === box;');
  FPack.add('			});');
  FPack.add('');
  FPack.add('			if (minBoxSize) {');
  FPack.add('				if (box.isHorizontal()) {');
  FPack.add('					var scaleMargin = {');
  FPack.add('						left: Math.max(totalLeftBoxesWidth, maxHorizontalLeftPadding),');
  FPack.add('						right: Math.max(totalRightBoxesWidth, maxHorizontalRightPadding),');
  FPack.add('						top: 0,');
  FPack.add('						bottom: 0');
  FPack.add('					};');
  FPack.add('');
  FPack.add('					// Don''t use min size here because of label rotation. When the labels are rotated, their rotation highly depends');
  FPack.add('					// on the margin. Sometimes they need to increase in size slightly');
  FPack.add('					box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);');
  FPack.add('				} else {');
  FPack.add('					box.update(minBoxSize.minSize.width, maxChartAreaHeight);');
  FPack.add('				}');
  FPack.add('			}');
  FPack.add('		}');
  FPack.add('');
  FPack.add('		// Update, and calculate the left and right margins for the horizontal boxes');
  FPack.add('		helpers.each(leftBoxes.concat(rightBoxes), fitBox);');
  FPack.add('');
  FPack.add('		helpers.each(leftBoxes, function(box) {');
  FPack.add('			totalLeftBoxesWidth += box.width;');
  FPack.add('		});');
  FPack.add('');
  FPack.add('		helpers.each(rightBoxes, function(box) {');
  FPack.add('			totalRightBoxesWidth += box.width;');
  FPack.add('		});');
  FPack.add('');
  FPack.add('		// Set the Left and Right margins for the horizontal boxes');
  FPack.add('		helpers.each(topBoxes.concat(bottomBoxes), fitBox);');
  FPack.add('');
  FPack.add('		// Figure out how much margin is on the top and bottom of the vertical boxes');
  FPack.add('		helpers.each(topBoxes, function(box) {');
  FPack.add('			totalTopBoxesHeight += box.height;');
  FPack.add('		});');
  FPack.add('');
  FPack.add('		helpers.each(bottomBoxes, function(box) {');
  FPack.add('			totalBottomBoxesHeight += box.height;');
  FPack.add('		});');
  FPack.add('');
  FPack.add('		function finalFitVerticalBox(box) {');
  FPack.add('			var minBoxSize = helpers.findNextWhere(minBoxSizes, function(minSize) {');
  FPack.add('				return minSize.box === box;');
  FPack.add('			});');
  FPack.add('');
  FPack.add('			var scaleMargin = {');
  FPack.add('				left: 0,');
  FPack.add('				right: 0,');
  FPack.add('				top: totalTopBoxesHeight,');
  FPack.add('				bottom: totalBottomBoxesHeight');
  FPack.add('			};');
  FPack.add('');
  FPack.add('			if (minBoxSize) {');
  FPack.add('				box.update(minBoxSize.minSize.width, maxChartAreaHeight, scaleMargin);');
  FPack.add('			}');
  FPack.add('		}');
  FPack.add('');
  FPack.add('		// Let the left layout know the final margin');
  FPack.add('		helpers.each(leftBoxes.concat(rightBoxes), finalFitVerticalBox);');
  FPack.add('');
  FPack.add('		// Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)');
  FPack.add('		totalLeftBoxesWidth = leftPadding;');
  FPack.add('		totalRightBoxesWidth = rightPadding;');
  FPack.add('		totalTopBoxesHeight = topPadding;');
  FPack.add('		totalBottomBoxesHeight = bottomPadding;');
  FPack.add('');
  FPack.add('		helpers.each(leftBoxes, function(box) {');
  FPack.add('			totalLeftBoxesWidth += box.width;');
  FPack.add('		});');
  FPack.add('');
  FPack.add('		helpers.each(rightBoxes, function(box) {');
  FPack.add('			totalRightBoxesWidth += box.width;');
  FPack.add('		});');
  FPack.add('');
  FPack.add('		helpers.each(topBoxes, function(box) {');
  FPack.add('			totalTopBoxesHeight += box.height;');
end;

procedure TChartbundleJS.ChartbundleJS_34;
begin
  FPack.add('		});');
  FPack.add('		helpers.each(bottomBoxes, function(box) {');
  FPack.add('			totalBottomBoxesHeight += box.height;');
  FPack.add('		});');
  FPack.add('');
  FPack.add('		// We may be adding some padding to account for rotated x axis labels');
  FPack.add('		var leftPaddingAddition = Math.max(maxHorizontalLeftPadding - totalLeftBoxesWidth, 0);');
  FPack.add('		totalLeftBoxesWidth += leftPaddingAddition;');
  FPack.add('		totalRightBoxesWidth += Math.max(maxHorizontalRightPadding - totalRightBoxesWidth, 0);');
  FPack.add('');
  FPack.add('		var topPaddingAddition = Math.max(maxVerticalTopPadding - totalTopBoxesHeight, 0);');
  FPack.add('		totalTopBoxesHeight += topPaddingAddition;');
  FPack.add('		totalBottomBoxesHeight += Math.max(maxVerticalBottomPadding - totalBottomBoxesHeight, 0);');
  FPack.add('');
  FPack.add('		// Figure out if our chart area changed. This would occur if the dataset layout label rotation');
  FPack.add('		// changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do');
  FPack.add('		// without calling `fit` again');
  FPack.add('		var newMaxChartAreaHeight = height - totalTopBoxesHeight - totalBottomBoxesHeight;');
  FPack.add('		var newMaxChartAreaWidth = width - totalLeftBoxesWidth - totalRightBoxesWidth;');
  FPack.add('');
  FPack.add('		if (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {');
  FPack.add('			helpers.each(leftBoxes, function(box) {');
  FPack.add('				box.height = newMaxChartAreaHeight;');
  FPack.add('			});');
  FPack.add('');
  FPack.add('			helpers.each(rightBoxes, function(box) {');
  FPack.add('				box.height = newMaxChartAreaHeight;');
  FPack.add('			});');
  FPack.add('');
  FPack.add('			helpers.each(topBoxes, function(box) {');
  FPack.add('				if (!box.fullWidth) {');
  FPack.add('					box.width = newMaxChartAreaWidth;');
  FPack.add('				}');
  FPack.add('			});');
  FPack.add('');
  FPack.add('			helpers.each(bottomBoxes, function(box) {');
  FPack.add('				if (!box.fullWidth) {');
  FPack.add('					box.width = newMaxChartAreaWidth;');
  FPack.add('				}');
  FPack.add('			});');
  FPack.add('');
  FPack.add('			maxChartAreaHeight = newMaxChartAreaHeight;');
  FPack.add('			maxChartAreaWidth = newMaxChartAreaWidth;');
  FPack.add('		}');
  FPack.add('');
  FPack.add('		// Step 7 - Position the boxes');
  FPack.add('		var left = leftPadding + leftPaddingAddition;');
  FPack.add('		var top = topPadding + topPaddingAddition;');
  FPack.add('');
  FPack.add('		function placeBox(box) {');
  FPack.add('			if (box.isHorizontal()) {');
  FPack.add('				box.left = box.fullWidth ? leftPadding : totalLeftBoxesWidth;');
  FPack.add('				box.right = box.fullWidth ? width - rightPadding : totalLeftBoxesWidth + maxChartAreaWidth;');
  FPack.add('				box.top = top;');
  FPack.add('				box.bottom = top + box.height;');
  FPack.add('');
  FPack.add('				// Move to next point');
  FPack.add('				top = box.bottom;');
  FPack.add('');
  FPack.add('			} else {');
  FPack.add('');
  FPack.add('				box.left = left;');
  FPack.add('				box.right = left + box.width;');
  FPack.add('				box.top = totalTopBoxesHeight;');
  FPack.add('				box.bottom = totalTopBoxesHeight + maxChartAreaHeight;');
  FPack.add('');
  FPack.add('				// Move to next point');
  FPack.add('				left = box.right;');
  FPack.add('			}');
  FPack.add('		}');
  FPack.add('');
  FPack.add('		helpers.each(leftBoxes.concat(topBoxes), placeBox);');
  FPack.add('');
  FPack.add('		// Account for chart width and height');
  FPack.add('		left += maxChartAreaWidth;');
  FPack.add('		top += maxChartAreaHeight;');
  FPack.add('');
  FPack.add('		helpers.each(rightBoxes, placeBox);');
  FPack.add('		helpers.each(bottomBoxes, placeBox);');
  FPack.add('');
  FPack.add('		// Step 8');
  FPack.add('		chart.chartArea = {');
  FPack.add('			left: totalLeftBoxesWidth,');
  FPack.add('			top: totalTopBoxesHeight,');
  FPack.add('			right: totalLeftBoxesWidth + maxChartAreaWidth,');
  FPack.add('			bottom: totalTopBoxesHeight + maxChartAreaHeight');
  FPack.add('		};');
  FPack.add('');
  FPack.add('		// Step 9');
  FPack.add('		helpers.each(chartAreaBoxes, function(box) {');
  FPack.add('			box.left = chart.chartArea.left;');
  FPack.add('			box.top = chart.chartArea.top;');
  FPack.add('			box.right = chart.chartArea.right;');
  FPack.add('			box.bottom = chart.chartArea.bottom;');
  FPack.add('');
  FPack.add('			box.update(maxChartAreaWidth, maxChartAreaHeight);');
  FPack.add('		});');
  FPack.add('	}');
  FPack.add('};');
  FPack.add('');
  FPack.add('},{"45":45}],31:[function(require,module,exports){');
  FPack.add('''use strict'';');
  FPack.add('');
  FPack.add('var defaults = require(25);');
  FPack.add('var helpers = require(45);');
  FPack.add('');
  FPack.add('defaults._set(''global'', {');
  FPack.add('	plugins: {}');
  FPack.add('});');
  FPack.add('');
  FPack.add('/**');
  FPack.add(' * The plugin service singleton');
  FPack.add(' * @namespace Chart.plugins');
  FPack.add(' * @since 2.1.0');
  FPack.add(' */');
  FPack.add('module.exports = {');
  FPack.add('	/**');
  FPack.add('	 * Globally registered plugins.');
  FPack.add('	 * @private');
  FPack.add('	 */');
  FPack.add('	_plugins: [],');
  FPack.add('');
  FPack.add('	/**');
  FPack.add('	 * This identifier is used to invalidate the descriptors cache attached to each chart');
  FPack.add('	 * when a global plugin is registered or unregistered. In this case, the cache ID is');
  FPack.add('	 * incremented and descriptors are regenerated during following API calls.');
  FPack.add('	 * @private');
  FPack.add('	 */');
  FPack.add('	_cacheId: 0,');
  FPack.add('');
  FPack.add('	/**');
  FPack.add('	 * Registers the given plugin(s) if not already registered.');
  FPack.add('	 * @param {Array|Object} plugins plugin instance(s).');
  FPack.add('	 */');
  FPack.add('	register: function(plugins) {');
  FPack.add('		var p = this._plugins;');
  FPack.add('		([]).concat(plugins).forEach(function(plugin) {');
  FPack.add('			if (p.indexOf(plugin) === -1) {');
  FPack.add('				p.push(plugin);');
  FPack.add('			}');
  FPack.add('		});');
  FPack.add('');
  FPack.add('		this._cacheId++;');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	/**');
  FPack.add('	 * Unregisters the given plugin(s) only if registered.');
  FPack.add('	 * @param {Array|Object} plugins plugin instance(s).');
  FPack.add('	 */');
  FPack.add('	unregister: function(plugins) {');
  FPack.add('		var p = this._plugins;');
  FPack.add('		([]).concat(plugins).forEach(function(plugin) {');
  FPack.add('			var idx = p.indexOf(plugin);');
  FPack.add('			if (idx !== -1) {');
  FPack.add('				p.splice(idx, 1);');
  FPack.add('			}');
  FPack.add('		});');
  FPack.add('');
  FPack.add('		this._cacheId++;');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	/**');
  FPack.add('	 * Remove all registered plugins.');
  FPack.add('	 * @since 2.1.5');
  FPack.add('	 */');
  FPack.add('	clear: function() {');
  FPack.add('		this._plugins = [];');
  FPack.add('		this._cacheId++;');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	/**');
  FPack.add('	 * Returns the number of registered plugins?');
  FPack.add('	 * @returns {Number}');
  FPack.add('	 * @since 2.1.5');
  FPack.add('	 */');
  FPack.add('	count: function() {');
  FPack.add('		return this._plugins.length;');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	/**');
  FPack.add('	 * Returns all registered plugin instances.');
  FPack.add('	 * @returns {Array} array of plugin objects.');
  FPack.add('	 * @since 2.1.5');
  FPack.add('	 */');
  FPack.add('	getAll: function() {');
  FPack.add('		return this._plugins;');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	/**');
  FPack.add('	 * Calls enabled plugins for `chart` on the specified hook and with the given args.');
  FPack.add('	 * This method immediately returns as soon as a plugin explicitly returns false. The');
  FPack.add('	 * returned value can be used, for instance, to interrupt the current action.');
  FPack.add('	 * @param {Object} chart - The chart instance for which plugins should be called.');
  FPack.add('	 * @param {String} hook - The name of the plugin method to call (e.g. ''beforeUpdate'').');
  FPack.add('	 * @param {Array} [args] - Extra arguments to apply to the hook call.');
  FPack.add('	 * @returns {Boolean} false if any of the plugins return false, else returns true.');
  FPack.add('	 */');
  FPack.add('	notify: function(chart, hook, args) {');
  FPack.add('		var descriptors = this.descriptors(chart);');
  FPack.add('		var ilen = descriptors.length;');
  FPack.add('		var i, descriptor, plugin, params, method;');
  FPack.add('');
  FPack.add('		for (i = 0; i < ilen; ++i) {');
  FPack.add('			descriptor = descriptors[i];');
  FPack.add('			plugin = descriptor.plugin;');
  FPack.add('			method = plugin[hook];');
  FPack.add('			if (typeof method === ''function'') {');
  FPack.add('				params = [chart].concat(args || []);');
  FPack.add('				params.push(descriptor.options);');
  FPack.add('				if (method.apply(plugin, params) === false) {');
  FPack.add('					return false;');
  FPack.add('				}');
  FPack.add('			}');
  FPack.add('		}');
  FPack.add('');
  FPack.add('		return true;');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	/**');
  FPack.add('	 * Returns descriptors of enabled plugins for the given chart.');
  FPack.add('	 * @returns {Array} [{ plugin, options }]');
  FPack.add('	 * @private');
  FPack.add('	 */');
  FPack.add('	descriptors: function(chart) {');
  FPack.add('		var cache = chart.$plugins || (chart.$plugins = {});');
  FPack.add('		if (cache.id === this._cacheId) {');
  FPack.add('			return cache.descriptors;');
  FPack.add('		}');
  FPack.add('');
  FPack.add('		var plugins = [];');
  FPack.add('		var descriptors = [];');
  FPack.add('		var config = (chart && chart.config) || {};');
  FPack.add('		var options = (config.options && config.options.plugins) || {};');
  FPack.add('');
  FPack.add('		this._plugins.concat(config.plugins || []).forEach(function(plugin) {');
  FPack.add('			var idx = plugins.indexOf(plugin);');
  FPack.add('			if (idx !== -1) {');
  FPack.add('				return;');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			var id = plugin.id;');
  FPack.add('			var opts = options[id];');
  FPack.add('			if (opts === false) {');
  FPack.add('				return;');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			if (opts === true) {');
  FPack.add('				opts = helpers.clone(defaults.global.plugins[id]);');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			plugins.push(plugin);');
  FPack.add('			descriptors.push({');
  FPack.add('				plugin: plugin,');
  FPack.add('				options: opts || {}');
  FPack.add('			});');
  FPack.add('		});');
  FPack.add('');
  FPack.add('		cache.descriptors = descriptors;');
  FPack.add('		cache.id = this._cacheId;');
  FPack.add('		return descriptors;');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	/**');
  FPack.add('	 * Invalidates cache for the given chart: descriptors hold a reference on plugin option,');
  FPack.add('	 * but in some cases, this reference can be changed by the user when updating options.');
  FPack.add('	 * https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167');
  FPack.add('	 * @private');
  FPack.add('	 */');
  FPack.add('	_invalidate: function(chart) {');
  FPack.add('		delete chart.$plugins;');
  FPack.add('	}');
  FPack.add('};');
  FPack.add('');
  FPack.add('/**');
  FPack.add(' * Plugin extension hooks.');
  FPack.add(' * @interface IPlugin');
  FPack.add(' * @since 2.1.0');
  FPack.add(' */');
  FPack.add('/**');
  FPack.add(' * @method IPlugin#beforeInit');
  FPack.add(' * @desc Called before initializing `chart`.');
  FPack.add(' * @param {Chart.Controller} chart - The chart instance.');
  FPack.add(' * @param {Object} options - The plugin options.');
  FPack.add(' */');
  FPack.add('/**');
  FPack.add(' * @method IPlugin#afterInit');
  FPack.add(' * @desc Called after `chart` has been initialized and before the first update.');
  FPack.add(' * @param {Chart.Controller} chart - The chart instance.');
  FPack.add(' * @param {Object} options - The plugin options.');
  FPack.add(' */');
  FPack.add('/**');
  FPack.add(' * @method IPlugin#beforeUpdate');
  FPack.add(' * @desc Called before updating `chart`. If any plugin returns `false`, the update');
  FPack.add(' * is cancelled (and thus subsequent render(s)) until another `update` is triggered.');
  FPack.add(' * @param {Chart.Controller} chart - The chart instance.');
  FPack.add(' * @param {Object} options - The plugin options.');
  FPack.add(' * @returns {Boolean} `false` to cancel the chart update.');
  FPack.add(' */');
  FPack.add('/**');
  FPack.add(' * @method IPlugin#afterUpdate');
  FPack.add(' * @desc Called after `chart` has been updated and before rendering. Note that this');
  FPack.add(' * hook will not be called if the chart update has been previously cancelled.');
  FPack.add(' * @param {Chart.Controller} chart - The chart instance.');
  FPack.add(' * @param {Object} options - The plugin options.');
  FPack.add(' */');
  FPack.add('/**');
  FPack.add(' * @method IPlugin#beforeDatasetsUpdate');
  FPack.add(' * @desc Called before updating the `chart` datasets. If any plugin returns `false`,');
  FPack.add(' * the datasets update is cancelled until another `update` is triggered.');
  FPack.add(' * @param {Chart.Controller} chart - The chart instance.');
  FPack.add(' * @param {Object} options - The plugin options.');
  FPack.add(' * @returns {Boolean} false to cancel the datasets update.');
  FPack.add(' * @since version 2.1.5');
  FPack.add('*/');
  FPack.add('/**');
  FPack.add(' * @method IPlugin#afterDatasetsUpdate');
  FPack.add(' * @desc Called after the `chart` datasets have been updated. Note that this hook');
  FPack.add(' * will not be called if the datasets update has been previously cancelled.');
  FPack.add(' * @param {Chart.Controller} chart - The chart instance.');
  FPack.add(' * @param {Object} options - The plugin options.');
  FPack.add(' * @since version 2.1.5');
  FPack.add(' */');
  FPack.add('/**');
  FPack.add(' * @method IPlugin#beforeDatasetUpdate');
  FPack.add(' * @desc Called before updating the `chart` dataset at the given `args.index`. If any plugin');
  FPack.add(' * returns `false`, the datasets update is cancelled until another `update` is triggered.');
  FPack.add(' * @param {Chart} chart - The chart instance.');
  FPack.add(' * @param {Object} args - The call arguments.');
  FPack.add(' * @param {Number} args.index - The dataset index.');
  FPack.add(' * @param {Object} args.meta - The dataset metadata.');
  FPack.add(' * @param {Object} options - The plugin options.');
  FPack.add(' * @returns {Boolean} `false` to cancel the chart datasets drawing.');
  FPack.add(' */');
  FPack.add('/**');
  FPack.add(' * @method IPlugin#afterDatasetUpdate');
  FPack.add(' * @desc Called after the `chart` datasets at the given `args.index` has been updated. Note');
end;

procedure TChartbundleJS.ChartbundleJS_35;
begin
  FPack.add(' * that this hook will not be called if the datasets update has been previously cancelled.');
  FPack.add(' * @param {Chart} chart - The chart instance.');
  FPack.add(' * @param {Object} args - The call arguments.');
  FPack.add(' * @param {Number} args.index - The dataset index.');
  FPack.add(' * @param {Object} args.meta - The dataset metadata.');
  FPack.add(' * @param {Object} options - The plugin options.');
  FPack.add(' */');
  FPack.add('/**');
  FPack.add(' * @method IPlugin#beforeLayout');
  FPack.add(' * @desc Called before laying out `chart`. If any plugin returns `false`,');
  FPack.add(' * the layout update is cancelled until another `update` is triggered.');
  FPack.add(' * @param {Chart.Controller} chart - The chart instance.');
  FPack.add(' * @param {Object} options - The plugin options.');
  FPack.add(' * @returns {Boolean} `false` to cancel the chart layout.');
  FPack.add(' */');
  FPack.add('/**');
  FPack.add(' * @method IPlugin#afterLayout');
  FPack.add(' * @desc Called after the `chart` has been layed out. Note that this hook will not');
  FPack.add(' * be called if the layout update has been previously cancelled.');
  FPack.add(' * @param {Chart.Controller} chart - The chart instance.');
  FPack.add(' * @param {Object} options - The plugin options.');
  FPack.add(' */');
  FPack.add('/**');
  FPack.add(' * @method IPlugin#beforeRender');
  FPack.add(' * @desc Called before rendering `chart`. If any plugin returns `false`,');
  FPack.add(' * the rendering is cancelled until another `render` is triggered.');
  FPack.add(' * @param {Chart.Controller} chart - The chart instance.');
  FPack.add(' * @param {Object} options - The plugin options.');
  FPack.add(' * @returns {Boolean} `false` to cancel the chart rendering.');
  FPack.add(' */');
  FPack.add('/**');
  FPack.add(' * @method IPlugin#afterRender');
  FPack.add(' * @desc Called after the `chart` has been fully rendered (and animation completed). Note');
  FPack.add(' * that this hook will not be called if the rendering has been previously cancelled.');
  FPack.add(' * @param {Chart.Controller} chart - The chart instance.');
  FPack.add(' * @param {Object} options - The plugin options.');
  FPack.add(' */');
  FPack.add('/**');
  FPack.add(' * @method IPlugin#beforeDraw');
  FPack.add(' * @desc Called before drawing `chart` at every animation frame specified by the given');
  FPack.add(' * easing value. If any plugin returns `false`, the frame drawing is cancelled until');
  FPack.add(' * another `render` is triggered.');
  FPack.add(' * @param {Chart.Controller} chart - The chart instance.');
  FPack.add(' * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.');
  FPack.add(' * @param {Object} options - The plugin options.');
  FPack.add(' * @returns {Boolean} `false` to cancel the chart drawing.');
  FPack.add(' */');
  FPack.add('/**');
  FPack.add(' * @method IPlugin#afterDraw');
  FPack.add(' * @desc Called after the `chart` has been drawn for the specific easing value. Note');
  FPack.add(' * that this hook will not be called if the drawing has been previously cancelled.');
  FPack.add(' * @param {Chart.Controller} chart - The chart instance.');
  FPack.add(' * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.');
  FPack.add(' * @param {Object} options - The plugin options.');
  FPack.add(' */');
  FPack.add('/**');
  FPack.add(' * @method IPlugin#beforeDatasetsDraw');
  FPack.add(' * @desc Called before drawing the `chart` datasets. If any plugin returns `false`,');
  FPack.add(' * the datasets drawing is cancelled until another `render` is triggered.');
  FPack.add(' * @param {Chart.Controller} chart - The chart instance.');
  FPack.add(' * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.');
  FPack.add(' * @param {Object} options - The plugin options.');
  FPack.add(' * @returns {Boolean} `false` to cancel the chart datasets drawing.');
  FPack.add(' */');
  FPack.add('/**');
  FPack.add(' * @method IPlugin#afterDatasetsDraw');
  FPack.add(' * @desc Called after the `chart` datasets have been drawn. Note that this hook');
  FPack.add(' * will not be called if the datasets drawing has been previously cancelled.');
  FPack.add(' * @param {Chart.Controller} chart - The chart instance.');
  FPack.add(' * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.');
  FPack.add(' * @param {Object} options - The plugin options.');
  FPack.add(' */');
  FPack.add('/**');
  FPack.add(' * @method IPlugin#beforeDatasetDraw');
  FPack.add(' * @desc Called before drawing the `chart` dataset at the given `args.index` (datasets');
  FPack.add(' * are drawn in the reverse order). If any plugin returns `false`, the datasets drawing');
  FPack.add(' * is cancelled until another `render` is triggered.');
  FPack.add(' * @param {Chart} chart - The chart instance.');
  FPack.add(' * @param {Object} args - The call arguments.');
  FPack.add(' * @param {Number} args.index - The dataset index.');
  FPack.add(' * @param {Object} args.meta - The dataset metadata.');
  FPack.add(' * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.');
  FPack.add(' * @param {Object} options - The plugin options.');
  FPack.add(' * @returns {Boolean} `false` to cancel the chart datasets drawing.');
  FPack.add(' */');
  FPack.add('/**');
  FPack.add(' * @method IPlugin#afterDatasetDraw');
  FPack.add(' * @desc Called after the `chart` datasets at the given `args.index` have been drawn');
  FPack.add(' * (datasets are drawn in the reverse order). Note that this hook will not be called');
  FPack.add(' * if the datasets drawing has been previously cancelled.');
  FPack.add(' * @param {Chart} chart - The chart instance.');
  FPack.add(' * @param {Object} args - The call arguments.');
  FPack.add(' * @param {Number} args.index - The dataset index.');
  FPack.add(' * @param {Object} args.meta - The dataset metadata.');
  FPack.add(' * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.');
  FPack.add(' * @param {Object} options - The plugin options.');
  FPack.add(' */');
  FPack.add('/**');
  FPack.add(' * @method IPlugin#beforeTooltipDraw');
  FPack.add(' * @desc Called before drawing the `tooltip`. If any plugin returns `false`,');
  FPack.add(' * the tooltip drawing is cancelled until another `render` is triggered.');
  FPack.add(' * @param {Chart} chart - The chart instance.');
  FPack.add(' * @param {Object} args - The call arguments.');
  FPack.add(' * @param {Object} args.tooltip - The tooltip.');
  FPack.add(' * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.');
  FPack.add(' * @param {Object} options - The plugin options.');
  FPack.add(' * @returns {Boolean} `false` to cancel the chart tooltip drawing.');
  FPack.add(' */');
  FPack.add('/**');
  FPack.add(' * @method IPlugin#afterTooltipDraw');
  FPack.add(' * @desc Called after drawing the `tooltip`. Note that this hook will not');
  FPack.add(' * be called if the tooltip drawing has been previously cancelled.');
  FPack.add(' * @param {Chart} chart - The chart instance.');
  FPack.add(' * @param {Object} args - The call arguments.');
  FPack.add(' * @param {Object} args.tooltip - The tooltip.');
  FPack.add(' * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.');
  FPack.add(' * @param {Object} options - The plugin options.');
  FPack.add(' */');
  FPack.add('/**');
  FPack.add(' * @method IPlugin#beforeEvent');
  FPack.add(' * @desc Called before processing the specified `event`. If any plugin returns `false`,');
  FPack.add(' * the event will be discarded.');
  FPack.add(' * @param {Chart.Controller} chart - The chart instance.');
  FPack.add(' * @param {IEvent} event - The event object.');
  FPack.add(' * @param {Object} options - The plugin options.');
  FPack.add(' */');
  FPack.add('/**');
  FPack.add(' * @method IPlugin#afterEvent');
  FPack.add(' * @desc Called after the `event` has been consumed. Note that this hook');
  FPack.add(' * will not be called if the `event` has been previously discarded.');
  FPack.add(' * @param {Chart.Controller} chart - The chart instance.');
  FPack.add(' * @param {IEvent} event - The event object.');
  FPack.add(' * @param {Object} options - The plugin options.');
  FPack.add(' */');
  FPack.add('/**');
  FPack.add(' * @method IPlugin#resize');
  FPack.add(' * @desc Called after the chart as been resized.');
  FPack.add(' * @param {Chart.Controller} chart - The chart instance.');
  FPack.add(' * @param {Number} size - The new canvas display size (eq. canvas.style width & height).');
  FPack.add(' * @param {Object} options - The plugin options.');
  FPack.add(' */');
  FPack.add('/**');
  FPack.add(' * @method IPlugin#destroy');
  FPack.add(' * @desc Called after the chart as been destroyed.');
  FPack.add(' * @param {Chart.Controller} chart - The chart instance.');
  FPack.add(' * @param {Object} options - The plugin options.');
  FPack.add(' */');
  FPack.add('');
  FPack.add('},{"25":25,"45":45}],32:[function(require,module,exports){');
  FPack.add('''use strict'';');
  FPack.add('');
  FPack.add('var defaults = require(25);');
  FPack.add('var Element = require(26);');
  FPack.add('var helpers = require(45);');
  FPack.add('var Ticks = require(34);');
  FPack.add('');
  FPack.add('defaults._set(''scale'', {');
  FPack.add('	display: true,');
  FPack.add('	position: ''left'',');
  FPack.add('	offset: false,');
  FPack.add('');
  FPack.add('	// grid line settings');
  FPack.add('	gridLines: {');
  FPack.add('		display: true,');
  FPack.add('		color: ''rgba(0, 0, 0, 0.1)'',');
  FPack.add('		lineWidth: 1,');
  FPack.add('		drawBorder: true,');
  FPack.add('		drawOnChartArea: true,');
  FPack.add('		drawTicks: true,');
  FPack.add('		tickMarkLength: 10,');
  FPack.add('		zeroLineWidth: 1,');
  FPack.add('		zeroLineColor: ''rgba(0,0,0,0.25)'',');
  FPack.add('		zeroLineBorderDash: [],');
  FPack.add('		zeroLineBorderDashOffset: 0.0,');
  FPack.add('		offsetGridLines: false,');
  FPack.add('		borderDash: [],');
  FPack.add('		borderDashOffset: 0.0');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	// scale label');
  FPack.add('	scaleLabel: {');
  FPack.add('		// display property');
  FPack.add('		display: false,');
  FPack.add('');
  FPack.add('		// actual label');
  FPack.add('		labelString: '''',');
  FPack.add('');
  FPack.add('		// line height');
  FPack.add('		lineHeight: 1.2,');
  FPack.add('');
  FPack.add('		// top/bottom padding');
  FPack.add('		padding: {');
  FPack.add('			top: 4,');
  FPack.add('			bottom: 4');
  FPack.add('		}');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	// label settings');
  FPack.add('	ticks: {');
  FPack.add('		beginAtZero: false,');
  FPack.add('		minRotation: 0,');
  FPack.add('		maxRotation: 50,');
  FPack.add('		mirror: false,');
  FPack.add('		padding: 0,');
  FPack.add('		reverse: false,');
  FPack.add('		display: true,');
  FPack.add('		autoSkip: true,');
  FPack.add('		autoSkipPadding: 0,');
  FPack.add('		labelOffset: 0,');
  FPack.add('		// We pass through arrays to be rendered as multiline labels, we convert Others to strings here.');
  FPack.add('		callback: Ticks.formatters.values,');
  FPack.add('		minor: {},');
  FPack.add('		major: {}');
  FPack.add('	}');
  FPack.add('});');
  FPack.add('');
  FPack.add('function labelsFromTicks(ticks) {');
  FPack.add('	var labels = [];');
  FPack.add('	var i, ilen;');
  FPack.add('');
  FPack.add('	for (i = 0, ilen = ticks.length; i < ilen; ++i) {');
  FPack.add('		labels.push(ticks[i].label);');
  FPack.add('	}');
  FPack.add('');
  FPack.add('	return labels;');
  FPack.add('}');
  FPack.add('');
  FPack.add('function getLineValue(scale, index, offsetGridLines) {');
  FPack.add('	var lineValue = scale.getPixelForTick(index);');
  FPack.add('');
  FPack.add('	if (offsetGridLines) {');
  FPack.add('		if (index === 0) {');
  FPack.add('			lineValue -= (scale.getPixelForTick(1) - lineValue) / 2;');
  FPack.add('		} else {');
  FPack.add('			lineValue -= (lineValue - scale.getPixelForTick(index - 1)) / 2;');
  FPack.add('		}');
  FPack.add('	}');
  FPack.add('	return lineValue;');
  FPack.add('}');
  FPack.add('');
  FPack.add('module.exports = function(Chart) {');
  FPack.add('');
  FPack.add('	function computeTextSize(context, tick, font) {');
  FPack.add('		return helpers.isArray(tick) ?');
  FPack.add('			helpers.longestText(context, font, tick) :');
  FPack.add('			context.measureText(tick).width;');
  FPack.add('	}');
  FPack.add('');
  FPack.add('	function parseFontOptions(options) {');
  FPack.add('		var valueOrDefault = helpers.valueOrDefault;');
  FPack.add('		var globalDefaults = defaults.global;');
  FPack.add('		var size = valueOrDefault(options.fontSize, globalDefaults.defaultFontSize);');
  FPack.add('		var style = valueOrDefault(options.fontStyle, globalDefaults.defaultFontStyle);');
  FPack.add('		var family = valueOrDefault(options.fontFamily, globalDefaults.defaultFontFamily);');
  FPack.add('');
  FPack.add('		return {');
  FPack.add('			size: size,');
  FPack.add('			style: style,');
  FPack.add('			family: family,');
  FPack.add('			font: helpers.fontString(size, style, family)');
  FPack.add('		};');
  FPack.add('	}');
  FPack.add('');
  FPack.add('	function parseLineHeight(options) {');
  FPack.add('		return helpers.options.toLineHeight(');
  FPack.add('			helpers.valueOrDefault(options.lineHeight, 1.2),');
  FPack.add('			helpers.valueOrDefault(options.fontSize, defaults.global.defaultFontSize));');
  FPack.add('	}');
  FPack.add('');
  FPack.add('	Chart.Scale = Element.extend({');
  FPack.add('		/**');
  FPack.add('		 * Get the padding needed for the scale');
  FPack.add('		 * @method getPadding');
  FPack.add('		 * @private');
  FPack.add('		 * @returns {Padding} the necessary padding');
  FPack.add('		 */');
  FPack.add('		getPadding: function() {');
  FPack.add('			var me = this;');
  FPack.add('			return {');
  FPack.add('				left: me.paddingLeft || 0,');
  FPack.add('				top: me.paddingTop || 0,');
  FPack.add('				right: me.paddingRight || 0,');
  FPack.add('				bottom: me.paddingBottom || 0');
  FPack.add('			};');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		/**');
  FPack.add('		 * Returns the scale tick objects ({label, major})');
  FPack.add('		 * @since 2.7');
  FPack.add('		 */');
  FPack.add('		getTicks: function() {');
  FPack.add('			return this._ticks;');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		// These methods are ordered by lifecyle. Utilities then follow.');
  FPack.add('		// Any function defined here is inherited by all scale types.');
  FPack.add('		// Any function can be extended by the scale type');
  FPack.add('');
  FPack.add('		mergeTicksOptions: function() {');
  FPack.add('			var ticks = this.options.ticks;');
  FPack.add('			if (ticks.minor === false) {');
  FPack.add('				ticks.minor = {');
  FPack.add('					display: false');
  FPack.add('				};');
  FPack.add('			}');
  FPack.add('			if (ticks.major === false) {');
  FPack.add('				ticks.major = {');
  FPack.add('					display: false');
  FPack.add('				};');
  FPack.add('			}');
  FPack.add('			for (var key in ticks) {');
  FPack.add('				if (key !== ''major'' && key !== ''minor'') {');
  FPack.add('					if (typeof ticks.minor[key] === ''undefined'') {');
  FPack.add('						ticks.minor[key] = ticks[key];');
  FPack.add('					}');
  FPack.add('					if (typeof ticks.major[key] === ''undefined'') {');
  FPack.add('						ticks.major[key] = ticks[key];');
  FPack.add('					}');
  FPack.add('				}');
  FPack.add('			}');
  FPack.add('		},');
  FPack.add('		beforeUpdate: function() {');
  FPack.add('			helpers.callback(this.options.beforeUpdate, [this]);');
  FPack.add('		},');
  FPack.add('		update: function(maxWidth, maxHeight, margins) {');
  FPack.add('			var me = this;');
  FPack.add('			var i, ilen, labels, label, ticks, tick;');
  FPack.add('');
  FPack.add('			// Update Lifecycle - Probably don''t want to ever extend or overwrite this function ;)');
  FPack.add('			me.beforeUpdate();');
  FPack.add('');
  FPack.add('			// Absorb the master measurements');
  FPack.add('			me.maxWidth = maxWidth;');
  FPack.add('			me.maxHeight = maxHeight;');
  FPack.add('			me.margins = helpers.extend({');
  FPack.add('				left: 0,');
end;

procedure TChartbundleJS.ChartbundleJS_36;
begin
  FPack.add('				right: 0,');
  FPack.add('				top: 0,');
  FPack.add('				bottom: 0');
  FPack.add('			}, margins);');
  FPack.add('			me.longestTextCache = me.longestTextCache || {};');
  FPack.add('');
  FPack.add('			// Dimensions');
  FPack.add('			me.beforeSetDimensions();');
  FPack.add('			me.setDimensions();');
  FPack.add('			me.afterSetDimensions();');
  FPack.add('');
  FPack.add('			// Data min/max');
  FPack.add('			me.beforeDataLimits();');
  FPack.add('			me.determineDataLimits();');
  FPack.add('			me.afterDataLimits();');
  FPack.add('');
  FPack.add('			// Ticks - `this.ticks` is now DEPRECATED!');
  FPack.add('			// Internal ticks are now stored as objects in the PRIVATE `this._ticks` member');
  FPack.add('			// and must not be accessed directly from outside this class. `this.ticks` being');
  FPack.add('			// around for long time and not marked as private, we can''t change its structure');
  FPack.add('			// without unexpected breaking changes. If you need to access the scale ticks,');
  FPack.add('			// use scale.getTicks() instead.');
  FPack.add('');
  FPack.add('			me.beforeBuildTicks();');
  FPack.add('');
  FPack.add('			// New implementations should return an array of objects but for BACKWARD COMPAT,');
  FPack.add('			// we still support no return (`this.ticks` internally set by calling this method).');
  FPack.add('			ticks = me.buildTicks() || [];');
  FPack.add('');
  FPack.add('			me.afterBuildTicks();');
  FPack.add('');
  FPack.add('			me.beforeTickToLabelConversion();');
  FPack.add('');
  FPack.add('			// New implementations should return the formatted tick labels but for BACKWARD');
  FPack.add('			// COMPAT, we still support no return (`this.ticks` internally changed by calling');
  FPack.add('			// this method and supposed to contain only string values).');
  FPack.add('			labels = me.convertTicksToLabels(ticks) || me.ticks;');
  FPack.add('');
  FPack.add('			me.afterTickToLabelConversion();');
  FPack.add('');
  FPack.add('			me.ticks = labels;   // BACKWARD COMPATIBILITY');
  FPack.add('');
  FPack.add('			// IMPORTANT: from this point, we consider that `this.ticks` will NEVER change!');
  FPack.add('');
  FPack.add('			// BACKWARD COMPAT: synchronize `_ticks` with labels (so potentially `this.ticks`)');
  FPack.add('			for (i = 0, ilen = labels.length; i < ilen; ++i) {');
  FPack.add('				label = labels[i];');
  FPack.add('				tick = ticks[i];');
  FPack.add('				if (!tick) {');
  FPack.add('					ticks.push(tick = {');
  FPack.add('						label: label,');
  FPack.add('						major: false');
  FPack.add('					});');
  FPack.add('				} else {');
  FPack.add('					tick.label = label;');
  FPack.add('				}');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			me._ticks = ticks;');
  FPack.add('');
  FPack.add('			// Tick Rotation');
  FPack.add('			me.beforeCalculateTickRotation();');
  FPack.add('			me.calculateTickRotation();');
  FPack.add('			me.afterCalculateTickRotation();');
  FPack.add('			// Fit');
  FPack.add('			me.beforeFit();');
  FPack.add('			me.fit();');
  FPack.add('			me.afterFit();');
  FPack.add('			//');
  FPack.add('			me.afterUpdate();');
  FPack.add('');
  FPack.add('			return me.minSize;');
  FPack.add('');
  FPack.add('		},');
  FPack.add('		afterUpdate: function() {');
  FPack.add('			helpers.callback(this.options.afterUpdate, [this]);');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		//');
  FPack.add('');
  FPack.add('		beforeSetDimensions: function() {');
  FPack.add('			helpers.callback(this.options.beforeSetDimensions, [this]);');
  FPack.add('		},');
  FPack.add('		setDimensions: function() {');
  FPack.add('			var me = this;');
  FPack.add('			// Set the unconstrained dimension before label rotation');
  FPack.add('			if (me.isHorizontal()) {');
  FPack.add('				// Reset position before calculating rotation');
  FPack.add('				me.width = me.maxWidth;');
  FPack.add('				me.left = 0;');
  FPack.add('				me.right = me.width;');
  FPack.add('			} else {');
  FPack.add('				me.height = me.maxHeight;');
  FPack.add('');
  FPack.add('				// Reset position before calculating rotation');
  FPack.add('				me.top = 0;');
  FPack.add('				me.bottom = me.height;');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			// Reset padding');
  FPack.add('			me.paddingLeft = 0;');
  FPack.add('			me.paddingTop = 0;');
  FPack.add('			me.paddingRight = 0;');
  FPack.add('			me.paddingBottom = 0;');
  FPack.add('		},');
  FPack.add('		afterSetDimensions: function() {');
  FPack.add('			helpers.callback(this.options.afterSetDimensions, [this]);');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		// Data limits');
  FPack.add('		beforeDataLimits: function() {');
  FPack.add('			helpers.callback(this.options.beforeDataLimits, [this]);');
  FPack.add('		},');
  FPack.add('		determineDataLimits: helpers.noop,');
  FPack.add('		afterDataLimits: function() {');
  FPack.add('			helpers.callback(this.options.afterDataLimits, [this]);');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		//');
  FPack.add('		beforeBuildTicks: function() {');
  FPack.add('			helpers.callback(this.options.beforeBuildTicks, [this]);');
  FPack.add('		},');
  FPack.add('		buildTicks: helpers.noop,');
  FPack.add('		afterBuildTicks: function() {');
  FPack.add('			helpers.callback(this.options.afterBuildTicks, [this]);');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		beforeTickToLabelConversion: function() {');
  FPack.add('			helpers.callback(this.options.beforeTickToLabelConversion, [this]);');
  FPack.add('		},');
  FPack.add('		convertTicksToLabels: function() {');
  FPack.add('			var me = this;');
  FPack.add('			// Convert ticks to strings');
  FPack.add('			var tickOpts = me.options.ticks;');
  FPack.add('			me.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback, this);');
  FPack.add('		},');
  FPack.add('		afterTickToLabelConversion: function() {');
  FPack.add('			helpers.callback(this.options.afterTickToLabelConversion, [this]);');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		//');
  FPack.add('');
  FPack.add('		beforeCalculateTickRotation: function() {');
  FPack.add('			helpers.callback(this.options.beforeCalculateTickRotation, [this]);');
  FPack.add('		},');
  FPack.add('		calculateTickRotation: function() {');
  FPack.add('			var me = this;');
  FPack.add('			var context = me.ctx;');
  FPack.add('			var tickOpts = me.options.ticks;');
  FPack.add('			var labels = labelsFromTicks(me._ticks);');
  FPack.add('');
  FPack.add('			// Get the width of each grid by calculating the difference');
  FPack.add('			// between x offsets between 0 and 1.');
  FPack.add('			var tickFont = parseFontOptions(tickOpts);');
  FPack.add('			context.font = tickFont.font;');
  FPack.add('');
  FPack.add('			var labelRotation = tickOpts.minRotation || 0;');
  FPack.add('');
  FPack.add('			if (labels.length && me.options.display && me.isHorizontal()) {');
  FPack.add('				var originalLabelWidth = helpers.longestText(context, tickFont.font, labels, me.longestTextCache);');
  FPack.add('				var labelWidth = originalLabelWidth;');
  FPack.add('				var cosRotation, sinRotation;');
  FPack.add('');
  FPack.add('				// Allow 3 pixels x2 padding either side for label readability');
  FPack.add('				var tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6;');
  FPack.add('');
  FPack.add('				// Max label rotation can be set or default to 90 - also act as a loop counter');
  FPack.add('				while (labelWidth > tickWidth && labelRotation < tickOpts.maxRotation) {');
  FPack.add('					var angleRadians = helpers.toRadians(labelRotation);');
  FPack.add('					cosRotation = Math.cos(angleRadians);');
  FPack.add('					sinRotation = Math.sin(angleRadians);');
  FPack.add('');
  FPack.add('					if (sinRotation * originalLabelWidth > me.maxHeight) {');
  FPack.add('						// go back one step');
  FPack.add('						labelRotation--;');
  FPack.add('						break;');
  FPack.add('					}');
  FPack.add('');
  FPack.add('					labelRotation++;');
  FPack.add('					labelWidth = cosRotation * originalLabelWidth;');
  FPack.add('				}');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			me.labelRotation = labelRotation;');
  FPack.add('		},');
  FPack.add('		afterCalculateTickRotation: function() {');
  FPack.add('			helpers.callback(this.options.afterCalculateTickRotation, [this]);');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		//');
  FPack.add('');
  FPack.add('		beforeFit: function() {');
  FPack.add('			helpers.callback(this.options.beforeFit, [this]);');
  FPack.add('		},');
  FPack.add('		fit: function() {');
  FPack.add('			var me = this;');
  FPack.add('			// Reset');
  FPack.add('			var minSize = me.minSize = {');
  FPack.add('				width: 0,');
  FPack.add('				height: 0');
  FPack.add('			};');
  FPack.add('');
  FPack.add('			var labels = labelsFromTicks(me._ticks);');
  FPack.add('');
  FPack.add('			var opts = me.options;');
  FPack.add('			var tickOpts = opts.ticks;');
  FPack.add('			var scaleLabelOpts = opts.scaleLabel;');
  FPack.add('			var gridLineOpts = opts.gridLines;');
  FPack.add('			var display = opts.display;');
  FPack.add('			var isHorizontal = me.isHorizontal();');
  FPack.add('');
  FPack.add('			var tickFont = parseFontOptions(tickOpts);');
  FPack.add('			var tickMarkLength = opts.gridLines.tickMarkLength;');
  FPack.add('');
  FPack.add('			// Width');
  FPack.add('			if (isHorizontal) {');
  FPack.add('				// subtract the margins to line up with the chartArea if we are a full width scale');
  FPack.add('				minSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;');
  FPack.add('			} else {');
  FPack.add('				minSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0;');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			// height');
  FPack.add('			if (isHorizontal) {');
  FPack.add('				minSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0;');
  FPack.add('			} else {');
  FPack.add('				minSize.height = me.maxHeight; // fill all the height');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			// Are we showing a title for the scale?');
  FPack.add('			if (scaleLabelOpts.display && display) {');
  FPack.add('				var scaleLabelLineHeight = parseLineHeight(scaleLabelOpts);');
  FPack.add('				var scaleLabelPadding = helpers.options.toPadding(scaleLabelOpts.padding);');
  FPack.add('				var deltaHeight = scaleLabelLineHeight + scaleLabelPadding.height;');
  FPack.add('');
  FPack.add('				if (isHorizontal) {');
  FPack.add('					minSize.height += deltaHeight;');
  FPack.add('				} else {');
  FPack.add('					minSize.width += deltaHeight;');
  FPack.add('				}');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			// Don''t bother fitting the ticks if we are not showing them');
  FPack.add('			if (tickOpts.display && display) {');
  FPack.add('				var largestTextWidth = helpers.longestText(me.ctx, tickFont.font, labels, me.longestTextCache);');
  FPack.add('				var tallestLabelHeightInLines = helpers.numberOfLabelLines(labels);');
  FPack.add('				var lineSpace = tickFont.size * 0.5;');
  FPack.add('				var tickPadding = me.options.ticks.padding;');
  FPack.add('');
  FPack.add('				if (isHorizontal) {');
  FPack.add('					// A horizontal axis is more constrained by the height.');
  FPack.add('					me.longestLabelWidth = largestTextWidth;');
  FPack.add('');
  FPack.add('					var angleRadians = helpers.toRadians(me.labelRotation);');
  FPack.add('					var cosRotation = Math.cos(angleRadians);');
  FPack.add('					var sinRotation = Math.sin(angleRadians);');
  FPack.add('');
  FPack.add('					// TODO - improve this calculation');
  FPack.add('					var labelHeight = (sinRotation * largestTextWidth)');
  FPack.add('						+ (tickFont.size * tallestLabelHeightInLines)');
  FPack.add('						+ (lineSpace * (tallestLabelHeightInLines - 1))');
  FPack.add('						+ lineSpace; // padding');
  FPack.add('');
  FPack.add('					minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);');
  FPack.add('');
  FPack.add('					me.ctx.font = tickFont.font;');
  FPack.add('					var firstLabelWidth = computeTextSize(me.ctx, labels[0], tickFont.font);');
  FPack.add('					var lastLabelWidth = computeTextSize(me.ctx, labels[labels.length - 1], tickFont.font);');
  FPack.add('');
  FPack.add('					// Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned');
  FPack.add('					// which means that the right padding is dominated by the font height');
  FPack.add('					if (me.labelRotation !== 0) {');
  FPack.add('						me.paddingLeft = opts.position === ''bottom'' ? (cosRotation * firstLabelWidth) + 3 : (cosRotation * lineSpace) + 3; // add 3 px to move away from canvas edges');
  FPack.add('						me.paddingRight = opts.position === ''bottom'' ? (cosRotation * lineSpace) + 3 : (cosRotation * lastLabelWidth) + 3;');
  FPack.add('					} else {');
  FPack.add('						me.paddingLeft = firstLabelWidth / 2 + 3; // add 3 px to move away from canvas edges');
  FPack.add('						me.paddingRight = lastLabelWidth / 2 + 3;');
  FPack.add('					}');
  FPack.add('				} else {');
  FPack.add('					// A vertical axis is more constrained by the width. Labels are the');
  FPack.add('					// dominant factor here, so get that length first and account for padding');
  FPack.add('					if (tickOpts.mirror) {');
  FPack.add('						largestTextWidth = 0;');
  FPack.add('					} else {');
  FPack.add('						// use lineSpace for consistency with horizontal axis');
  FPack.add('						// tickPadding is not implemented for horizontal');
  FPack.add('						largestTextWidth += tickPadding + lineSpace;');
  FPack.add('					}');
  FPack.add('');
  FPack.add('					minSize.width = Math.min(me.maxWidth, minSize.width + largestTextWidth);');
  FPack.add('');
  FPack.add('					me.paddingTop = tickFont.size / 2;');
  FPack.add('					me.paddingBottom = tickFont.size / 2;');
  FPack.add('				}');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			me.handleMargins();');
  FPack.add('');
  FPack.add('			me.width = minSize.width;');
  FPack.add('			me.height = minSize.height;');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		/**');
  FPack.add('		 * Handle margins and padding interactions');
  FPack.add('		 * @private');
  FPack.add('		 */');
  FPack.add('		handleMargins: function() {');
  FPack.add('			var me = this;');
  FPack.add('			if (me.margins) {');
  FPack.add('				me.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);');
  FPack.add('				me.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);');
  FPack.add('				me.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);');
  FPack.add('				me.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);');
  FPack.add('			}');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		afterFit: function() {');
  FPack.add('			helpers.callback(this.options.afterFit, [this]);');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		// Shared Methods');
  FPack.add('		isHorizontal: function() {');
  FPack.add('			return this.options.position === ''top'' || this.options.position === ''bottom'';');
  FPack.add('		},');
  FPack.add('		isFullWidth: function() {');
  FPack.add('			return (this.options.fullWidth);');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		// Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not');
  FPack.add('		getRightValue: function(rawValue) {');
  FPack.add('			// Null and undefined values first');
  FPack.add('			if (helpers.isNullOrUndef(rawValue)) {');
  FPack.add('				return NaN;');
  FPack.add('			}');
  FPack.add('			// isNaN(object) returns true, so make sure NaN is checking for a number; Discard Infinite values');
  FPack.add('			if (typeof rawValue === ''number'' && !isFinite(rawValue)) {');
end;

procedure TChartbundleJS.ChartbundleJS_37;
begin
  FPack.add('				return NaN;');
  FPack.add('			}');
  FPack.add('			// If it is in fact an object, dive in one more level');
  FPack.add('			if (rawValue) {');
  FPack.add('				if (this.isHorizontal()) {');
  FPack.add('					if (rawValue.x !== undefined) {');
  FPack.add('						return this.getRightValue(rawValue.x);');
  FPack.add('					}');
  FPack.add('				} else if (rawValue.y !== undefined) {');
  FPack.add('					return this.getRightValue(rawValue.y);');
  FPack.add('				}');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			// Value is good, return it');
  FPack.add('			return rawValue;');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		/**');
  FPack.add('		 * Used to get the value to display in the tooltip for the data at the given index');
  FPack.add('		 * @param index');
  FPack.add('		 * @param datasetIndex');
  FPack.add('		 */');
  FPack.add('		getLabelForIndex: helpers.noop,');
  FPack.add('');
  FPack.add('		/**');
  FPack.add('		 * Returns the location of the given data point. Value can either be an index or a numerical value');
  FPack.add('		 * The coordinate (0, 0) is at the upper-left corner of the canvas');
  FPack.add('		 * @param value');
  FPack.add('		 * @param index');
  FPack.add('		 * @param datasetIndex');
  FPack.add('		 */');
  FPack.add('		getPixelForValue: helpers.noop,');
  FPack.add('');
  FPack.add('		/**');
  FPack.add('		 * Used to get the data value from a given pixel. This is the inverse of getPixelForValue');
  FPack.add('		 * The coordinate (0, 0) is at the upper-left corner of the canvas');
  FPack.add('		 * @param pixel');
  FPack.add('		 */');
  FPack.add('		getValueForPixel: helpers.noop,');
  FPack.add('');
  FPack.add('		/**');
  FPack.add('		 * Returns the location of the tick at the given index');
  FPack.add('		 * The coordinate (0, 0) is at the upper-left corner of the canvas');
  FPack.add('		 */');
  FPack.add('		getPixelForTick: function(index) {');
  FPack.add('			var me = this;');
  FPack.add('			var offset = me.options.offset;');
  FPack.add('			if (me.isHorizontal()) {');
  FPack.add('				var innerWidth = me.width - (me.paddingLeft + me.paddingRight);');
  FPack.add('				var tickWidth = innerWidth / Math.max((me._ticks.length - (offset ? 0 : 1)), 1);');
  FPack.add('				var pixel = (tickWidth * index) + me.paddingLeft;');
  FPack.add('');
  FPack.add('				if (offset) {');
  FPack.add('					pixel += tickWidth / 2;');
  FPack.add('				}');
  FPack.add('');
  FPack.add('				var finalVal = me.left + Math.round(pixel);');
  FPack.add('				finalVal += me.isFullWidth() ? me.margins.left : 0;');
  FPack.add('				return finalVal;');
  FPack.add('			}');
  FPack.add('			var innerHeight = me.height - (me.paddingTop + me.paddingBottom);');
  FPack.add('			return me.top + (index * (innerHeight / (me._ticks.length - 1)));');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		/**');
  FPack.add('		 * Utility for getting the pixel location of a percentage of scale');
  FPack.add('		 * The coordinate (0, 0) is at the upper-left corner of the canvas');
  FPack.add('		 */');
  FPack.add('		getPixelForDecimal: function(decimal) {');
  FPack.add('			var me = this;');
  FPack.add('			if (me.isHorizontal()) {');
  FPack.add('				var innerWidth = me.width - (me.paddingLeft + me.paddingRight);');
  FPack.add('				var valueOffset = (innerWidth * decimal) + me.paddingLeft;');
  FPack.add('');
  FPack.add('				var finalVal = me.left + Math.round(valueOffset);');
  FPack.add('				finalVal += me.isFullWidth() ? me.margins.left : 0;');
  FPack.add('				return finalVal;');
  FPack.add('			}');
  FPack.add('			return me.top + (decimal * me.height);');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		/**');
  FPack.add('		 * Returns the pixel for the minimum chart value');
  FPack.add('		 * The coordinate (0, 0) is at the upper-left corner of the canvas');
  FPack.add('		 */');
  FPack.add('		getBasePixel: function() {');
  FPack.add('			return this.getPixelForValue(this.getBaseValue());');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		getBaseValue: function() {');
  FPack.add('			var me = this;');
  FPack.add('			var min = me.min;');
  FPack.add('			var max = me.max;');
  FPack.add('');
  FPack.add('			return me.beginAtZero ? 0 :');
  FPack.add('				min < 0 && max < 0 ? max :');
  FPack.add('				min > 0 && max > 0 ? min :');
  FPack.add('				0;');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		/**');
  FPack.add('		 * Returns a subset of ticks to be plotted to avoid overlapping labels.');
  FPack.add('		 * @private');
  FPack.add('		 */');
  FPack.add('		_autoSkip: function(ticks) {');
  FPack.add('			var skipRatio;');
  FPack.add('			var me = this;');
  FPack.add('			var isHorizontal = me.isHorizontal();');
  FPack.add('			var optionTicks = me.options.ticks.minor;');
  FPack.add('			var tickCount = ticks.length;');
  FPack.add('			var labelRotationRadians = helpers.toRadians(me.labelRotation);');
  FPack.add('			var cosRotation = Math.cos(labelRotationRadians);');
  FPack.add('			var longestRotatedLabel = me.longestLabelWidth * cosRotation;');
  FPack.add('			var result = [];');
  FPack.add('			var i, tick, shouldSkip;');
  FPack.add('');
  FPack.add('			// figure out the maximum number of gridlines to show');
  FPack.add('			var maxTicks;');
  FPack.add('			if (optionTicks.maxTicksLimit) {');
  FPack.add('				maxTicks = optionTicks.maxTicksLimit;');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			if (isHorizontal) {');
  FPack.add('				skipRatio = false;');
  FPack.add('');
  FPack.add('				if ((longestRotatedLabel + optionTicks.autoSkipPadding) * tickCount > (me.width - (me.paddingLeft + me.paddingRight))) {');
  FPack.add('					skipRatio = 1 + Math.floor(((longestRotatedLabel + optionTicks.autoSkipPadding) * tickCount) / (me.width - (me.paddingLeft + me.paddingRight)));');
  FPack.add('				}');
  FPack.add('');
  FPack.add('				// if they defined a max number of optionTicks,');
  FPack.add('				// increase skipRatio until that number is met');
  FPack.add('				if (maxTicks && tickCount > maxTicks) {');
  FPack.add('					skipRatio = Math.max(skipRatio, Math.floor(tickCount / maxTicks));');
  FPack.add('				}');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			for (i = 0; i < tickCount; i++) {');
  FPack.add('				tick = ticks[i];');
  FPack.add('');
  FPack.add('				// Since we always show the last tick,we need may need to hide the last shown one before');
  FPack.add('				shouldSkip = (skipRatio > 1 && i % skipRatio > 0) || (i % skipRatio === 0 && i + skipRatio >= tickCount);');
  FPack.add('				if (shouldSkip && i !== tickCount - 1) {');
  FPack.add('					// leave tick in place but make sure it''s not displayed (#4635)');
  FPack.add('					delete tick.label;');
  FPack.add('				}');
  FPack.add('				result.push(tick);');
  FPack.add('			}');
  FPack.add('			return result;');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		// Actually draw the scale on the canvas');
  FPack.add('		// @param {rectangle} chartArea : the area of the chart to draw full grid lines on');
  FPack.add('		draw: function(chartArea) {');
  FPack.add('			var me = this;');
  FPack.add('			var options = me.options;');
  FPack.add('			if (!options.display) {');
  FPack.add('				return;');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			var context = me.ctx;');
  FPack.add('			var globalDefaults = defaults.global;');
  FPack.add('			var optionTicks = options.ticks.minor;');
  FPack.add('			var optionMajorTicks = options.ticks.major || optionTicks;');
  FPack.add('			var gridLines = options.gridLines;');
  FPack.add('			var scaleLabel = options.scaleLabel;');
  FPack.add('');
  FPack.add('			var isRotated = me.labelRotation !== 0;');
  FPack.add('			var isHorizontal = me.isHorizontal();');
  FPack.add('');
  FPack.add('			var ticks = optionTicks.autoSkip ? me._autoSkip(me.getTicks()) : me.getTicks();');
  FPack.add('			var tickFontColor = helpers.valueOrDefault(optionTicks.fontColor, globalDefaults.defaultFontColor);');
  FPack.add('			var tickFont = parseFontOptions(optionTicks);');
  FPack.add('			var majorTickFontColor = helpers.valueOrDefault(optionMajorTicks.fontColor, globalDefaults.defaultFontColor);');
  FPack.add('			var majorTickFont = parseFontOptions(optionMajorTicks);');
  FPack.add('');
  FPack.add('			var tl = gridLines.drawTicks ? gridLines.tickMarkLength : 0;');
  FPack.add('');
  FPack.add('			var scaleLabelFontColor = helpers.valueOrDefault(scaleLabel.fontColor, globalDefaults.defaultFontColor);');
  FPack.add('			var scaleLabelFont = parseFontOptions(scaleLabel);');
  FPack.add('			var scaleLabelPadding = helpers.options.toPadding(scaleLabel.padding);');
  FPack.add('			var labelRotationRadians = helpers.toRadians(me.labelRotation);');
  FPack.add('');
  FPack.add('			var itemsToDraw = [];');
  FPack.add('');
  FPack.add('			var axisWidth = me.options.gridLines.lineWidth;');
  FPack.add('			var xTickStart = options.position === ''right'' ? me.right : me.right - axisWidth - tl;');
  FPack.add('			var xTickEnd = options.position === ''right'' ? me.right + tl : me.right;');
  FPack.add('			var yTickStart = options.position === ''bottom'' ? me.top + axisWidth : me.bottom - tl - axisWidth;');
  FPack.add('			var yTickEnd = options.position === ''bottom'' ? me.top + axisWidth + tl : me.bottom + axisWidth;');
  FPack.add('');
  FPack.add('			helpers.each(ticks, function(tick, index) {');
  FPack.add('				// autoskipper skipped this tick (#4635)');
  FPack.add('				if (helpers.isNullOrUndef(tick.label)) {');
  FPack.add('					return;');
  FPack.add('				}');
  FPack.add('');
  FPack.add('				var label = tick.label;');
  FPack.add('				var lineWidth, lineColor, borderDash, borderDashOffset;');
  FPack.add('				if (index === me.zeroLineIndex && options.offset === gridLines.offsetGridLines) {');
  FPack.add('					// Draw the first index specially');
  FPack.add('					lineWidth = gridLines.zeroLineWidth;');
  FPack.add('					lineColor = gridLines.zeroLineColor;');
  FPack.add('					borderDash = gridLines.zeroLineBorderDash;');
  FPack.add('					borderDashOffset = gridLines.zeroLineBorderDashOffset;');
  FPack.add('				} else {');
  FPack.add('					lineWidth = helpers.valueAtIndexOrDefault(gridLines.lineWidth, index);');
  FPack.add('					lineColor = helpers.valueAtIndexOrDefault(gridLines.color, index);');
  FPack.add('					borderDash = helpers.valueOrDefault(gridLines.borderDash, globalDefaults.borderDash);');
  FPack.add('					borderDashOffset = helpers.valueOrDefault(gridLines.borderDashOffset, globalDefaults.borderDashOffset);');
  FPack.add('				}');
  FPack.add('');
  FPack.add('				// Common properties');
  FPack.add('				var tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY;');
  FPack.add('				var textAlign = ''middle'';');
  FPack.add('				var textBaseline = ''middle'';');
  FPack.add('				var tickPadding = optionTicks.padding;');
  FPack.add('');
  FPack.add('				if (isHorizontal) {');
  FPack.add('					var labelYOffset = tl + tickPadding;');
  FPack.add('');
  FPack.add('					if (options.position === ''bottom'') {');
  FPack.add('						// bottom');
  FPack.add('						textBaseline = !isRotated ? ''top'' : ''middle'';');
  FPack.add('						textAlign = !isRotated ? ''center'' : ''right'';');
  FPack.add('						labelY = me.top + labelYOffset;');
  FPack.add('					} else {');
  FPack.add('						// top');
  FPack.add('						textBaseline = !isRotated ? ''bottom'' : ''middle'';');
  FPack.add('						textAlign = !isRotated ? ''center'' : ''left'';');
  FPack.add('						labelY = me.bottom - labelYOffset;');
  FPack.add('					}');
  FPack.add('');
  FPack.add('					var xLineValue = getLineValue(me, index, gridLines.offsetGridLines && ticks.length > 1);');
  FPack.add('					if (xLineValue < me.left) {');
  FPack.add('						lineColor = ''rgba(0,0,0,0)'';');
  FPack.add('					}');
  FPack.add('					xLineValue += helpers.aliasPixel(lineWidth);');
  FPack.add('');
  FPack.add('					labelX = me.getPixelForTick(index) + optionTicks.labelOffset; // x values for optionTicks (need to consider offsetLabel option)');
  FPack.add('');
  FPack.add('					tx1 = tx2 = x1 = x2 = xLineValue;');
  FPack.add('					ty1 = yTickStart;');
  FPack.add('					ty2 = yTickEnd;');
  FPack.add('					y1 = chartArea.top;');
  FPack.add('					y2 = chartArea.bottom + axisWidth;');
  FPack.add('				} else {');
  FPack.add('					var isLeft = options.position === ''left'';');
  FPack.add('					var labelXOffset;');
  FPack.add('');
  FPack.add('					if (optionTicks.mirror) {');
  FPack.add('						textAlign = isLeft ? ''left'' : ''right'';');
  FPack.add('						labelXOffset = tickPadding;');
  FPack.add('					} else {');
  FPack.add('						textAlign = isLeft ? ''right'' : ''left'';');
  FPack.add('						labelXOffset = tl + tickPadding;');
  FPack.add('					}');
  FPack.add('');
  FPack.add('					labelX = isLeft ? me.right - labelXOffset : me.left + labelXOffset;');
  FPack.add('');
  FPack.add('					var yLineValue = getLineValue(me, index, gridLines.offsetGridLines && ticks.length > 1);');
  FPack.add('					if (yLineValue < me.top) {');
  FPack.add('						lineColor = ''rgba(0,0,0,0)'';');
  FPack.add('					}');
  FPack.add('					yLineValue += helpers.aliasPixel(lineWidth);');
  FPack.add('');
  FPack.add('					labelY = me.getPixelForTick(index) + optionTicks.labelOffset;');
  FPack.add('');
  FPack.add('					tx1 = xTickStart;');
  FPack.add('					tx2 = xTickEnd;');
  FPack.add('					x1 = chartArea.left;');
  FPack.add('					x2 = chartArea.right + axisWidth;');
  FPack.add('					ty1 = ty2 = y1 = y2 = yLineValue;');
  FPack.add('				}');
  FPack.add('');
  FPack.add('				itemsToDraw.push({');
  FPack.add('					tx1: tx1,');
  FPack.add('					ty1: ty1,');
  FPack.add('					tx2: tx2,');
  FPack.add('					ty2: ty2,');
  FPack.add('					x1: x1,');
  FPack.add('					y1: y1,');
  FPack.add('					x2: x2,');
  FPack.add('					y2: y2,');
  FPack.add('					labelX: labelX,');
  FPack.add('					labelY: labelY,');
  FPack.add('					glWidth: lineWidth,');
  FPack.add('					glColor: lineColor,');
  FPack.add('					glBorderDash: borderDash,');
  FPack.add('					glBorderDashOffset: borderDashOffset,');
  FPack.add('					rotation: -1 * labelRotationRadians,');
  FPack.add('					label: label,');
  FPack.add('					major: tick.major,');
  FPack.add('					textBaseline: textBaseline,');
  FPack.add('					textAlign: textAlign');
  FPack.add('				});');
  FPack.add('			});');
  FPack.add('');
  FPack.add('			// Draw all of the tick labels, tick marks, and grid lines at the correct places');
  FPack.add('			helpers.each(itemsToDraw, function(itemToDraw) {');
  FPack.add('				if (gridLines.display) {');
  FPack.add('					context.save();');
  FPack.add('					context.lineWidth = itemToDraw.glWidth;');
  FPack.add('					context.strokeStyle = itemToDraw.glColor;');
  FPack.add('					if (context.setLineDash) {');
  FPack.add('						context.setLineDash(itemToDraw.glBorderDash);');
  FPack.add('						context.lineDashOffset = itemToDraw.glBorderDashOffset;');
  FPack.add('					}');
  FPack.add('');
  FPack.add('					context.beginPath();');
  FPack.add('');
  FPack.add('					if (gridLines.drawTicks) {');
  FPack.add('						context.moveTo(itemToDraw.tx1, itemToDraw.ty1);');
  FPack.add('						context.lineTo(itemToDraw.tx2, itemToDraw.ty2);');
  FPack.add('					}');
  FPack.add('');
  FPack.add('					if (gridLines.drawOnChartArea) {');
  FPack.add('						context.moveTo(itemToDraw.x1, itemToDraw.y1);');
  FPack.add('						context.lineTo(itemToDraw.x2, itemToDraw.y2);');
  FPack.add('					}');
  FPack.add('');
  FPack.add('					context.stroke();');
  FPack.add('					context.restore();');
  FPack.add('				}');
  FPack.add('');
  FPack.add('				if (optionTicks.display) {');
  FPack.add('					// Make sure we draw text in the correct color and font');
  FPack.add('					context.save();');
  FPack.add('					context.translate(itemToDraw.labelX, itemToDraw.labelY);');
  FPack.add('					context.rotate(itemToDraw.rotation);');
  FPack.add('					context.font = itemToDraw.major ? majorTickFont.font : tickFont.font;');
  FPack.add('					context.fillStyle = itemToDraw.major ? majorTickFontColor : tickFontColor;');
  FPack.add('					context.textBaseline = itemToDraw.textBaseline;');
  FPack.add('					context.textAlign = itemToDraw.textAlign;');
  FPack.add('');
  FPack.add('					var label = itemToDraw.label;');
  FPack.add('					if (helpers.isArray(label)) {');
end;

procedure TChartbundleJS.ChartbundleJS_38;
begin
  FPack.add('						var lineCount = label.length;');
  FPack.add('						var lineHeight = tickFont.size * 1.5;');
  FPack.add('						var y = me.isHorizontal() ? 0 : -lineHeight * (lineCount - 1) / 2;');
  FPack.add('');
  FPack.add('						for (var i = 0; i < lineCount; ++i) {');
  FPack.add('							// We just make sure the multiline element is a string here..');
  FPack.add('							context.fillText('''' + label[i], 0, y);');
  FPack.add('							// apply same lineSpacing as calculated @ L#320');
  FPack.add('							y += lineHeight;');
  FPack.add('						}');
  FPack.add('					} else {');
  FPack.add('						context.fillText(label, 0, 0);');
  FPack.add('					}');
  FPack.add('					context.restore();');
  FPack.add('				}');
  FPack.add('			});');
  FPack.add('');
  FPack.add('			if (scaleLabel.display) {');
  FPack.add('				// Draw the scale label');
  FPack.add('				var scaleLabelX;');
  FPack.add('				var scaleLabelY;');
  FPack.add('				var rotation = 0;');
  FPack.add('				var halfLineHeight = parseLineHeight(scaleLabel) / 2;');
  FPack.add('');
  FPack.add('				if (isHorizontal) {');
  FPack.add('					scaleLabelX = me.left + ((me.right - me.left) / 2); // midpoint of the width');
  FPack.add('					scaleLabelY = options.position === ''bottom''');
  FPack.add('						? me.bottom - halfLineHeight - scaleLabelPadding.bottom');
  FPack.add('						: me.top + halfLineHeight + scaleLabelPadding.top;');
  FPack.add('				} else {');
  FPack.add('					var isLeft = options.position === ''left'';');
  FPack.add('					scaleLabelX = isLeft');
  FPack.add('						? me.left + halfLineHeight + scaleLabelPadding.top');
  FPack.add('						: me.right - halfLineHeight - scaleLabelPadding.top;');
  FPack.add('					scaleLabelY = me.top + ((me.bottom - me.top) / 2);');
  FPack.add('					rotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;');
  FPack.add('				}');
  FPack.add('');
  FPack.add('				context.save();');
  FPack.add('				context.translate(scaleLabelX, scaleLabelY);');
  FPack.add('				context.rotate(rotation);');
  FPack.add('				context.textAlign = ''center'';');
  FPack.add('				context.textBaseline = ''middle'';');
  FPack.add('				context.fillStyle = scaleLabelFontColor; // render in correct colour');
  FPack.add('				context.font = scaleLabelFont.font;');
  FPack.add('				context.fillText(scaleLabel.labelString, 0, 0);');
  FPack.add('				context.restore();');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			if (gridLines.drawBorder) {');
  FPack.add('				// Draw the line at the edge of the axis');
  FPack.add('				context.lineWidth = helpers.valueAtIndexOrDefault(gridLines.lineWidth, 0);');
  FPack.add('				context.strokeStyle = helpers.valueAtIndexOrDefault(gridLines.color, 0);');
  FPack.add('				var x1 = me.left;');
  FPack.add('				var x2 = me.right + axisWidth;');
  FPack.add('				var y1 = me.top;');
  FPack.add('				var y2 = me.bottom + axisWidth;');
  FPack.add('');
  FPack.add('				var aliasPixel = helpers.aliasPixel(context.lineWidth);');
  FPack.add('				if (isHorizontal) {');
  FPack.add('					y1 = y2 = options.position === ''top'' ? me.bottom : me.top;');
  FPack.add('					y1 += aliasPixel;');
  FPack.add('					y2 += aliasPixel;');
  FPack.add('				} else {');
  FPack.add('					x1 = x2 = options.position === ''left'' ? me.right : me.left;');
  FPack.add('					x1 += aliasPixel;');
  FPack.add('					x2 += aliasPixel;');
  FPack.add('				}');
  FPack.add('');
  FPack.add('				context.beginPath();');
  FPack.add('				context.moveTo(x1, y1);');
  FPack.add('				context.lineTo(x2, y2);');
  FPack.add('				context.stroke();');
  FPack.add('			}');
  FPack.add('		}');
  FPack.add('	});');
  FPack.add('};');
  FPack.add('');
  FPack.add('},{"25":25,"26":26,"34":34,"45":45}],33:[function(require,module,exports){');
  FPack.add('''use strict'';');
  FPack.add('');
  FPack.add('var defaults = require(25);');
  FPack.add('var helpers = require(45);');
  FPack.add('var layouts = require(30);');
  FPack.add('');
  FPack.add('module.exports = function(Chart) {');
  FPack.add('');
  FPack.add('	Chart.scaleService = {');
  FPack.add('		// Scale registration object. Extensions can register new scale types (such as log or DB scales) and then');
  FPack.add('		// use the new chart options to grab the correct scale');
  FPack.add('		constructors: {},');
  FPack.add('		// Use a registration function so that we can move to an ES6 map when we no longer need to support');
  FPack.add('		// old browsers');
  FPack.add('');
  FPack.add('		// Scale config defaults');
  FPack.add('		defaults: {},');
  FPack.add('		registerScaleType: function(type, scaleConstructor, scaleDefaults) {');
  FPack.add('			this.constructors[type] = scaleConstructor;');
  FPack.add('			this.defaults[type] = helpers.clone(scaleDefaults);');
  FPack.add('		},');
  FPack.add('		getScaleConstructor: function(type) {');
  FPack.add('			return this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;');
  FPack.add('		},');
  FPack.add('		getScaleDefaults: function(type) {');
  FPack.add('			// Return the scale defaults merged with the global settings so that we always use the latest ones');
  FPack.add('			return this.defaults.hasOwnProperty(type) ? helpers.merge({}, [defaults.scale, this.defaults[type]]) : {};');
  FPack.add('		},');
  FPack.add('		updateScaleDefaults: function(type, additions) {');
  FPack.add('			var me = this;');
  FPack.add('			if (me.defaults.hasOwnProperty(type)) {');
  FPack.add('				me.defaults[type] = helpers.extend(me.defaults[type], additions);');
  FPack.add('			}');
  FPack.add('		},');
  FPack.add('		addScalesToLayout: function(chart) {');
  FPack.add('			// Adds each scale to the chart.boxes array to be sized accordingly');
  FPack.add('			helpers.each(chart.scales, function(scale) {');
  FPack.add('				// Set ILayoutItem parameters for backwards compatibility');
  FPack.add('				scale.fullWidth = scale.options.fullWidth;');
  FPack.add('				scale.position = scale.options.position;');
  FPack.add('				scale.weight = scale.options.weight;');
  FPack.add('				layouts.addBox(chart, scale);');
  FPack.add('			});');
  FPack.add('		}');
  FPack.add('	};');
  FPack.add('};');
  FPack.add('');
  FPack.add('},{"25":25,"30":30,"45":45}],34:[function(require,module,exports){');
  FPack.add('''use strict'';');
  FPack.add('');
  FPack.add('var helpers = require(45);');
  FPack.add('');
  FPack.add('/**');
  FPack.add(' * Namespace to hold static tick generation functions');
  FPack.add(' * @namespace Chart.Ticks');
  FPack.add(' */');
  FPack.add('module.exports = {');
  FPack.add('	/**');
  FPack.add('	 * Namespace to hold formatters for different types of ticks');
  FPack.add('	 * @namespace Chart.Ticks.formatters');
  FPack.add('	 */');
  FPack.add('	formatters: {');
  FPack.add('		/**');
  FPack.add('		 * Formatter for value labels');
  FPack.add('		 * @method Chart.Ticks.formatters.values');
  FPack.add('		 * @param value the value to display');
  FPack.add('		 * @return {String|Array} the label to display');
  FPack.add('		 */');
  FPack.add('		values: function(value) {');
  FPack.add('			return helpers.isArray(value) ? value : '''' + value;');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		/**');
  FPack.add('		 * Formatter for linear numeric ticks');
  FPack.add('		 * @method Chart.Ticks.formatters.linear');
  FPack.add('		 * @param tickValue {Number} the value to be formatted');
  FPack.add('		 * @param index {Number} the position of the tickValue parameter in the ticks array');
  FPack.add('		 * @param ticks {Array<Number>} the list of ticks being converted');
  FPack.add('		 * @return {String} string representation of the tickValue parameter');
  FPack.add('		 */');
  FPack.add('		linear: function(tickValue, index, ticks) {');
  FPack.add('			// If we have lots of ticks, don''t use the ones');
  FPack.add('			var delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0];');
  FPack.add('');
  FPack.add('			// If we have a number like 2.5 as the delta, figure out how many decimal places we need');
  FPack.add('			if (Math.abs(delta) > 1) {');
  FPack.add('				if (tickValue !== Math.floor(tickValue)) {');
  FPack.add('					// not an integer');
  FPack.add('					delta = tickValue - Math.floor(tickValue);');
  FPack.add('				}');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			var logDelta = helpers.log10(Math.abs(delta));');
  FPack.add('			var tickString = '''';');
  FPack.add('');
  FPack.add('			if (tickValue !== 0) {');
  FPack.add('				var numDecimal = -1 * Math.floor(logDelta);');
  FPack.add('				numDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places');
  FPack.add('				tickString = tickValue.toFixed(numDecimal);');
  FPack.add('			} else {');
  FPack.add('				tickString = ''0''; // never show decimal places for 0');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			return tickString;');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		logarithmic: function(tickValue, index, ticks) {');
  FPack.add('			var remain = tickValue / (Math.pow(10, Math.floor(helpers.log10(tickValue))));');
  FPack.add('');
  FPack.add('			if (tickValue === 0) {');
  FPack.add('				return ''0'';');
  FPack.add('			} else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {');
  FPack.add('				return tickValue.toExponential();');
  FPack.add('			}');
  FPack.add('			return '''';');
  FPack.add('		}');
  FPack.add('	}');
  FPack.add('};');
  FPack.add('');
  FPack.add('},{"45":45}],35:[function(require,module,exports){');
  FPack.add('''use strict'';');
  FPack.add('');
  FPack.add('var defaults = require(25);');
  FPack.add('var Element = require(26);');
  FPack.add('var helpers = require(45);');
  FPack.add('');
  FPack.add('defaults._set(''global'', {');
  FPack.add('	tooltips: {');
  FPack.add('		enabled: true,');
  FPack.add('		custom: null,');
  FPack.add('		mode: ''nearest'',');
  FPack.add('		position: ''average'',');
  FPack.add('		intersect: true,');
  FPack.add('		backgroundColor: ''rgba(0,0,0,0.8)'',');
  FPack.add('		titleFontStyle: ''bold'',');
  FPack.add('		titleSpacing: 2,');
  FPack.add('		titleMarginBottom: 6,');
  FPack.add('		titleFontColor: ''#fff'',');
  FPack.add('		titleAlign: ''left'',');
  FPack.add('		bodySpacing: 2,');
  FPack.add('		bodyFontColor: ''#fff'',');
  FPack.add('		bodyAlign: ''left'',');
  FPack.add('		footerFontStyle: ''bold'',');
  FPack.add('		footerSpacing: 2,');
  FPack.add('		footerMarginTop: 6,');
  FPack.add('		footerFontColor: ''#fff'',');
  FPack.add('		footerAlign: ''left'',');
  FPack.add('		yPadding: 6,');
  FPack.add('		xPadding: 6,');
  FPack.add('		caretPadding: 2,');
  FPack.add('		caretSize: 5,');
  FPack.add('		cornerRadius: 6,');
  FPack.add('		multiKeyBackground: ''#fff'',');
  FPack.add('		displayColors: true,');
  FPack.add('		borderColor: ''rgba(0,0,0,0)'',');
  FPack.add('		borderWidth: 0,');
  FPack.add('		callbacks: {');
  FPack.add('			// Args are: (tooltipItems, data)');
  FPack.add('			beforeTitle: helpers.noop,');
  FPack.add('			title: function(tooltipItems, data) {');
  FPack.add('				// Pick first xLabel for now');
  FPack.add('				var title = '''';');
  FPack.add('				var labels = data.labels;');
  FPack.add('				var labelCount = labels ? labels.length : 0;');
  FPack.add('');
  FPack.add('				if (tooltipItems.length > 0) {');
  FPack.add('					var item = tooltipItems[0];');
  FPack.add('');
  FPack.add('					if (item.xLabel) {');
  FPack.add('						title = item.xLabel;');
  FPack.add('					} else if (labelCount > 0 && item.index < labelCount) {');
  FPack.add('						title = labels[item.index];');
  FPack.add('					}');
  FPack.add('				}');
  FPack.add('');
  FPack.add('				return title;');
  FPack.add('			},');
  FPack.add('			afterTitle: helpers.noop,');
  FPack.add('');
  FPack.add('			// Args are: (tooltipItems, data)');
  FPack.add('			beforeBody: helpers.noop,');
  FPack.add('');
  FPack.add('			// Args are: (tooltipItem, data)');
  FPack.add('			beforeLabel: helpers.noop,');
  FPack.add('			label: function(tooltipItem, data) {');
  FPack.add('				var label = data.datasets[tooltipItem.datasetIndex].label || '''';');
  FPack.add('');
  FPack.add('				if (label) {');
  FPack.add('					label += '': '';');
  FPack.add('				}');
  FPack.add('				label += tooltipItem.yLabel;');
  FPack.add('				return label;');
  FPack.add('			},');
  FPack.add('			labelColor: function(tooltipItem, chart) {');
  FPack.add('				var meta = chart.getDatasetMeta(tooltipItem.datasetIndex);');
  FPack.add('				var activeElement = meta.data[tooltipItem.index];');
  FPack.add('				var view = activeElement._view;');
  FPack.add('				return {');
  FPack.add('					borderColor: view.borderColor,');
  FPack.add('					backgroundColor: view.backgroundColor');
  FPack.add('				};');
  FPack.add('			},');
  FPack.add('			labelTextColor: function() {');
  FPack.add('				return this._options.bodyFontColor;');
  FPack.add('			},');
  FPack.add('			afterLabel: helpers.noop,');
  FPack.add('');
  FPack.add('			// Args are: (tooltipItems, data)');
  FPack.add('			afterBody: helpers.noop,');
  FPack.add('');
  FPack.add('			// Args are: (tooltipItems, data)');
  FPack.add('			beforeFooter: helpers.noop,');
  FPack.add('			footer: helpers.noop,');
  FPack.add('			afterFooter: helpers.noop');
  FPack.add('		}');
  FPack.add('	}');
  FPack.add('});');
  FPack.add('');
  FPack.add('module.exports = function(Chart) {');
  FPack.add('');
  FPack.add('	/**');
  FPack.add(' 	 * Helper method to merge the opacity into a color');
  FPack.add(' 	 */');
  FPack.add('	function mergeOpacity(colorString, opacity) {');
  FPack.add('		var color = helpers.color(colorString);');
  FPack.add('		return color.alpha(opacity * color.alpha()).rgbaString();');
  FPack.add('	}');
  FPack.add('');
  FPack.add('	// Helper to push or concat based on if the 2nd parameter is an array or not');
  FPack.add('	function pushOrConcat(base, toPush) {');
  FPack.add('		if (toPush) {');
  FPack.add('			if (helpers.isArray(toPush)) {');
  FPack.add('				// base = base.concat(toPush);');
  FPack.add('				Array.prototype.push.apply(base, toPush);');
  FPack.add('			} else {');
  FPack.add('				base.push(toPush);');
  FPack.add('			}');
  FPack.add('		}');
  FPack.add('');
  FPack.add('		return base;');
  FPack.add('	}');
  FPack.add('');
  FPack.add('	// Private helper to create a tooltip item model');
  FPack.add('	// @param element : the chart element (point, arc, bar) to create the tooltip item for');
  FPack.add('	// @return : new tooltip item');
  FPack.add('	function createTooltipItem(element) {');
  FPack.add('		var xScale = element._xScale;');
  FPack.add('		var yScale = element._yScale || element._scale; // handle radar || polarArea charts');
  FPack.add('		var index = element._index;');
  FPack.add('		var datasetIndex = element._datasetIndex;');
  FPack.add('');
  FPack.add('		return {');
  FPack.add('			xLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '''',');
  FPack.add('			yLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '''',');
  FPack.add('			index: index,');
  FPack.add('			datasetIndex: datasetIndex,');
  FPack.add('			x: element._model.x,');
end;

procedure TChartbundleJS.ChartbundleJS_39;
begin
  FPack.add('			y: element._model.y');
  FPack.add('		};');
  FPack.add('	}');
  FPack.add('');
  FPack.add('	/**');
  FPack.add('	 * Helper to get the reset model for the tooltip');
  FPack.add('	 * @param tooltipOpts {Object} the tooltip options');
  FPack.add('	 */');
  FPack.add('	function getBaseModel(tooltipOpts) {');
  FPack.add('		var globalDefaults = defaults.global;');
  FPack.add('		var valueOrDefault = helpers.valueOrDefault;');
  FPack.add('');
  FPack.add('		return {');
  FPack.add('			// Positioning');
  FPack.add('			xPadding: tooltipOpts.xPadding,');
  FPack.add('			yPadding: tooltipOpts.yPadding,');
  FPack.add('			xAlign: tooltipOpts.xAlign,');
  FPack.add('			yAlign: tooltipOpts.yAlign,');
  FPack.add('');
  FPack.add('			// Body');
  FPack.add('			bodyFontColor: tooltipOpts.bodyFontColor,');
  FPack.add('			_bodyFontFamily: valueOrDefault(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),');
  FPack.add('			_bodyFontStyle: valueOrDefault(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),');
  FPack.add('			_bodyAlign: tooltipOpts.bodyAlign,');
  FPack.add('			bodyFontSize: valueOrDefault(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),');
  FPack.add('			bodySpacing: tooltipOpts.bodySpacing,');
  FPack.add('');
  FPack.add('			// Title');
  FPack.add('			titleFontColor: tooltipOpts.titleFontColor,');
  FPack.add('			_titleFontFamily: valueOrDefault(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),');
  FPack.add('			_titleFontStyle: valueOrDefault(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),');
  FPack.add('			titleFontSize: valueOrDefault(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),');
  FPack.add('			_titleAlign: tooltipOpts.titleAlign,');
  FPack.add('			titleSpacing: tooltipOpts.titleSpacing,');
  FPack.add('			titleMarginBottom: tooltipOpts.titleMarginBottom,');
  FPack.add('');
  FPack.add('			// Footer');
  FPack.add('			footerFontColor: tooltipOpts.footerFontColor,');
  FPack.add('			_footerFontFamily: valueOrDefault(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),');
  FPack.add('			_footerFontStyle: valueOrDefault(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),');
  FPack.add('			footerFontSize: valueOrDefault(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),');
  FPack.add('			_footerAlign: tooltipOpts.footerAlign,');
  FPack.add('			footerSpacing: tooltipOpts.footerSpacing,');
  FPack.add('			footerMarginTop: tooltipOpts.footerMarginTop,');
  FPack.add('');
  FPack.add('			// Appearance');
  FPack.add('			caretSize: tooltipOpts.caretSize,');
  FPack.add('			cornerRadius: tooltipOpts.cornerRadius,');
  FPack.add('			backgroundColor: tooltipOpts.backgroundColor,');
  FPack.add('			opacity: 0,');
  FPack.add('			legendColorBackground: tooltipOpts.multiKeyBackground,');
  FPack.add('			displayColors: tooltipOpts.displayColors,');
  FPack.add('			borderColor: tooltipOpts.borderColor,');
  FPack.add('			borderWidth: tooltipOpts.borderWidth');
  FPack.add('		};');
  FPack.add('	}');
  FPack.add('');
  FPack.add('	/**');
  FPack.add('	 * Get the size of the tooltip');
  FPack.add('	 */');
  FPack.add('	function getTooltipSize(tooltip, model) {');
  FPack.add('		var ctx = tooltip._chart.ctx;');
  FPack.add('');
  FPack.add('		var height = model.yPadding * 2; // Tooltip Padding');
  FPack.add('		var width = 0;');
  FPack.add('');
  FPack.add('		// Count of all lines in the body');
  FPack.add('		var body = model.body;');
  FPack.add('		var combinedBodyLength = body.reduce(function(count, bodyItem) {');
  FPack.add('			return count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;');
  FPack.add('		}, 0);');
  FPack.add('		combinedBodyLength += model.beforeBody.length + model.afterBody.length;');
  FPack.add('');
  FPack.add('		var titleLineCount = model.title.length;');
  FPack.add('		var footerLineCount = model.footer.length;');
  FPack.add('		var titleFontSize = model.titleFontSize;');
  FPack.add('		var bodyFontSize = model.bodyFontSize;');
  FPack.add('		var footerFontSize = model.footerFontSize;');
  FPack.add('');
  FPack.add('		height += titleLineCount * titleFontSize; // Title Lines');
  FPack.add('		height += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0; // Title Line Spacing');
  FPack.add('		height += titleLineCount ? model.titleMarginBottom : 0; // Title''s bottom Margin');
  FPack.add('		height += combinedBodyLength * bodyFontSize; // Body Lines');
  FPack.add('		height += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0; // Body Line Spacing');
  FPack.add('		height += footerLineCount ? model.footerMarginTop : 0; // Footer Margin');
  FPack.add('		height += footerLineCount * (footerFontSize); // Footer Lines');
  FPack.add('		height += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0; // Footer Line Spacing');
  FPack.add('');
  FPack.add('		// Title width');
  FPack.add('		var widthPadding = 0;');
  FPack.add('		var maxLineWidth = function(line) {');
  FPack.add('			width = Math.max(width, ctx.measureText(line).width + widthPadding);');
  FPack.add('		};');
  FPack.add('');
  FPack.add('		ctx.font = helpers.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);');
  FPack.add('		helpers.each(model.title, maxLineWidth);');
  FPack.add('');
  FPack.add('		// Body width');
  FPack.add('		ctx.font = helpers.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);');
  FPack.add('		helpers.each(model.beforeBody.concat(model.afterBody), maxLineWidth);');
  FPack.add('');
  FPack.add('		// Body lines may include some extra width due to the color box');
  FPack.add('		widthPadding = model.displayColors ? (bodyFontSize + 2) : 0;');
  FPack.add('		helpers.each(body, function(bodyItem) {');
  FPack.add('			helpers.each(bodyItem.before, maxLineWidth);');
  FPack.add('			helpers.each(bodyItem.lines, maxLineWidth);');
  FPack.add('			helpers.each(bodyItem.after, maxLineWidth);');
  FPack.add('		});');
  FPack.add('');
  FPack.add('		// Reset back to 0');
  FPack.add('		widthPadding = 0;');
  FPack.add('');
  FPack.add('		// Footer width');
  FPack.add('		ctx.font = helpers.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);');
  FPack.add('		helpers.each(model.footer, maxLineWidth);');
  FPack.add('');
  FPack.add('		// Add padding');
  FPack.add('		width += 2 * model.xPadding;');
  FPack.add('');
  FPack.add('		return {');
  FPack.add('			width: width,');
  FPack.add('			height: height');
  FPack.add('		};');
  FPack.add('	}');
  FPack.add('');
  FPack.add('	/**');
  FPack.add('	 * Helper to get the alignment of a tooltip given the size');
  FPack.add('	 */');
  FPack.add('	function determineAlignment(tooltip, size) {');
  FPack.add('		var model = tooltip._model;');
  FPack.add('		var chart = tooltip._chart;');
  FPack.add('		var chartArea = tooltip._chart.chartArea;');
  FPack.add('		var xAlign = ''center'';');
  FPack.add('		var yAlign = ''center'';');
  FPack.add('');
  FPack.add('		if (model.y < size.height) {');
  FPack.add('			yAlign = ''top'';');
  FPack.add('		} else if (model.y > (chart.height - size.height)) {');
  FPack.add('			yAlign = ''bottom'';');
  FPack.add('		}');
  FPack.add('');
  FPack.add('		var lf, rf; // functions to determine left, right alignment');
  FPack.add('		var olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart');
  FPack.add('		var yf; // function to get the y alignment if the tooltip goes outside of the left or right edges');
  FPack.add('		var midX = (chartArea.left + chartArea.right) / 2;');
  FPack.add('		var midY = (chartArea.top + chartArea.bottom) / 2;');
  FPack.add('');
  FPack.add('		if (yAlign === ''center'') {');
  FPack.add('			lf = function(x) {');
  FPack.add('				return x <= midX;');
  FPack.add('			};');
  FPack.add('			rf = function(x) {');
  FPack.add('				return x > midX;');
  FPack.add('			};');
  FPack.add('		} else {');
  FPack.add('			lf = function(x) {');
  FPack.add('				return x <= (size.width / 2);');
  FPack.add('			};');
  FPack.add('			rf = function(x) {');
  FPack.add('				return x >= (chart.width - (size.width / 2));');
  FPack.add('			};');
  FPack.add('		}');
  FPack.add('');
  FPack.add('		olf = function(x) {');
  FPack.add('			return x + size.width + model.caretSize + model.caretPadding > chart.width;');
  FPack.add('		};');
  FPack.add('		orf = function(x) {');
  FPack.add('			return x - size.width - model.caretSize - model.caretPadding < 0;');
  FPack.add('		};');
  FPack.add('		yf = function(y) {');
  FPack.add('			return y <= midY ? ''top'' : ''bottom'';');
  FPack.add('		};');
  FPack.add('');
  FPack.add('		if (lf(model.x)) {');
  FPack.add('			xAlign = ''left'';');
  FPack.add('');
  FPack.add('			// Is tooltip too wide and goes over the right side of the chart.?');
  FPack.add('			if (olf(model.x)) {');
  FPack.add('				xAlign = ''center'';');
  FPack.add('				yAlign = yf(model.y);');
  FPack.add('			}');
  FPack.add('		} else if (rf(model.x)) {');
  FPack.add('			xAlign = ''right'';');
  FPack.add('');
  FPack.add('			// Is tooltip too wide and goes outside left edge of canvas?');
  FPack.add('			if (orf(model.x)) {');
  FPack.add('				xAlign = ''center'';');
  FPack.add('				yAlign = yf(model.y);');
  FPack.add('			}');
  FPack.add('		}');
  FPack.add('');
  FPack.add('		var opts = tooltip._options;');
  FPack.add('		return {');
  FPack.add('			xAlign: opts.xAlign ? opts.xAlign : xAlign,');
  FPack.add('			yAlign: opts.yAlign ? opts.yAlign : yAlign');
  FPack.add('		};');
  FPack.add('	}');
  FPack.add('');
  FPack.add('	/**');
  FPack.add('	 * @Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment');
  FPack.add('	 */');
  FPack.add('	function getBackgroundPoint(vm, size, alignment, chart) {');
  FPack.add('		// Background Position');
  FPack.add('		var x = vm.x;');
  FPack.add('		var y = vm.y;');
  FPack.add('');
  FPack.add('		var caretSize = vm.caretSize;');
  FPack.add('		var caretPadding = vm.caretPadding;');
  FPack.add('		var cornerRadius = vm.cornerRadius;');
  FPack.add('		var xAlign = alignment.xAlign;');
  FPack.add('		var yAlign = alignment.yAlign;');
  FPack.add('		var paddingAndSize = caretSize + caretPadding;');
  FPack.add('		var radiusAndPadding = cornerRadius + caretPadding;');
  FPack.add('');
  FPack.add('		if (xAlign === ''right'') {');
  FPack.add('			x -= size.width;');
  FPack.add('		} else if (xAlign === ''center'') {');
  FPack.add('			x -= (size.width / 2);');
  FPack.add('			if (x + size.width > chart.width) {');
  FPack.add('				x = chart.width - size.width;');
  FPack.add('			}');
  FPack.add('			if (x < 0) {');
  FPack.add('				x = 0;');
  FPack.add('			}');
  FPack.add('		}');
  FPack.add('');
  FPack.add('		if (yAlign === ''top'') {');
  FPack.add('			y += paddingAndSize;');
  FPack.add('		} else if (yAlign === ''bottom'') {');
  FPack.add('			y -= size.height + paddingAndSize;');
  FPack.add('		} else {');
  FPack.add('			y -= (size.height / 2);');
  FPack.add('		}');
  FPack.add('');
  FPack.add('		if (yAlign === ''center'') {');
  FPack.add('			if (xAlign === ''left'') {');
  FPack.add('				x += paddingAndSize;');
  FPack.add('			} else if (xAlign === ''right'') {');
  FPack.add('				x -= paddingAndSize;');
  FPack.add('			}');
  FPack.add('		} else if (xAlign === ''left'') {');
  FPack.add('			x -= radiusAndPadding;');
  FPack.add('		} else if (xAlign === ''right'') {');
  FPack.add('			x += radiusAndPadding;');
  FPack.add('		}');
  FPack.add('');
  FPack.add('		return {');
  FPack.add('			x: x,');
  FPack.add('			y: y');
  FPack.add('		};');
  FPack.add('	}');
  FPack.add('');
  FPack.add('	Chart.Tooltip = Element.extend({');
  FPack.add('		initialize: function() {');
  FPack.add('			this._model = getBaseModel(this._options);');
  FPack.add('			this._lastActive = [];');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		// Get the title');
  FPack.add('		// Args are: (tooltipItem, data)');
  FPack.add('		getTitle: function() {');
  FPack.add('			var me = this;');
  FPack.add('			var opts = me._options;');
  FPack.add('			var callbacks = opts.callbacks;');
  FPack.add('');
  FPack.add('			var beforeTitle = callbacks.beforeTitle.apply(me, arguments);');
  FPack.add('			var title = callbacks.title.apply(me, arguments);');
  FPack.add('			var afterTitle = callbacks.afterTitle.apply(me, arguments);');
  FPack.add('');
  FPack.add('			var lines = [];');
  FPack.add('			lines = pushOrConcat(lines, beforeTitle);');
  FPack.add('			lines = pushOrConcat(lines, title);');
  FPack.add('			lines = pushOrConcat(lines, afterTitle);');
  FPack.add('');
  FPack.add('			return lines;');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		// Args are: (tooltipItem, data)');
  FPack.add('		getBeforeBody: function() {');
  FPack.add('			var lines = this._options.callbacks.beforeBody.apply(this, arguments);');
  FPack.add('			return helpers.isArray(lines) ? lines : lines !== undefined ? [lines] : [];');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		// Args are: (tooltipItem, data)');
  FPack.add('		getBody: function(tooltipItems, data) {');
  FPack.add('			var me = this;');
  FPack.add('			var callbacks = me._options.callbacks;');
  FPack.add('			var bodyItems = [];');
  FPack.add('');
  FPack.add('			helpers.each(tooltipItems, function(tooltipItem) {');
  FPack.add('				var bodyItem = {');
  FPack.add('					before: [],');
  FPack.add('					lines: [],');
  FPack.add('					after: []');
  FPack.add('				};');
  FPack.add('				pushOrConcat(bodyItem.before, callbacks.beforeLabel.call(me, tooltipItem, data));');
  FPack.add('				pushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));');
  FPack.add('				pushOrConcat(bodyItem.after, callbacks.afterLabel.call(me, tooltipItem, data));');
  FPack.add('');
  FPack.add('				bodyItems.push(bodyItem);');
  FPack.add('			});');
  FPack.add('');
  FPack.add('			return bodyItems;');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		// Args are: (tooltipItem, data)');
  FPack.add('		getAfterBody: function() {');
  FPack.add('			var lines = this._options.callbacks.afterBody.apply(this, arguments);');
  FPack.add('			return helpers.isArray(lines) ? lines : lines !== undefined ? [lines] : [];');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		// Get the footer and beforeFooter and afterFooter lines');
  FPack.add('		// Args are: (tooltipItem, data)');
  FPack.add('		getFooter: function() {');
  FPack.add('			var me = this;');
  FPack.add('			var callbacks = me._options.callbacks;');
  FPack.add('');
  FPack.add('			var beforeFooter = callbacks.beforeFooter.apply(me, arguments);');
  FPack.add('			var footer = callbacks.footer.apply(me, arguments);');
  FPack.add('			var afterFooter = callbacks.afterFooter.apply(me, arguments);');
  FPack.add('');
  FPack.add('			var lines = [];');
  FPack.add('			lines = pushOrConcat(lines, beforeFooter);');
  FPack.add('			lines = pushOrConcat(lines, footer);');
  FPack.add('			lines = pushOrConcat(lines, afterFooter);');
  FPack.add('');
  FPack.add('			return lines;');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		update: function(changed) {');
  FPack.add('			var me = this;');
  FPack.add('			var opts = me._options;');
  FPack.add('');
  FPack.add('			// Need to regenerate the model because its faster than using extend and it is necessary due to the optimization in Chart.Element.transition');
  FPack.add('			// that does _view = _model if ease === 1. This causes the 2nd tooltip update to set properties in both the view and model at the same time');
  FPack.add('			// which breaks any animations.');
end;

procedure TChartbundleJS.ChartbundleJS_40;
begin
  FPack.add('			var existingModel = me._model;');
  FPack.add('			var model = me._model = getBaseModel(opts);');
  FPack.add('			var active = me._active;');
  FPack.add('');
  FPack.add('			var data = me._data;');
  FPack.add('');
  FPack.add('			// In the case where active.length === 0 we need to keep these at existing values for good animations');
  FPack.add('			var alignment = {');
  FPack.add('				xAlign: existingModel.xAlign,');
  FPack.add('				yAlign: existingModel.yAlign');
  FPack.add('			};');
  FPack.add('			var backgroundPoint = {');
  FPack.add('				x: existingModel.x,');
  FPack.add('				y: existingModel.y');
  FPack.add('			};');
  FPack.add('			var tooltipSize = {');
  FPack.add('				width: existingModel.width,');
  FPack.add('				height: existingModel.height');
  FPack.add('			};');
  FPack.add('			var tooltipPosition = {');
  FPack.add('				x: existingModel.caretX,');
  FPack.add('				y: existingModel.caretY');
  FPack.add('			};');
  FPack.add('');
  FPack.add('			var i, len;');
  FPack.add('');
  FPack.add('			if (active.length) {');
  FPack.add('				model.opacity = 1;');
  FPack.add('');
  FPack.add('				var labelColors = [];');
  FPack.add('				var labelTextColors = [];');
  FPack.add('				tooltipPosition = Chart.Tooltip.positioners[opts.position].call(me, active, me._eventPosition);');
  FPack.add('');
  FPack.add('				var tooltipItems = [];');
  FPack.add('				for (i = 0, len = active.length; i < len; ++i) {');
  FPack.add('					tooltipItems.push(createTooltipItem(active[i]));');
  FPack.add('				}');
  FPack.add('');
  FPack.add('				// If the user provided a filter function, use it to modify the tooltip items');
  FPack.add('				if (opts.filter) {');
  FPack.add('					tooltipItems = tooltipItems.filter(function(a) {');
  FPack.add('						return opts.filter(a, data);');
  FPack.add('					});');
  FPack.add('				}');
  FPack.add('');
  FPack.add('				// If the user provided a sorting function, use it to modify the tooltip items');
  FPack.add('				if (opts.itemSort) {');
  FPack.add('					tooltipItems = tooltipItems.sort(function(a, b) {');
  FPack.add('						return opts.itemSort(a, b, data);');
  FPack.add('					});');
  FPack.add('				}');
  FPack.add('');
  FPack.add('				// Determine colors for boxes');
  FPack.add('				helpers.each(tooltipItems, function(tooltipItem) {');
  FPack.add('					labelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, me._chart));');
  FPack.add('					labelTextColors.push(opts.callbacks.labelTextColor.call(me, tooltipItem, me._chart));');
  FPack.add('				});');
  FPack.add('');
  FPack.add('');
  FPack.add('				// Build the Text Lines');
  FPack.add('				model.title = me.getTitle(tooltipItems, data);');
  FPack.add('				model.beforeBody = me.getBeforeBody(tooltipItems, data);');
  FPack.add('				model.body = me.getBody(tooltipItems, data);');
  FPack.add('				model.afterBody = me.getAfterBody(tooltipItems, data);');
  FPack.add('				model.footer = me.getFooter(tooltipItems, data);');
  FPack.add('');
  FPack.add('				// Initial positioning and colors');
  FPack.add('				model.x = Math.round(tooltipPosition.x);');
  FPack.add('				model.y = Math.round(tooltipPosition.y);');
  FPack.add('				model.caretPadding = opts.caretPadding;');
  FPack.add('				model.labelColors = labelColors;');
  FPack.add('				model.labelTextColors = labelTextColors;');
  FPack.add('');
  FPack.add('				// data points');
  FPack.add('				model.dataPoints = tooltipItems;');
  FPack.add('');
  FPack.add('				// We need to determine alignment of the tooltip');
  FPack.add('				tooltipSize = getTooltipSize(this, model);');
  FPack.add('				alignment = determineAlignment(this, tooltipSize);');
  FPack.add('				// Final Size and Position');
  FPack.add('				backgroundPoint = getBackgroundPoint(model, tooltipSize, alignment, me._chart);');
  FPack.add('			} else {');
  FPack.add('				model.opacity = 0;');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			model.xAlign = alignment.xAlign;');
  FPack.add('			model.yAlign = alignment.yAlign;');
  FPack.add('			model.x = backgroundPoint.x;');
  FPack.add('			model.y = backgroundPoint.y;');
  FPack.add('			model.width = tooltipSize.width;');
  FPack.add('			model.height = tooltipSize.height;');
  FPack.add('');
  FPack.add('			// Point where the caret on the tooltip points to');
  FPack.add('			model.caretX = tooltipPosition.x;');
  FPack.add('			model.caretY = tooltipPosition.y;');
  FPack.add('');
  FPack.add('			me._model = model;');
  FPack.add('');
  FPack.add('			if (changed && opts.custom) {');
  FPack.add('				opts.custom.call(me, model);');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			return me;');
  FPack.add('		},');
  FPack.add('		drawCaret: function(tooltipPoint, size) {');
  FPack.add('			var ctx = this._chart.ctx;');
  FPack.add('			var vm = this._view;');
  FPack.add('			var caretPosition = this.getCaretPosition(tooltipPoint, size, vm);');
  FPack.add('');
  FPack.add('			ctx.lineTo(caretPosition.x1, caretPosition.y1);');
  FPack.add('			ctx.lineTo(caretPosition.x2, caretPosition.y2);');
  FPack.add('			ctx.lineTo(caretPosition.x3, caretPosition.y3);');
  FPack.add('		},');
  FPack.add('		getCaretPosition: function(tooltipPoint, size, vm) {');
  FPack.add('			var x1, x2, x3, y1, y2, y3;');
  FPack.add('			var caretSize = vm.caretSize;');
  FPack.add('			var cornerRadius = vm.cornerRadius;');
  FPack.add('			var xAlign = vm.xAlign;');
  FPack.add('			var yAlign = vm.yAlign;');
  FPack.add('			var ptX = tooltipPoint.x;');
  FPack.add('			var ptY = tooltipPoint.y;');
  FPack.add('			var width = size.width;');
  FPack.add('			var height = size.height;');
  FPack.add('');
  FPack.add('			if (yAlign === ''center'') {');
  FPack.add('				y2 = ptY + (height / 2);');
  FPack.add('');
  FPack.add('				if (xAlign === ''left'') {');
  FPack.add('					x1 = ptX;');
  FPack.add('					x2 = x1 - caretSize;');
  FPack.add('					x3 = x1;');
  FPack.add('');
  FPack.add('					y1 = y2 + caretSize;');
  FPack.add('					y3 = y2 - caretSize;');
  FPack.add('				} else {');
  FPack.add('					x1 = ptX + width;');
  FPack.add('					x2 = x1 + caretSize;');
  FPack.add('					x3 = x1;');
  FPack.add('');
  FPack.add('					y1 = y2 - caretSize;');
  FPack.add('					y3 = y2 + caretSize;');
  FPack.add('				}');
  FPack.add('			} else {');
  FPack.add('				if (xAlign === ''left'') {');
  FPack.add('					x2 = ptX + cornerRadius + (caretSize);');
  FPack.add('					x1 = x2 - caretSize;');
  FPack.add('					x3 = x2 + caretSize;');
  FPack.add('				} else if (xAlign === ''right'') {');
  FPack.add('					x2 = ptX + width - cornerRadius - caretSize;');
  FPack.add('					x1 = x2 - caretSize;');
  FPack.add('					x3 = x2 + caretSize;');
  FPack.add('				} else {');
  FPack.add('					x2 = vm.caretX;');
  FPack.add('					x1 = x2 - caretSize;');
  FPack.add('					x3 = x2 + caretSize;');
  FPack.add('				}');
  FPack.add('				if (yAlign === ''top'') {');
  FPack.add('					y1 = ptY;');
  FPack.add('					y2 = y1 - caretSize;');
  FPack.add('					y3 = y1;');
  FPack.add('				} else {');
  FPack.add('					y1 = ptY + height;');
  FPack.add('					y2 = y1 + caretSize;');
  FPack.add('					y3 = y1;');
  FPack.add('					// invert drawing order');
  FPack.add('					var tmp = x3;');
  FPack.add('					x3 = x1;');
  FPack.add('					x1 = tmp;');
  FPack.add('				}');
  FPack.add('			}');
  FPack.add('			return {x1: x1, x2: x2, x3: x3, y1: y1, y2: y2, y3: y3};');
  FPack.add('		},');
  FPack.add('		drawTitle: function(pt, vm, ctx, opacity) {');
  FPack.add('			var title = vm.title;');
  FPack.add('');
  FPack.add('			if (title.length) {');
  FPack.add('				ctx.textAlign = vm._titleAlign;');
  FPack.add('				ctx.textBaseline = ''top'';');
  FPack.add('');
  FPack.add('				var titleFontSize = vm.titleFontSize;');
  FPack.add('				var titleSpacing = vm.titleSpacing;');
  FPack.add('');
  FPack.add('				ctx.fillStyle = mergeOpacity(vm.titleFontColor, opacity);');
  FPack.add('				ctx.font = helpers.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);');
  FPack.add('');
  FPack.add('				var i, len;');
  FPack.add('				for (i = 0, len = title.length; i < len; ++i) {');
  FPack.add('					ctx.fillText(title[i], pt.x, pt.y);');
  FPack.add('					pt.y += titleFontSize + titleSpacing; // Line Height and spacing');
  FPack.add('');
  FPack.add('					if (i + 1 === title.length) {');
  FPack.add('						pt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing');
  FPack.add('					}');
  FPack.add('				}');
  FPack.add('			}');
  FPack.add('		},');
  FPack.add('		drawBody: function(pt, vm, ctx, opacity) {');
  FPack.add('			var bodyFontSize = vm.bodyFontSize;');
  FPack.add('			var bodySpacing = vm.bodySpacing;');
  FPack.add('			var body = vm.body;');
  FPack.add('');
  FPack.add('			ctx.textAlign = vm._bodyAlign;');
  FPack.add('			ctx.textBaseline = ''top'';');
  FPack.add('			ctx.font = helpers.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);');
  FPack.add('');
  FPack.add('			// Before Body');
  FPack.add('			var xLinePadding = 0;');
  FPack.add('			var fillLineOfText = function(line) {');
  FPack.add('				ctx.fillText(line, pt.x + xLinePadding, pt.y);');
  FPack.add('				pt.y += bodyFontSize + bodySpacing;');
  FPack.add('			};');
  FPack.add('');
  FPack.add('			// Before body lines');
  FPack.add('			ctx.fillStyle = mergeOpacity(vm.bodyFontColor, opacity);');
  FPack.add('			helpers.each(vm.beforeBody, fillLineOfText);');
  FPack.add('');
  FPack.add('			var drawColorBoxes = vm.displayColors;');
  FPack.add('			xLinePadding = drawColorBoxes ? (bodyFontSize + 2) : 0;');
  FPack.add('');
  FPack.add('			// Draw body lines now');
  FPack.add('			helpers.each(body, function(bodyItem, i) {');
  FPack.add('				var textColor = mergeOpacity(vm.labelTextColors[i], opacity);');
  FPack.add('				ctx.fillStyle = textColor;');
  FPack.add('				helpers.each(bodyItem.before, fillLineOfText);');
  FPack.add('');
  FPack.add('				helpers.each(bodyItem.lines, function(line) {');
  FPack.add('					// Draw Legend-like boxes if needed');
  FPack.add('					if (drawColorBoxes) {');
  FPack.add('						// Fill a white rect so that colours merge nicely if the opacity is < 1');
  FPack.add('						ctx.fillStyle = mergeOpacity(vm.legendColorBackground, opacity);');
  FPack.add('						ctx.fillRect(pt.x, pt.y, bodyFontSize, bodyFontSize);');
  FPack.add('');
  FPack.add('						// Border');
  FPack.add('						ctx.lineWidth = 1;');
  FPack.add('						ctx.strokeStyle = mergeOpacity(vm.labelColors[i].borderColor, opacity);');
  FPack.add('						ctx.strokeRect(pt.x, pt.y, bodyFontSize, bodyFontSize);');
  FPack.add('');
  FPack.add('						// Inner square');
  FPack.add('						ctx.fillStyle = mergeOpacity(vm.labelColors[i].backgroundColor, opacity);');
  FPack.add('						ctx.fillRect(pt.x + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);');
  FPack.add('						ctx.fillStyle = textColor;');
  FPack.add('					}');
  FPack.add('');
  FPack.add('					fillLineOfText(line);');
  FPack.add('				});');
  FPack.add('');
  FPack.add('				helpers.each(bodyItem.after, fillLineOfText);');
  FPack.add('			});');
  FPack.add('');
  FPack.add('			// Reset back to 0 for after body');
  FPack.add('			xLinePadding = 0;');
  FPack.add('');
  FPack.add('			// After body lines');
  FPack.add('			helpers.each(vm.afterBody, fillLineOfText);');
  FPack.add('			pt.y -= bodySpacing; // Remove last body spacing');
  FPack.add('		},');
  FPack.add('		drawFooter: function(pt, vm, ctx, opacity) {');
  FPack.add('			var footer = vm.footer;');
  FPack.add('');
  FPack.add('			if (footer.length) {');
  FPack.add('				pt.y += vm.footerMarginTop;');
  FPack.add('');
  FPack.add('				ctx.textAlign = vm._footerAlign;');
  FPack.add('				ctx.textBaseline = ''top'';');
  FPack.add('');
  FPack.add('				ctx.fillStyle = mergeOpacity(vm.footerFontColor, opacity);');
  FPack.add('				ctx.font = helpers.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);');
  FPack.add('');
  FPack.add('				helpers.each(footer, function(line) {');
  FPack.add('					ctx.fillText(line, pt.x, pt.y);');
  FPack.add('					pt.y += vm.footerFontSize + vm.footerSpacing;');
  FPack.add('				});');
  FPack.add('			}');
  FPack.add('		},');
  FPack.add('		drawBackground: function(pt, vm, ctx, tooltipSize, opacity) {');
  FPack.add('			ctx.fillStyle = mergeOpacity(vm.backgroundColor, opacity);');
  FPack.add('			ctx.strokeStyle = mergeOpacity(vm.borderColor, opacity);');
  FPack.add('			ctx.lineWidth = vm.borderWidth;');
  FPack.add('			var xAlign = vm.xAlign;');
  FPack.add('			var yAlign = vm.yAlign;');
  FPack.add('			var x = pt.x;');
  FPack.add('			var y = pt.y;');
  FPack.add('			var width = tooltipSize.width;');
  FPack.add('			var height = tooltipSize.height;');
  FPack.add('			var radius = vm.cornerRadius;');
  FPack.add('');
  FPack.add('			ctx.beginPath();');
  FPack.add('			ctx.moveTo(x + radius, y);');
  FPack.add('			if (yAlign === ''top'') {');
  FPack.add('				this.drawCaret(pt, tooltipSize);');
  FPack.add('			}');
  FPack.add('			ctx.lineTo(x + width - radius, y);');
  FPack.add('			ctx.quadraticCurveTo(x + width, y, x + width, y + radius);');
  FPack.add('			if (yAlign === ''center'' && xAlign === ''right'') {');
  FPack.add('				this.drawCaret(pt, tooltipSize);');
  FPack.add('			}');
  FPack.add('			ctx.lineTo(x + width, y + height - radius);');
  FPack.add('			ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);');
  FPack.add('			if (yAlign === ''bottom'') {');
  FPack.add('				this.drawCaret(pt, tooltipSize);');
  FPack.add('			}');
  FPack.add('			ctx.lineTo(x + radius, y + height);');
  FPack.add('			ctx.quadraticCurveTo(x, y + height, x, y + height - radius);');
  FPack.add('			if (yAlign === ''center'' && xAlign === ''left'') {');
  FPack.add('				this.drawCaret(pt, tooltipSize);');
  FPack.add('			}');
  FPack.add('			ctx.lineTo(x, y + radius);');
  FPack.add('			ctx.quadraticCurveTo(x, y, x + radius, y);');
  FPack.add('			ctx.closePath();');
  FPack.add('');
  FPack.add('			ctx.fill();');
  FPack.add('');
  FPack.add('			if (vm.borderWidth > 0) {');
  FPack.add('				ctx.stroke();');
  FPack.add('			}');
  FPack.add('		},');
  FPack.add('		draw: function() {');
  FPack.add('			var ctx = this._chart.ctx;');
  FPack.add('			var vm = this._view;');
  FPack.add('');
  FPack.add('			if (vm.opacity === 0) {');
  FPack.add('				return;');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			var tooltipSize = {');
  FPack.add('				width: vm.width,');
  FPack.add('				height: vm.height');
  FPack.add('			};');
  FPack.add('			var pt = {');
  FPack.add('				x: vm.x,');
  FPack.add('				y: vm.y');
  FPack.add('			};');
  FPack.add('');
  FPack.add('			// IE11/Edge does not like very small opacities, so snap to 0');
  FPack.add('			var opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity;');
  FPack.add('');
end;

procedure TChartbundleJS.ChartbundleJS_41;
begin
  FPack.add('			// Truthy/falsey value for empty tooltip');
  FPack.add('			var hasTooltipContent = vm.title.length || vm.beforeBody.length || vm.body.length || vm.afterBody.length || vm.footer.length;');
  FPack.add('');
  FPack.add('			if (this._options.enabled && hasTooltipContent) {');
  FPack.add('				// Draw Background');
  FPack.add('				this.drawBackground(pt, vm, ctx, tooltipSize, opacity);');
  FPack.add('');
  FPack.add('				// Draw Title, Body, and Footer');
  FPack.add('				pt.x += vm.xPadding;');
  FPack.add('				pt.y += vm.yPadding;');
  FPack.add('');
  FPack.add('				// Titles');
  FPack.add('				this.drawTitle(pt, vm, ctx, opacity);');
  FPack.add('');
  FPack.add('				// Body');
  FPack.add('				this.drawBody(pt, vm, ctx, opacity);');
  FPack.add('');
  FPack.add('				// Footer');
  FPack.add('				this.drawFooter(pt, vm, ctx, opacity);');
  FPack.add('			}');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		/**');
  FPack.add('		 * Handle an event');
  FPack.add('		 * @private');
  FPack.add('		 * @param {IEvent} event - The event to handle');
  FPack.add('		 * @returns {Boolean} true if the tooltip changed');
  FPack.add('		 */');
  FPack.add('		handleEvent: function(e) {');
  FPack.add('			var me = this;');
  FPack.add('			var options = me._options;');
  FPack.add('			var changed = false;');
  FPack.add('');
  FPack.add('			me._lastActive = me._lastActive || [];');
  FPack.add('');
  FPack.add('			// Find Active Elements for tooltips');
  FPack.add('			if (e.type === ''mouseout'') {');
  FPack.add('				me._active = [];');
  FPack.add('			} else {');
  FPack.add('				me._active = me._chart.getElementsAtEventForMode(e, options.mode, options);');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			// Remember Last Actives');
  FPack.add('			changed = !helpers.arrayEquals(me._active, me._lastActive);');
  FPack.add('');
  FPack.add('			// Only handle target event on tooltip change');
  FPack.add('			if (changed) {');
  FPack.add('				me._lastActive = me._active;');
  FPack.add('');
  FPack.add('				if (options.enabled || options.custom) {');
  FPack.add('					me._eventPosition = {');
  FPack.add('						x: e.x,');
  FPack.add('						y: e.y');
  FPack.add('					};');
  FPack.add('');
  FPack.add('					me.update(true);');
  FPack.add('					me.pivot();');
  FPack.add('				}');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			return changed;');
  FPack.add('		}');
  FPack.add('	});');
  FPack.add('');
  FPack.add('	/**');
  FPack.add('	 * @namespace Chart.Tooltip.positioners');
  FPack.add('	 */');
  FPack.add('	Chart.Tooltip.positioners = {');
  FPack.add('		/**');
  FPack.add('		 * Average mode places the tooltip at the average position of the elements shown');
  FPack.add('		 * @function Chart.Tooltip.positioners.average');
  FPack.add('		 * @param elements {ChartElement[]} the elements being displayed in the tooltip');
  FPack.add('		 * @returns {Point} tooltip position');
  FPack.add('		 */');
  FPack.add('		average: function(elements) {');
  FPack.add('			if (!elements.length) {');
  FPack.add('				return false;');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			var i, len;');
  FPack.add('			var x = 0;');
  FPack.add('			var y = 0;');
  FPack.add('			var count = 0;');
  FPack.add('');
  FPack.add('			for (i = 0, len = elements.length; i < len; ++i) {');
  FPack.add('				var el = elements[i];');
  FPack.add('				if (el && el.hasValue()) {');
  FPack.add('					var pos = el.tooltipPosition();');
  FPack.add('					x += pos.x;');
  FPack.add('					y += pos.y;');
  FPack.add('					++count;');
  FPack.add('				}');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			return {');
  FPack.add('				x: Math.round(x / count),');
  FPack.add('				y: Math.round(y / count)');
  FPack.add('			};');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		/**');
  FPack.add('		 * Gets the tooltip position nearest of the item nearest to the event position');
  FPack.add('		 * @function Chart.Tooltip.positioners.nearest');
  FPack.add('		 * @param elements {Chart.Element[]} the tooltip elements');
  FPack.add('		 * @param eventPosition {Point} the position of the event in canvas coordinates');
  FPack.add('		 * @returns {Point} the tooltip position');
  FPack.add('		 */');
  FPack.add('		nearest: function(elements, eventPosition) {');
  FPack.add('			var x = eventPosition.x;');
  FPack.add('			var y = eventPosition.y;');
  FPack.add('			var minDistance = Number.POSITIVE_INFINITY;');
  FPack.add('			var i, len, nearestElement;');
  FPack.add('');
  FPack.add('			for (i = 0, len = elements.length; i < len; ++i) {');
  FPack.add('				var el = elements[i];');
  FPack.add('				if (el && el.hasValue()) {');
  FPack.add('					var center = el.getCenterPoint();');
  FPack.add('					var d = helpers.distanceBetweenPoints(eventPosition, center);');
  FPack.add('');
  FPack.add('					if (d < minDistance) {');
  FPack.add('						minDistance = d;');
  FPack.add('						nearestElement = el;');
  FPack.add('					}');
  FPack.add('				}');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			if (nearestElement) {');
  FPack.add('				var tp = nearestElement.tooltipPosition();');
  FPack.add('				x = tp.x;');
  FPack.add('				y = tp.y;');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			return {');
  FPack.add('				x: x,');
  FPack.add('				y: y');
  FPack.add('			};');
  FPack.add('		}');
  FPack.add('	};');
  FPack.add('};');
  FPack.add('');
  FPack.add('},{"25":25,"26":26,"45":45}],36:[function(require,module,exports){');
  FPack.add('''use strict'';');
  FPack.add('');
  FPack.add('var defaults = require(25);');
  FPack.add('var Element = require(26);');
  FPack.add('var helpers = require(45);');
  FPack.add('');
  FPack.add('defaults._set(''global'', {');
  FPack.add('	elements: {');
  FPack.add('		arc: {');
  FPack.add('			backgroundColor: defaults.global.defaultColor,');
  FPack.add('			borderColor: ''#fff'',');
  FPack.add('			borderWidth: 2');
  FPack.add('		}');
  FPack.add('	}');
  FPack.add('});');
  FPack.add('');
  FPack.add('module.exports = Element.extend({');
  FPack.add('	inLabelRange: function(mouseX) {');
  FPack.add('		var vm = this._view;');
  FPack.add('');
  FPack.add('		if (vm) {');
  FPack.add('			return (Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2));');
  FPack.add('		}');
  FPack.add('		return false;');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	inRange: function(chartX, chartY) {');
  FPack.add('		var vm = this._view;');
  FPack.add('');
  FPack.add('		if (vm) {');
  FPack.add('			var pointRelativePosition = helpers.getAngleFromPoint(vm, {x: chartX, y: chartY});');
  FPack.add('			var	angle = pointRelativePosition.angle;');
  FPack.add('			var distance = pointRelativePosition.distance;');
  FPack.add('');
  FPack.add('			// Sanitise angle range');
  FPack.add('			var startAngle = vm.startAngle;');
  FPack.add('			var endAngle = vm.endAngle;');
  FPack.add('			while (endAngle < startAngle) {');
  FPack.add('				endAngle += 2.0 * Math.PI;');
  FPack.add('			}');
  FPack.add('			while (angle > endAngle) {');
  FPack.add('				angle -= 2.0 * Math.PI;');
  FPack.add('			}');
  FPack.add('			while (angle < startAngle) {');
  FPack.add('				angle += 2.0 * Math.PI;');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			// Check if within the range of the open/close angle');
  FPack.add('			var betweenAngles = (angle >= startAngle && angle <= endAngle);');
  FPack.add('			var withinRadius = (distance >= vm.innerRadius && distance <= vm.outerRadius);');
  FPack.add('');
  FPack.add('			return (betweenAngles && withinRadius);');
  FPack.add('		}');
  FPack.add('		return false;');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	getCenterPoint: function() {');
  FPack.add('		var vm = this._view;');
  FPack.add('		var halfAngle = (vm.startAngle + vm.endAngle) / 2;');
  FPack.add('		var halfRadius = (vm.innerRadius + vm.outerRadius) / 2;');
  FPack.add('		return {');
  FPack.add('			x: vm.x + Math.cos(halfAngle) * halfRadius,');
  FPack.add('			y: vm.y + Math.sin(halfAngle) * halfRadius');
  FPack.add('		};');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	getArea: function() {');
  FPack.add('		var vm = this._view;');
  FPack.add('		return Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	tooltipPosition: function() {');
  FPack.add('		var vm = this._view;');
  FPack.add('		var centreAngle = vm.startAngle + ((vm.endAngle - vm.startAngle) / 2);');
  FPack.add('		var rangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;');
  FPack.add('');
  FPack.add('		return {');
  FPack.add('			x: vm.x + (Math.cos(centreAngle) * rangeFromCentre),');
  FPack.add('			y: vm.y + (Math.sin(centreAngle) * rangeFromCentre)');
  FPack.add('		};');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	draw: function() {');
  FPack.add('		var ctx = this._chart.ctx;');
  FPack.add('		var vm = this._view;');
  FPack.add('		var sA = vm.startAngle;');
  FPack.add('		var eA = vm.endAngle;');
  FPack.add('');
  FPack.add('		ctx.beginPath();');
  FPack.add('');
  FPack.add('		ctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);');
  FPack.add('		ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);');
  FPack.add('');
  FPack.add('		ctx.closePath();');
  FPack.add('		ctx.strokeStyle = vm.borderColor;');
  FPack.add('		ctx.lineWidth = vm.borderWidth;');
  FPack.add('');
  FPack.add('		ctx.fillStyle = vm.backgroundColor;');
  FPack.add('');
  FPack.add('		ctx.fill();');
  FPack.add('		ctx.lineJoin = ''bevel'';');
  FPack.add('');
  FPack.add('		if (vm.borderWidth) {');
  FPack.add('			ctx.stroke();');
  FPack.add('		}');
  FPack.add('	}');
  FPack.add('});');
  FPack.add('');
  FPack.add('},{"25":25,"26":26,"45":45}],37:[function(require,module,exports){');
  FPack.add('''use strict'';');
  FPack.add('');
  FPack.add('var defaults = require(25);');
  FPack.add('var Element = require(26);');
  FPack.add('var helpers = require(45);');
  FPack.add('');
  FPack.add('var globalDefaults = defaults.global;');
  FPack.add('');
  FPack.add('defaults._set(''global'', {');
  FPack.add('	elements: {');
  FPack.add('		line: {');
  FPack.add('			tension: 0.4,');
  FPack.add('			backgroundColor: globalDefaults.defaultColor,');
  FPack.add('			borderWidth: 3,');
  FPack.add('			borderColor: globalDefaults.defaultColor,');
  FPack.add('			borderCapStyle: ''butt'',');
  FPack.add('			borderDash: [],');
  FPack.add('			borderDashOffset: 0.0,');
  FPack.add('			borderJoinStyle: ''miter'',');
  FPack.add('			capBezierPoints: true,');
  FPack.add('			fill: true, // do we fill in the area between the line and its base axis');
  FPack.add('		}');
  FPack.add('	}');
  FPack.add('});');
  FPack.add('');
  FPack.add('module.exports = Element.extend({');
  FPack.add('	draw: function() {');
  FPack.add('		var me = this;');
  FPack.add('		var vm = me._view;');
  FPack.add('		var ctx = me._chart.ctx;');
  FPack.add('		var spanGaps = vm.spanGaps;');
  FPack.add('		var points = me._children.slice(); // clone array');
  FPack.add('		var globalOptionLineElements = globalDefaults.elements.line;');
  FPack.add('		var lastDrawnIndex = -1;');
  FPack.add('		var index, current, previous, currentVM;');
  FPack.add('');
  FPack.add('		// If we are looping, adding the first point again');
  FPack.add('		if (me._loop && points.length) {');
  FPack.add('			points.push(points[0]);');
  FPack.add('		}');
  FPack.add('');
  FPack.add('		ctx.save();');
  FPack.add('');
  FPack.add('		// Stroke Line Options');
  FPack.add('		ctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle;');
  FPack.add('');
  FPack.add('		// IE 9 and 10 do not support line dash');
  FPack.add('		if (ctx.setLineDash) {');
  FPack.add('			ctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);');
  FPack.add('		}');
  FPack.add('');
  FPack.add('		ctx.lineDashOffset = vm.borderDashOffset || globalOptionLineElements.borderDashOffset;');
  FPack.add('		ctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;');
  FPack.add('		ctx.lineWidth = vm.borderWidth || globalOptionLineElements.borderWidth;');
  FPack.add('		ctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor;');
  FPack.add('');
  FPack.add('		// Stroke Line');
  FPack.add('		ctx.beginPath();');
  FPack.add('		lastDrawnIndex = -1;');
  FPack.add('');
  FPack.add('		for (index = 0; index < points.length; ++index) {');
  FPack.add('			current = points[index];');
  FPack.add('			previous = helpers.previousItem(points, index);');
  FPack.add('			currentVM = current._view;');
  FPack.add('');
  FPack.add('			// First point moves to it''s starting position no matter what');
  FPack.add('			if (index === 0) {');
  FPack.add('				if (!currentVM.skip) {');
  FPack.add('					ctx.moveTo(currentVM.x, currentVM.y);');
  FPack.add('					lastDrawnIndex = index;');
  FPack.add('				}');
  FPack.add('			} else {');
  FPack.add('				previous = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];');
  FPack.add('');
  FPack.add('				if (!currentVM.skip) {');
  FPack.add('					if ((lastDrawnIndex !== (index - 1) && !spanGaps) || lastDrawnIndex === -1) {');
  FPack.add('						// There was a gap and this is the first point after the gap');
  FPack.add('						ctx.moveTo(currentVM.x, currentVM.y);');
  FPack.add('					} else {');
  FPack.add('						// Line to next point');
  FPack.add('						helpers.canvas.lineTo(ctx, previous._view, current._view);');
  FPack.add('					}');
  FPack.add('					lastDrawnIndex = index;');
  FPack.add('				}');
  FPack.add('			}');
  FPack.add('		}');
end;

procedure TChartbundleJS.ChartbundleJS_42;
begin
  FPack.add('');
  FPack.add('		ctx.stroke();');
  FPack.add('		ctx.restore();');
  FPack.add('	}');
  FPack.add('});');
  FPack.add('');
  FPack.add('},{"25":25,"26":26,"45":45}],38:[function(require,module,exports){');
  FPack.add('''use strict'';');
  FPack.add('');
  FPack.add('var defaults = require(25);');
  FPack.add('var Element = require(26);');
  FPack.add('var helpers = require(45);');
  FPack.add('');
  FPack.add('var defaultColor = defaults.global.defaultColor;');
  FPack.add('');
  FPack.add('defaults._set(''global'', {');
  FPack.add('	elements: {');
  FPack.add('		point: {');
  FPack.add('			radius: 3,');
  FPack.add('			pointStyle: ''circle'',');
  FPack.add('			backgroundColor: defaultColor,');
  FPack.add('			borderColor: defaultColor,');
  FPack.add('			borderWidth: 1,');
  FPack.add('			// Hover');
  FPack.add('			hitRadius: 1,');
  FPack.add('			hoverRadius: 4,');
  FPack.add('			hoverBorderWidth: 1');
  FPack.add('		}');
  FPack.add('	}');
  FPack.add('});');
  FPack.add('');
  FPack.add('function xRange(mouseX) {');
  FPack.add('	var vm = this._view;');
  FPack.add('	return vm ? (Math.abs(mouseX - vm.x) < vm.radius + vm.hitRadius) : false;');
  FPack.add('}');
  FPack.add('');
  FPack.add('function yRange(mouseY) {');
  FPack.add('	var vm = this._view;');
  FPack.add('	return vm ? (Math.abs(mouseY - vm.y) < vm.radius + vm.hitRadius) : false;');
  FPack.add('}');
  FPack.add('');
  FPack.add('module.exports = Element.extend({');
  FPack.add('	inRange: function(mouseX, mouseY) {');
  FPack.add('		var vm = this._view;');
  FPack.add('		return vm ? ((Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2)) < Math.pow(vm.hitRadius + vm.radius, 2)) : false;');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	inLabelRange: xRange,');
  FPack.add('	inXRange: xRange,');
  FPack.add('	inYRange: yRange,');
  FPack.add('');
  FPack.add('	getCenterPoint: function() {');
  FPack.add('		var vm = this._view;');
  FPack.add('		return {');
  FPack.add('			x: vm.x,');
  FPack.add('			y: vm.y');
  FPack.add('		};');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	getArea: function() {');
  FPack.add('		return Math.PI * Math.pow(this._view.radius, 2);');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	tooltipPosition: function() {');
  FPack.add('		var vm = this._view;');
  FPack.add('		return {');
  FPack.add('			x: vm.x,');
  FPack.add('			y: vm.y,');
  FPack.add('			padding: vm.radius + vm.borderWidth');
  FPack.add('		};');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	draw: function(chartArea) {');
  FPack.add('		var vm = this._view;');
  FPack.add('		var model = this._model;');
  FPack.add('		var ctx = this._chart.ctx;');
  FPack.add('		var pointStyle = vm.pointStyle;');
  FPack.add('		var radius = vm.radius;');
  FPack.add('		var x = vm.x;');
  FPack.add('		var y = vm.y;');
  FPack.add('		var color = helpers.color;');
  FPack.add('		var errMargin = 1.01; // 1.01 is margin for Accumulated error. (Especially Edge, IE.)');
  FPack.add('		var ratio = 0;');
  FPack.add('');
  FPack.add('		if (vm.skip) {');
  FPack.add('			return;');
  FPack.add('		}');
  FPack.add('');
  FPack.add('		ctx.strokeStyle = vm.borderColor || defaultColor;');
  FPack.add('		ctx.lineWidth = helpers.valueOrDefault(vm.borderWidth, defaults.global.elements.point.borderWidth);');
  FPack.add('		ctx.fillStyle = vm.backgroundColor || defaultColor;');
  FPack.add('');
  FPack.add('		// Cliping for Points.');
  FPack.add('		// going out from inner charArea?');
  FPack.add('		if ((chartArea !== undefined) && ((model.x < chartArea.left) || (chartArea.right * errMargin < model.x) || (model.y < chartArea.top) || (chartArea.bottom * errMargin < model.y))) {');
  FPack.add('			// Point fade out');
  FPack.add('			if (model.x < chartArea.left) {');
  FPack.add('				ratio = (x - model.x) / (chartArea.left - model.x);');
  FPack.add('			} else if (chartArea.right * errMargin < model.x) {');
  FPack.add('				ratio = (model.x - x) / (model.x - chartArea.right);');
  FPack.add('			} else if (model.y < chartArea.top) {');
  FPack.add('				ratio = (y - model.y) / (chartArea.top - model.y);');
  FPack.add('			} else if (chartArea.bottom * errMargin < model.y) {');
  FPack.add('				ratio = (model.y - y) / (model.y - chartArea.bottom);');
  FPack.add('			}');
  FPack.add('			ratio = Math.round(ratio * 100) / 100;');
  FPack.add('			ctx.strokeStyle = color(ctx.strokeStyle).alpha(ratio).rgbString();');
  FPack.add('			ctx.fillStyle = color(ctx.fillStyle).alpha(ratio).rgbString();');
  FPack.add('		}');
  FPack.add('');
  FPack.add('		helpers.canvas.drawPoint(ctx, pointStyle, radius, x, y);');
  FPack.add('	}');
  FPack.add('});');
  FPack.add('');
  FPack.add('},{"25":25,"26":26,"45":45}],39:[function(require,module,exports){');
  FPack.add('''use strict'';');
  FPack.add('');
  FPack.add('var defaults = require(25);');
  FPack.add('var Element = require(26);');
  FPack.add('');
  FPack.add('defaults._set(''global'', {');
  FPack.add('	elements: {');
  FPack.add('		rectangle: {');
  FPack.add('			backgroundColor: defaults.global.defaultColor,');
  FPack.add('			borderColor: defaults.global.defaultColor,');
  FPack.add('			borderSkipped: ''bottom'',');
  FPack.add('			borderWidth: 0');
  FPack.add('		}');
  FPack.add('	}');
  FPack.add('});');
  FPack.add('');
  FPack.add('function isVertical(bar) {');
  FPack.add('	return bar._view.width !== undefined;');
  FPack.add('}');
  FPack.add('');
  FPack.add('/**');
  FPack.add(' * Helper function to get the bounds of the bar regardless of the orientation');
  FPack.add(' * @param bar {Chart.Element.Rectangle} the bar');
  FPack.add(' * @return {Bounds} bounds of the bar');
  FPack.add(' * @private');
  FPack.add(' */');
  FPack.add('function getBarBounds(bar) {');
  FPack.add('	var vm = bar._view;');
  FPack.add('	var x1, x2, y1, y2;');
  FPack.add('');
  FPack.add('	if (isVertical(bar)) {');
  FPack.add('		// vertical');
  FPack.add('		var halfWidth = vm.width / 2;');
  FPack.add('		x1 = vm.x - halfWidth;');
  FPack.add('		x2 = vm.x + halfWidth;');
  FPack.add('		y1 = Math.min(vm.y, vm.base);');
  FPack.add('		y2 = Math.max(vm.y, vm.base);');
  FPack.add('	} else {');
  FPack.add('		// horizontal bar');
  FPack.add('		var halfHeight = vm.height / 2;');
  FPack.add('		x1 = Math.min(vm.x, vm.base);');
  FPack.add('		x2 = Math.max(vm.x, vm.base);');
  FPack.add('		y1 = vm.y - halfHeight;');
  FPack.add('		y2 = vm.y + halfHeight;');
  FPack.add('	}');
  FPack.add('');
  FPack.add('	return {');
  FPack.add('		left: x1,');
  FPack.add('		top: y1,');
  FPack.add('		right: x2,');
  FPack.add('		bottom: y2');
  FPack.add('	};');
  FPack.add('}');
  FPack.add('');
  FPack.add('module.exports = Element.extend({');
  FPack.add('	draw: function() {');
  FPack.add('		var ctx = this._chart.ctx;');
  FPack.add('		var vm = this._view;');
  FPack.add('		var left, right, top, bottom, signX, signY, borderSkipped;');
  FPack.add('		var borderWidth = vm.borderWidth;');
  FPack.add('');
  FPack.add('		if (!vm.horizontal) {');
  FPack.add('			// bar');
  FPack.add('			left = vm.x - vm.width / 2;');
  FPack.add('			right = vm.x + vm.width / 2;');
  FPack.add('			top = vm.y;');
  FPack.add('			bottom = vm.base;');
  FPack.add('			signX = 1;');
  FPack.add('			signY = bottom > top ? 1 : -1;');
  FPack.add('			borderSkipped = vm.borderSkipped || ''bottom'';');
  FPack.add('		} else {');
  FPack.add('			// horizontal bar');
  FPack.add('			left = vm.base;');
  FPack.add('			right = vm.x;');
  FPack.add('			top = vm.y - vm.height / 2;');
  FPack.add('			bottom = vm.y + vm.height / 2;');
  FPack.add('			signX = right > left ? 1 : -1;');
  FPack.add('			signY = 1;');
  FPack.add('			borderSkipped = vm.borderSkipped || ''left'';');
  FPack.add('		}');
  FPack.add('');
  FPack.add('		// Canvas doesn''t allow us to stroke inside the width so we can');
  FPack.add('		// adjust the sizes to fit if we''re setting a stroke on the line');
  FPack.add('		if (borderWidth) {');
  FPack.add('			// borderWidth shold be less than bar width and bar height.');
  FPack.add('			var barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));');
  FPack.add('			borderWidth = borderWidth > barSize ? barSize : borderWidth;');
  FPack.add('			var halfStroke = borderWidth / 2;');
  FPack.add('			// Adjust borderWidth when bar top position is near vm.base(zero).');
  FPack.add('			var borderLeft = left + (borderSkipped !== ''left'' ? halfStroke * signX : 0);');
  FPack.add('			var borderRight = right + (borderSkipped !== ''right'' ? -halfStroke * signX : 0);');
  FPack.add('			var borderTop = top + (borderSkipped !== ''top'' ? halfStroke * signY : 0);');
  FPack.add('			var borderBottom = bottom + (borderSkipped !== ''bottom'' ? -halfStroke * signY : 0);');
  FPack.add('			// not become a vertical line?');
  FPack.add('			if (borderLeft !== borderRight) {');
  FPack.add('				top = borderTop;');
  FPack.add('				bottom = borderBottom;');
  FPack.add('			}');
  FPack.add('			// not become a horizontal line?');
  FPack.add('			if (borderTop !== borderBottom) {');
  FPack.add('				left = borderLeft;');
  FPack.add('				right = borderRight;');
  FPack.add('			}');
  FPack.add('		}');
  FPack.add('');
  FPack.add('		ctx.beginPath();');
  FPack.add('		ctx.fillStyle = vm.backgroundColor;');
  FPack.add('		ctx.strokeStyle = vm.borderColor;');
  FPack.add('		ctx.lineWidth = borderWidth;');
  FPack.add('');
  FPack.add('		// Corner points, from bottom-left to bottom-right clockwise');
  FPack.add('		// | 1 2 |');
  FPack.add('		// | 0 3 |');
  FPack.add('		var corners = [');
  FPack.add('			[left, bottom],');
  FPack.add('			[left, top],');
  FPack.add('			[right, top],');
  FPack.add('			[right, bottom]');
  FPack.add('		];');
  FPack.add('');
  FPack.add('		// Find first (starting) corner with fallback to ''bottom''');
  FPack.add('		var borders = [''bottom'', ''left'', ''top'', ''right''];');
  FPack.add('		var startCorner = borders.indexOf(borderSkipped, 0);');
  FPack.add('		if (startCorner === -1) {');
  FPack.add('			startCorner = 0;');
  FPack.add('		}');
  FPack.add('');
  FPack.add('		function cornerAt(index) {');
  FPack.add('			return corners[(startCorner + index) % 4];');
  FPack.add('		}');
  FPack.add('');
  FPack.add('		// Draw rectangle from ''startCorner''');
  FPack.add('		var corner = cornerAt(0);');
  FPack.add('		ctx.moveTo(corner[0], corner[1]);');
  FPack.add('');
  FPack.add('		for (var i = 1; i < 4; i++) {');
  FPack.add('			corner = cornerAt(i);');
  FPack.add('			ctx.lineTo(corner[0], corner[1]);');
  FPack.add('		}');
  FPack.add('');
  FPack.add('		ctx.fill();');
  FPack.add('		if (borderWidth) {');
  FPack.add('			ctx.stroke();');
  FPack.add('		}');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	height: function() {');
  FPack.add('		var vm = this._view;');
  FPack.add('		return vm.base - vm.y;');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	inRange: function(mouseX, mouseY) {');
  FPack.add('		var inRange = false;');
  FPack.add('');
  FPack.add('		if (this._view) {');
  FPack.add('			var bounds = getBarBounds(this);');
  FPack.add('			inRange = mouseX >= bounds.left && mouseX <= bounds.right && mouseY >= bounds.top && mouseY <= bounds.bottom;');
  FPack.add('		}');
  FPack.add('');
  FPack.add('		return inRange;');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	inLabelRange: function(mouseX, mouseY) {');
  FPack.add('		var me = this;');
  FPack.add('		if (!me._view) {');
  FPack.add('			return false;');
  FPack.add('		}');
  FPack.add('');
  FPack.add('		var inRange = false;');
  FPack.add('		var bounds = getBarBounds(me);');
  FPack.add('');
  FPack.add('		if (isVertical(me)) {');
  FPack.add('			inRange = mouseX >= bounds.left && mouseX <= bounds.right;');
  FPack.add('		} else {');
  FPack.add('			inRange = mouseY >= bounds.top && mouseY <= bounds.bottom;');
  FPack.add('		}');
  FPack.add('');
  FPack.add('		return inRange;');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	inXRange: function(mouseX) {');
  FPack.add('		var bounds = getBarBounds(this);');
  FPack.add('		return mouseX >= bounds.left && mouseX <= bounds.right;');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	inYRange: function(mouseY) {');
  FPack.add('		var bounds = getBarBounds(this);');
  FPack.add('		return mouseY >= bounds.top && mouseY <= bounds.bottom;');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	getCenterPoint: function() {');
  FPack.add('		var vm = this._view;');
  FPack.add('		var x, y;');
  FPack.add('		if (isVertical(this)) {');
  FPack.add('			x = vm.x;');
  FPack.add('			y = (vm.y + vm.base) / 2;');
  FPack.add('		} else {');
  FPack.add('			x = (vm.x + vm.base) / 2;');
  FPack.add('			y = vm.y;');
  FPack.add('		}');
  FPack.add('');
  FPack.add('		return {x: x, y: y};');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	getArea: function() {');
  FPack.add('		var vm = this._view;');
  FPack.add('		return vm.width * Math.abs(vm.y - vm.base);');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	tooltipPosition: function() {');
  FPack.add('		var vm = this._view;');
  FPack.add('		return {');
  FPack.add('			x: vm.x,');
  FPack.add('			y: vm.y');
  FPack.add('		};');
  FPack.add('	}');
  FPack.add('});');
  FPack.add('');
  FPack.add('},{"25":25,"26":26}],40:[function(require,module,exports){');
  FPack.add('''use strict'';');
  FPack.add('');
end;

procedure TChartbundleJS. ChartbundleJS_43;
begin
  FPack.add('module.exports = {};');
  FPack.add('module.exports.Arc = require(36);');
  FPack.add('module.exports.Line = require(37);');
  FPack.add('module.exports.Point = require(38);');
  FPack.add('module.exports.Rectangle = require(39);');
  FPack.add('');
  FPack.add('},{"36":36,"37":37,"38":38,"39":39}],41:[function(require,module,exports){');
  FPack.add('''use strict'';');
  FPack.add('');
  FPack.add('var helpers = require(42);');
  FPack.add('');
  FPack.add('/**');
  FPack.add(' * @namespace Chart.helpers.canvas');
  FPack.add(' */');
  FPack.add('var exports = module.exports = {');
  FPack.add('	/**');
  FPack.add('	 * Clears the entire canvas associated to the given `chart`.');
  FPack.add('	 * @param {Chart} chart - The chart for which to clear the canvas.');
  FPack.add('	 */');
  FPack.add('	clear: function(chart) {');
  FPack.add('		chart.ctx.clearRect(0, 0, chart.width, chart.height);');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	/**');
  FPack.add('	 * Creates a "path" for a rectangle with rounded corners at position (x, y) with a');
  FPack.add('	 * given size (width, height) and the same `radius` for all corners.');
  FPack.add('	 * @param {CanvasRenderingContext2D} ctx - The canvas 2D Context.');
  FPack.add('	 * @param {Number} x - The x axis of the coordinate for the rectangle starting point.');
  FPack.add('	 * @param {Number} y - The y axis of the coordinate for the rectangle starting point.');
  FPack.add('	 * @param {Number} width - The rectangle''s width.');
  FPack.add('	 * @param {Number} height - The rectangle''s height.');
  FPack.add('	 * @param {Number} radius - The rounded amount (in pixels) for the four corners.');
  FPack.add('	 * @todo handle `radius` as top-left, top-right, bottom-right, bottom-left array/object?');
  FPack.add('	 */');
  FPack.add('	roundedRect: function(ctx, x, y, width, height, radius) {');
  FPack.add('		if (radius) {');
  FPack.add('			var rx = Math.min(radius, width / 2);');
  FPack.add('			var ry = Math.min(radius, height / 2);');
  FPack.add('');
  FPack.add('			ctx.moveTo(x + rx, y);');
  FPack.add('			ctx.lineTo(x + width - rx, y);');
  FPack.add('			ctx.quadraticCurveTo(x + width, y, x + width, y + ry);');
  FPack.add('			ctx.lineTo(x + width, y + height - ry);');
  FPack.add('			ctx.quadraticCurveTo(x + width, y + height, x + width - rx, y + height);');
  FPack.add('			ctx.lineTo(x + rx, y + height);');
  FPack.add('			ctx.quadraticCurveTo(x, y + height, x, y + height - ry);');
  FPack.add('			ctx.lineTo(x, y + ry);');
  FPack.add('			ctx.quadraticCurveTo(x, y, x + rx, y);');
  FPack.add('		} else {');
  FPack.add('			ctx.rect(x, y, width, height);');
  FPack.add('		}');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	drawPoint: function(ctx, style, radius, x, y) {');
  FPack.add('		var type, edgeLength, xOffset, yOffset, height, size;');
  FPack.add('');
  FPack.add('		if (style && typeof style === ''object'') {');
  FPack.add('			type = style.toString();');
  FPack.add('			if (type === ''[object HTMLImageElement]'' || type === ''[object HTMLCanvasElement]'') {');
  FPack.add('				ctx.drawImage(style, x - style.width / 2, y - style.height / 2, style.width, style.height);');
  FPack.add('				return;');
  FPack.add('			}');
  FPack.add('		}');
  FPack.add('');
  FPack.add('		if (isNaN(radius) || radius <= 0) {');
  FPack.add('			return;');
  FPack.add('		}');
  FPack.add('');
  FPack.add('		switch (style) {');
  FPack.add('		// Default includes circle');
  FPack.add('		default:');
  FPack.add('			ctx.beginPath();');
  FPack.add('			ctx.arc(x, y, radius, 0, Math.PI * 2);');
  FPack.add('			ctx.closePath();');
  FPack.add('			ctx.fill();');
  FPack.add('			break;');
  FPack.add('		case ''triangle'':');
  FPack.add('			ctx.beginPath();');
  FPack.add('			edgeLength = 3 * radius / Math.sqrt(3);');
  FPack.add('			height = edgeLength * Math.sqrt(3) / 2;');
  FPack.add('			ctx.moveTo(x - edgeLength / 2, y + height / 3);');
  FPack.add('			ctx.lineTo(x + edgeLength / 2, y + height / 3);');
  FPack.add('			ctx.lineTo(x, y - 2 * height / 3);');
  FPack.add('			ctx.closePath();');
  FPack.add('			ctx.fill();');
  FPack.add('			break;');
  FPack.add('		case ''rect'':');
  FPack.add('			size = 1 / Math.SQRT2 * radius;');
  FPack.add('			ctx.beginPath();');
  FPack.add('			ctx.fillRect(x - size, y - size, 2 * size, 2 * size);');
  FPack.add('			ctx.strokeRect(x - size, y - size, 2 * size, 2 * size);');
  FPack.add('			break;');
  FPack.add('		case ''rectRounded'':');
  FPack.add('			var offset = radius / Math.SQRT2;');
  FPack.add('			var leftX = x - offset;');
  FPack.add('			var topY = y - offset;');
  FPack.add('			var sideSize = Math.SQRT2 * radius;');
  FPack.add('			ctx.beginPath();');
  FPack.add('			this.roundedRect(ctx, leftX, topY, sideSize, sideSize, radius / 2);');
  FPack.add('			ctx.closePath();');
  FPack.add('			ctx.fill();');
  FPack.add('			break;');
  FPack.add('		case ''rectRot'':');
  FPack.add('			size = 1 / Math.SQRT2 * radius;');
  FPack.add('			ctx.beginPath();');
  FPack.add('			ctx.moveTo(x - size, y);');
  FPack.add('			ctx.lineTo(x, y + size);');
  FPack.add('			ctx.lineTo(x + size, y);');
  FPack.add('			ctx.lineTo(x, y - size);');
  FPack.add('			ctx.closePath();');
  FPack.add('			ctx.fill();');
  FPack.add('			break;');
  FPack.add('		case ''cross'':');
  FPack.add('			ctx.beginPath();');
  FPack.add('			ctx.moveTo(x, y + radius);');
  FPack.add('			ctx.lineTo(x, y - radius);');
  FPack.add('			ctx.moveTo(x - radius, y);');
  FPack.add('			ctx.lineTo(x + radius, y);');
  FPack.add('			ctx.closePath();');
  FPack.add('			break;');
  FPack.add('		case ''crossRot'':');
  FPack.add('			ctx.beginPath();');
  FPack.add('			xOffset = Math.cos(Math.PI / 4) * radius;');
  FPack.add('			yOffset = Math.sin(Math.PI / 4) * radius;');
  FPack.add('			ctx.moveTo(x - xOffset, y - yOffset);');
  FPack.add('			ctx.lineTo(x + xOffset, y + yOffset);');
  FPack.add('			ctx.moveTo(x - xOffset, y + yOffset);');
  FPack.add('			ctx.lineTo(x + xOffset, y - yOffset);');
  FPack.add('			ctx.closePath();');
  FPack.add('			break;');
  FPack.add('		case ''star'':');
  FPack.add('			ctx.beginPath();');
  FPack.add('			ctx.moveTo(x, y + radius);');
  FPack.add('			ctx.lineTo(x, y - radius);');
  FPack.add('			ctx.moveTo(x - radius, y);');
  FPack.add('			ctx.lineTo(x + radius, y);');
  FPack.add('			xOffset = Math.cos(Math.PI / 4) * radius;');
  FPack.add('			yOffset = Math.sin(Math.PI / 4) * radius;');
  FPack.add('			ctx.moveTo(x - xOffset, y - yOffset);');
  FPack.add('			ctx.lineTo(x + xOffset, y + yOffset);');
  FPack.add('			ctx.moveTo(x - xOffset, y + yOffset);');
  FPack.add('			ctx.lineTo(x + xOffset, y - yOffset);');
  FPack.add('			ctx.closePath();');
  FPack.add('			break;');
  FPack.add('		case ''line'':');
  FPack.add('			ctx.beginPath();');
  FPack.add('			ctx.moveTo(x - radius, y);');
  FPack.add('			ctx.lineTo(x + radius, y);');
  FPack.add('			ctx.closePath();');
  FPack.add('			break;');
  FPack.add('		case ''dash'':');
  FPack.add('			ctx.beginPath();');
  FPack.add('			ctx.moveTo(x, y);');
  FPack.add('			ctx.lineTo(x + radius, y);');
  FPack.add('			ctx.closePath();');
  FPack.add('			break;');
  FPack.add('		}');
  FPack.add('');
  FPack.add('		ctx.stroke();');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	clipArea: function(ctx, area) {');
  FPack.add('		ctx.save();');
  FPack.add('		ctx.beginPath();');
  FPack.add('		ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);');
  FPack.add('		ctx.clip();');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	unclipArea: function(ctx) {');
  FPack.add('		ctx.restore();');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	lineTo: function(ctx, previous, target, flip) {');
  FPack.add('		if (target.steppedLine) {');
  FPack.add('			if ((target.steppedLine === ''after'' && !flip) || (target.steppedLine !== ''after'' && flip)) {');
  FPack.add('				ctx.lineTo(previous.x, target.y);');
  FPack.add('			} else {');
  FPack.add('				ctx.lineTo(target.x, previous.y);');
  FPack.add('			}');
  FPack.add('			ctx.lineTo(target.x, target.y);');
  FPack.add('			return;');
  FPack.add('		}');
  FPack.add('');
  FPack.add('		if (!target.tension) {');
  FPack.add('			ctx.lineTo(target.x, target.y);');
  FPack.add('			return;');
  FPack.add('		}');
  FPack.add('');
  FPack.add('		ctx.bezierCurveTo(');
  FPack.add('			flip ? previous.controlPointPreviousX : previous.controlPointNextX,');
  FPack.add('			flip ? previous.controlPointPreviousY : previous.controlPointNextY,');
  FPack.add('			flip ? target.controlPointNextX : target.controlPointPreviousX,');
  FPack.add('			flip ? target.controlPointNextY : target.controlPointPreviousY,');
  FPack.add('			target.x,');
  FPack.add('			target.y);');
  FPack.add('	}');
  FPack.add('};');
  FPack.add('');
  FPack.add('// DEPRECATIONS');
  FPack.add('');
  FPack.add('/**');
  FPack.add(' * Provided for backward compatibility, use Chart.helpers.canvas.clear instead.');
  FPack.add(' * @namespace Chart.helpers.clear');
  FPack.add(' * @deprecated since version 2.7.0');
  FPack.add(' * @todo remove at version 3');
  FPack.add(' * @private');
  FPack.add(' */');
  FPack.add('helpers.clear = exports.clear;');
  FPack.add('');
  FPack.add('/**');
  FPack.add(' * Provided for backward compatibility, use Chart.helpers.canvas.roundedRect instead.');
  FPack.add(' * @namespace Chart.helpers.drawRoundedRectangle');
  FPack.add(' * @deprecated since version 2.7.0');
  FPack.add(' * @todo remove at version 3');
  FPack.add(' * @private');
  FPack.add(' */');
  FPack.add('helpers.drawRoundedRectangle = function(ctx) {');
  FPack.add('	ctx.beginPath();');
  FPack.add('	exports.roundedRect.apply(exports, arguments);');
  FPack.add('	ctx.closePath();');
  FPack.add('};');
  FPack.add('');
  FPack.add('},{"42":42}],42:[function(require,module,exports){');
  FPack.add('''use strict'';');
  FPack.add('');
  FPack.add('/**');
  FPack.add(' * @namespace Chart.helpers');
  FPack.add(' */');
  FPack.add('var helpers = {');
  FPack.add('	/**');
  FPack.add('	 * An empty function that can be used, for example, for optional callback.');
  FPack.add('	 */');
  FPack.add('	noop: function() {},');
  FPack.add('');
  FPack.add('	/**');
  FPack.add('	 * Returns a unique id, sequentially generated from a global variable.');
  FPack.add('	 * @returns {Number}');
  FPack.add('	 * @function');
  FPack.add('	 */');
  FPack.add('	uid: (function() {');
  FPack.add('		var id = 0;');
  FPack.add('		return function() {');
  FPack.add('			return id++;');
  FPack.add('		};');
  FPack.add('	}()),');
  FPack.add('');
  FPack.add('	/**');
  FPack.add('	 * Returns true if `value` is neither null nor undefined, else returns false.');
  FPack.add('	 * @param {*} value - The value to test.');
  FPack.add('	 * @returns {Boolean}');
  FPack.add('	 * @since 2.7.0');
  FPack.add('	 */');
  FPack.add('	isNullOrUndef: function(value) {');
  FPack.add('		return value === null || typeof value === ''undefined'';');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	/**');
  FPack.add('	 * Returns true if `value` is an array, else returns false.');
  FPack.add('	 * @param {*} value - The value to test.');
  FPack.add('	 * @returns {Boolean}');
  FPack.add('	 * @function');
  FPack.add('	 */');
  FPack.add('	isArray: Array.isArray ? Array.isArray : function(value) {');
  FPack.add('		return Object.prototype.toString.call(value) === ''[object Array]'';');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	/**');
  FPack.add('	 * Returns true if `value` is an object (excluding null), else returns false.');
  FPack.add('	 * @param {*} value - The value to test.');
  FPack.add('	 * @returns {Boolean}');
  FPack.add('	 * @since 2.7.0');
  FPack.add('	 */');
  FPack.add('	isObject: function(value) {');
  FPack.add('		return value !== null && Object.prototype.toString.call(value) === ''[object Object]'';');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	/**');
  FPack.add('	 * Returns `value` if defined, else returns `defaultValue`.');
  FPack.add('	 * @param {*} value - The value to return if defined.');
  FPack.add('	 * @param {*} defaultValue - The value to return if `value` is undefined.');
  FPack.add('	 * @returns {*}');
  FPack.add('	 */');
  FPack.add('	valueOrDefault: function(value, defaultValue) {');
  FPack.add('		return typeof value === ''undefined'' ? defaultValue : value;');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	/**');
  FPack.add('	 * Returns value at the given `index` in array if defined, else returns `defaultValue`.');
  FPack.add('	 * @param {Array} value - The array to lookup for value at `index`.');
  FPack.add('	 * @param {Number} index - The index in `value` to lookup for value.');
  FPack.add('	 * @param {*} defaultValue - The value to return if `value[index]` is undefined.');
  FPack.add('	 * @returns {*}');
  FPack.add('	 */');
  FPack.add('	valueAtIndexOrDefault: function(value, index, defaultValue) {');
  FPack.add('		return helpers.valueOrDefault(helpers.isArray(value) ? value[index] : value, defaultValue);');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	/**');
  FPack.add('	 * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the');
  FPack.add('	 * value returned by `fn`. If `fn` is not a function, this method returns undefined.');
  FPack.add('	 * @param {Function} fn - The function to call.');
  FPack.add('	 * @param {Array|undefined|null} args - The arguments with which `fn` should be called.');
  FPack.add('	 * @param {Object} [thisArg] - The value of `this` provided for the call to `fn`.');
  FPack.add('	 * @returns {*}');
  FPack.add('	 */');
  FPack.add('	callback: function(fn, args, thisArg) {');
  FPack.add('		if (fn && typeof fn.call === ''function'') {');
  FPack.add('			return fn.apply(thisArg, args);');
  FPack.add('		}');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	/**');
  FPack.add('	 * Note(SB) for performance sake, this method should only be used when loopable type');
  FPack.add('	 * is unknown or in none intensive code (not called often and small loopable). Else');
  FPack.add('	 * it''s preferable to use a regular for() loop and save extra function calls.');
  FPack.add('	 * @param {Object|Array} loopable - The object or array to be iterated.');
  FPack.add('	 * @param {Function} fn - The function to call for each item.');
  FPack.add('	 * @param {Object} [thisArg] - The value of `this` provided for the call to `fn`.');
  FPack.add('	 * @param {Boolean} [reverse] - If true, iterates backward on the loopable.');
  FPack.add('	 */');
  FPack.add('	each: function(loopable, fn, thisArg, reverse) {');
  FPack.add('		var i, len, keys;');
  FPack.add('		if (helpers.isArray(loopable)) {');
  FPack.add('			len = loopable.length;');
  FPack.add('			if (reverse) {');
  FPack.add('				for (i = len - 1; i >= 0; i--) {');
  FPack.add('					fn.call(thisArg, loopable[i], i);');
  FPack.add('				}');
  FPack.add('			} else {');
  FPack.add('				for (i = 0; i < len; i++) {');
  FPack.add('					fn.call(thisArg, loopable[i], i);');
  FPack.add('				}');
  FPack.add('			}');
  FPack.add('		} else if (helpers.isObject(loopable)) {');
  FPack.add('			keys = Object.keys(loopable);');
  FPack.add('			len = keys.length;');
end;

procedure TChartbundleJS.ChartbundleJS_44;
begin
  FPack.add('			for (i = 0; i < len; i++) {');
  FPack.add('				fn.call(thisArg, loopable[keys[i]], keys[i]);');
  FPack.add('			}');
  FPack.add('		}');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	/**');
  FPack.add('	 * Returns true if the `a0` and `a1` arrays have the same content, else returns false.');
  FPack.add('	 * @see http://stackoverflow.com/a/14853974');
  FPack.add('	 * @param {Array} a0 - The array to compare');
  FPack.add('	 * @param {Array} a1 - The array to compare');
  FPack.add('	 * @returns {Boolean}');
  FPack.add('	 */');
  FPack.add('	arrayEquals: function(a0, a1) {');
  FPack.add('		var i, ilen, v0, v1;');
  FPack.add('');
  FPack.add('		if (!a0 || !a1 || a0.length !== a1.length) {');
  FPack.add('			return false;');
  FPack.add('		}');
  FPack.add('');
  FPack.add('		for (i = 0, ilen = a0.length; i < ilen; ++i) {');
  FPack.add('			v0 = a0[i];');
  FPack.add('			v1 = a1[i];');
  FPack.add('');
  FPack.add('			if (v0 instanceof Array && v1 instanceof Array) {');
  FPack.add('				if (!helpers.arrayEquals(v0, v1)) {');
  FPack.add('					return false;');
  FPack.add('				}');
  FPack.add('			} else if (v0 !== v1) {');
  FPack.add('				// NOTE: two different object instances will never be equal: {x:20} != {x:20}');
  FPack.add('				return false;');
  FPack.add('			}');
  FPack.add('		}');
  FPack.add('');
  FPack.add('		return true;');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	/**');
  FPack.add('	 * Returns a deep copy of `source` without keeping references on objects and arrays.');
  FPack.add('	 * @param {*} source - The value to clone.');
  FPack.add('	 * @returns {*}');
  FPack.add('	 */');
  FPack.add('	clone: function(source) {');
  FPack.add('		if (helpers.isArray(source)) {');
  FPack.add('			return source.map(helpers.clone);');
  FPack.add('		}');
  FPack.add('');
  FPack.add('		if (helpers.isObject(source)) {');
  FPack.add('			var target = {};');
  FPack.add('			var keys = Object.keys(source);');
  FPack.add('			var klen = keys.length;');
  FPack.add('			var k = 0;');
  FPack.add('');
  FPack.add('			for (; k < klen; ++k) {');
  FPack.add('				target[keys[k]] = helpers.clone(source[keys[k]]);');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			return target;');
  FPack.add('		}');
  FPack.add('');
  FPack.add('		return source;');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	/**');
  FPack.add('	 * The default merger when Chart.helpers.merge is called without merger option.');
  FPack.add('	 * Note(SB): this method is also used by configMerge and scaleMerge as fallback.');
  FPack.add('	 * @private');
  FPack.add('	 */');
  FPack.add('	_merger: function(key, target, source, options) {');
  FPack.add('		var tval = target[key];');
  FPack.add('		var sval = source[key];');
  FPack.add('');
  FPack.add('		if (helpers.isObject(tval) && helpers.isObject(sval)) {');
  FPack.add('			helpers.merge(tval, sval, options);');
  FPack.add('		} else {');
  FPack.add('			target[key] = helpers.clone(sval);');
  FPack.add('		}');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	/**');
  FPack.add('	 * Merges source[key] in target[key] only if target[key] is undefined.');
  FPack.add('	 * @private');
  FPack.add('	 */');
  FPack.add('	_mergerIf: function(key, target, source) {');
  FPack.add('		var tval = target[key];');
  FPack.add('		var sval = source[key];');
  FPack.add('');
  FPack.add('		if (helpers.isObject(tval) && helpers.isObject(sval)) {');
  FPack.add('			helpers.mergeIf(tval, sval);');
  FPack.add('		} else if (!target.hasOwnProperty(key)) {');
  FPack.add('			target[key] = helpers.clone(sval);');
  FPack.add('		}');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	/**');
  FPack.add('	 * Recursively deep copies `source` properties into `target` with the given `options`.');
  FPack.add('	 * IMPORTANT: `target` is not cloned and will be updated with `source` properties.');
  FPack.add('	 * @param {Object} target - The target object in which all sources are merged into.');
  FPack.add('	 * @param {Object|Array(Object)} source - Object(s) to merge into `target`.');
  FPack.add('	 * @param {Object} [options] - Merging options:');
  FPack.add('	 * @param {Function} [options.merger] - The merge method (key, target, source, options)');
  FPack.add('	 * @returns {Object} The `target` object.');
  FPack.add('	 */');
  FPack.add('	merge: function(target, source, options) {');
  FPack.add('		var sources = helpers.isArray(source) ? source : [source];');
  FPack.add('		var ilen = sources.length;');
  FPack.add('		var merge, i, keys, klen, k;');
  FPack.add('');
  FPack.add('		if (!helpers.isObject(target)) {');
  FPack.add('			return target;');
  FPack.add('		}');
  FPack.add('');
  FPack.add('		options = options || {};');
  FPack.add('		merge = options.merger || helpers._merger;');
  FPack.add('');
  FPack.add('		for (i = 0; i < ilen; ++i) {');
  FPack.add('			source = sources[i];');
  FPack.add('			if (!helpers.isObject(source)) {');
  FPack.add('				continue;');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			keys = Object.keys(source);');
  FPack.add('			for (k = 0, klen = keys.length; k < klen; ++k) {');
  FPack.add('				merge(keys[k], target, source, options);');
  FPack.add('			}');
  FPack.add('		}');
  FPack.add('');
  FPack.add('		return target;');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	/**');
  FPack.add('	 * Recursively deep copies `source` properties into `target` *only* if not defined in target.');
  FPack.add('	 * IMPORTANT: `target` is not cloned and will be updated with `source` properties.');
  FPack.add('	 * @param {Object} target - The target object in which all sources are merged into.');
  FPack.add('	 * @param {Object|Array(Object)} source - Object(s) to merge into `target`.');
  FPack.add('	 * @returns {Object} The `target` object.');
  FPack.add('	 */');
  FPack.add('	mergeIf: function(target, source) {');
  FPack.add('		return helpers.merge(target, source, {merger: helpers._mergerIf});');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	/**');
  FPack.add('	 * Applies the contents of two or more objects together into the first object.');
  FPack.add('	 * @param {Object} target - The target object in which all objects are merged into.');
  FPack.add('	 * @param {Object} arg1 - Object containing additional properties to merge in target.');
  FPack.add('	 * @param {Object} argN - Additional objects containing properties to merge in target.');
  FPack.add('	 * @returns {Object} The `target` object.');
  FPack.add('	 */');
  FPack.add('	extend: function(target) {');
  FPack.add('		var setFn = function(value, key) {');
  FPack.add('			target[key] = value;');
  FPack.add('		};');
  FPack.add('		for (var i = 1, ilen = arguments.length; i < ilen; ++i) {');
  FPack.add('			helpers.each(arguments[i], setFn);');
  FPack.add('		}');
  FPack.add('		return target;');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	/**');
  FPack.add('	 * Basic javascript inheritance based on the model created in Backbone.js');
  FPack.add('	 */');
  FPack.add('	inherits: function(extensions) {');
  FPack.add('		var me = this;');
  FPack.add('		var ChartElement = (extensions && extensions.hasOwnProperty(''constructor'')) ? extensions.constructor : function() {');
  FPack.add('			return me.apply(this, arguments);');
  FPack.add('		};');
  FPack.add('');
  FPack.add('		var Surrogate = function() {');
  FPack.add('			this.constructor = ChartElement;');
  FPack.add('		};');
  FPack.add('');
  FPack.add('		Surrogate.prototype = me.prototype;');
  FPack.add('		ChartElement.prototype = new Surrogate();');
  FPack.add('		ChartElement.extend = helpers.inherits;');
  FPack.add('');
  FPack.add('		if (extensions) {');
  FPack.add('			helpers.extend(ChartElement.prototype, extensions);');
  FPack.add('		}');
  FPack.add('');
  FPack.add('		ChartElement.__super__ = me.prototype;');
  FPack.add('		return ChartElement;');
  FPack.add('	}');
  FPack.add('};');
  FPack.add('');
  FPack.add('module.exports = helpers;');
  FPack.add('');
  FPack.add('// DEPRECATIONS');
  FPack.add('');
  FPack.add('/**');
  FPack.add(' * Provided for backward compatibility, use Chart.helpers.callback instead.');
  FPack.add(' * @function Chart.helpers.callCallback');
  FPack.add(' * @deprecated since version 2.6.0');
  FPack.add(' * @todo remove at version 3');
  FPack.add(' * @private');
  FPack.add(' */');
  FPack.add('helpers.callCallback = helpers.callback;');
  FPack.add('');
  FPack.add('/**');
  FPack.add(' * Provided for backward compatibility, use Array.prototype.indexOf instead.');
  FPack.add(' * Array.prototype.indexOf compatibility: Chrome, Opera, Safari, FF1.5+, IE9+');
  FPack.add(' * @function Chart.helpers.indexOf');
  FPack.add(' * @deprecated since version 2.7.0');
  FPack.add(' * @todo remove at version 3');
  FPack.add(' * @private');
  FPack.add(' */');
  FPack.add('helpers.indexOf = function(array, item, fromIndex) {');
  FPack.add('	return Array.prototype.indexOf.call(array, item, fromIndex);');
  FPack.add('};');
  FPack.add('');
  FPack.add('/**');
  FPack.add(' * Provided for backward compatibility, use Chart.helpers.valueOrDefault instead.');
  FPack.add(' * @function Chart.helpers.getValueOrDefault');
  FPack.add(' * @deprecated since version 2.7.0');
  FPack.add(' * @todo remove at version 3');
  FPack.add(' * @private');
  FPack.add(' */');
  FPack.add('helpers.getValueOrDefault = helpers.valueOrDefault;');
  FPack.add('');
  FPack.add('/**');
  FPack.add(' * Provided for backward compatibility, use Chart.helpers.valueAtIndexOrDefault instead.');
  FPack.add(' * @function Chart.helpers.getValueAtIndexOrDefault');
  FPack.add(' * @deprecated since version 2.7.0');
  FPack.add(' * @todo remove at version 3');
  FPack.add(' * @private');
  FPack.add(' */');
  FPack.add('helpers.getValueAtIndexOrDefault = helpers.valueAtIndexOrDefault;');
  FPack.add('');
  FPack.add('},{}],43:[function(require,module,exports){');
  FPack.add('''use strict'';');
  FPack.add('');
  FPack.add('var helpers = require(42);');
  FPack.add('');
  FPack.add('/**');
  FPack.add(' * Easing functions adapted from Robert Penner''s easing equations.');
  FPack.add(' * @namespace Chart.helpers.easingEffects');
  FPack.add(' * @see http://www.robertpenner.com/easing/');
  FPack.add(' */');
  FPack.add('var effects = {');
  FPack.add('	linear: function(t) {');
  FPack.add('		return t;');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	easeInQuad: function(t) {');
  FPack.add('		return t * t;');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	easeOutQuad: function(t) {');
  FPack.add('		return -t * (t - 2);');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	easeInOutQuad: function(t) {');
  FPack.add('		if ((t /= 0.5) < 1) {');
  FPack.add('			return 0.5 * t * t;');
  FPack.add('		}');
  FPack.add('		return -0.5 * ((--t) * (t - 2) - 1);');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	easeInCubic: function(t) {');
  FPack.add('		return t * t * t;');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	easeOutCubic: function(t) {');
  FPack.add('		return (t = t - 1) * t * t + 1;');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	easeInOutCubic: function(t) {');
  FPack.add('		if ((t /= 0.5) < 1) {');
  FPack.add('			return 0.5 * t * t * t;');
  FPack.add('		}');
  FPack.add('		return 0.5 * ((t -= 2) * t * t + 2);');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	easeInQuart: function(t) {');
  FPack.add('		return t * t * t * t;');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	easeOutQuart: function(t) {');
  FPack.add('		return -((t = t - 1) * t * t * t - 1);');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	easeInOutQuart: function(t) {');
  FPack.add('		if ((t /= 0.5) < 1) {');
  FPack.add('			return 0.5 * t * t * t * t;');
  FPack.add('		}');
  FPack.add('		return -0.5 * ((t -= 2) * t * t * t - 2);');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	easeInQuint: function(t) {');
  FPack.add('		return t * t * t * t * t;');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	easeOutQuint: function(t) {');
  FPack.add('		return (t = t - 1) * t * t * t * t + 1;');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	easeInOutQuint: function(t) {');
  FPack.add('		if ((t /= 0.5) < 1) {');
  FPack.add('			return 0.5 * t * t * t * t * t;');
  FPack.add('		}');
  FPack.add('		return 0.5 * ((t -= 2) * t * t * t * t + 2);');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	easeInSine: function(t) {');
  FPack.add('		return -Math.cos(t * (Math.PI / 2)) + 1;');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	easeOutSine: function(t) {');
  FPack.add('		return Math.sin(t * (Math.PI / 2));');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	easeInOutSine: function(t) {');
  FPack.add('		return -0.5 * (Math.cos(Math.PI * t) - 1);');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	easeInExpo: function(t) {');
  FPack.add('		return (t === 0) ? 0 : Math.pow(2, 10 * (t - 1));');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	easeOutExpo: function(t) {');
  FPack.add('		return (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1;');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	easeInOutExpo: function(t) {');
  FPack.add('		if (t === 0) {');
  FPack.add('			return 0;');
  FPack.add('		}');
  FPack.add('		if (t === 1) {');
  FPack.add('			return 1;');
  FPack.add('		}');
  FPack.add('		if ((t /= 0.5) < 1) {');
  FPack.add('			return 0.5 * Math.pow(2, 10 * (t - 1));');
  FPack.add('		}');
  FPack.add('		return 0.5 * (-Math.pow(2, -10 * --t) + 2);');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	easeInCirc: function(t) {');
end;

procedure TChartbundleJS.ChartbundleJS_45;
begin
  FPack.add('		if (t >= 1) {');
  FPack.add('			return t;');
  FPack.add('		}');
  FPack.add('		return -(Math.sqrt(1 - t * t) - 1);');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	easeOutCirc: function(t) {');
  FPack.add('		return Math.sqrt(1 - (t = t - 1) * t);');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	easeInOutCirc: function(t) {');
  FPack.add('		if ((t /= 0.5) < 1) {');
  FPack.add('			return -0.5 * (Math.sqrt(1 - t * t) - 1);');
  FPack.add('		}');
  FPack.add('		return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	easeInElastic: function(t) {');
  FPack.add('		var s = 1.70158;');
  FPack.add('		var p = 0;');
  FPack.add('		var a = 1;');
  FPack.add('		if (t === 0) {');
  FPack.add('			return 0;');
  FPack.add('		}');
  FPack.add('		if (t === 1) {');
  FPack.add('			return 1;');
  FPack.add('		}');
  FPack.add('		if (!p) {');
  FPack.add('			p = 0.3;');
  FPack.add('		}');
  FPack.add('		if (a < 1) {');
  FPack.add('			a = 1;');
  FPack.add('			s = p / 4;');
  FPack.add('		} else {');
  FPack.add('			s = p / (2 * Math.PI) * Math.asin(1 / a);');
  FPack.add('		}');
  FPack.add('		return -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	easeOutElastic: function(t) {');
  FPack.add('		var s = 1.70158;');
  FPack.add('		var p = 0;');
  FPack.add('		var a = 1;');
  FPack.add('		if (t === 0) {');
  FPack.add('			return 0;');
  FPack.add('		}');
  FPack.add('		if (t === 1) {');
  FPack.add('			return 1;');
  FPack.add('		}');
  FPack.add('		if (!p) {');
  FPack.add('			p = 0.3;');
  FPack.add('		}');
  FPack.add('		if (a < 1) {');
  FPack.add('			a = 1;');
  FPack.add('			s = p / 4;');
  FPack.add('		} else {');
  FPack.add('			s = p / (2 * Math.PI) * Math.asin(1 / a);');
  FPack.add('		}');
  FPack.add('		return a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	easeInOutElastic: function(t) {');
  FPack.add('		var s = 1.70158;');
  FPack.add('		var p = 0;');
  FPack.add('		var a = 1;');
  FPack.add('		if (t === 0) {');
  FPack.add('			return 0;');
  FPack.add('		}');
  FPack.add('		if ((t /= 0.5) === 2) {');
  FPack.add('			return 1;');
  FPack.add('		}');
  FPack.add('		if (!p) {');
  FPack.add('			p = 0.45;');
  FPack.add('		}');
  FPack.add('		if (a < 1) {');
  FPack.add('			a = 1;');
  FPack.add('			s = p / 4;');
  FPack.add('		} else {');
  FPack.add('			s = p / (2 * Math.PI) * Math.asin(1 / a);');
  FPack.add('		}');
  FPack.add('		if (t < 1) {');
  FPack.add('			return -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));');
  FPack.add('		}');
  FPack.add('		return a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;');
  FPack.add('	},');
  FPack.add('	easeInBack: function(t) {');
  FPack.add('		var s = 1.70158;');
  FPack.add('		return t * t * ((s + 1) * t - s);');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	easeOutBack: function(t) {');
  FPack.add('		var s = 1.70158;');
  FPack.add('		return (t = t - 1) * t * ((s + 1) * t + s) + 1;');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	easeInOutBack: function(t) {');
  FPack.add('		var s = 1.70158;');
  FPack.add('		if ((t /= 0.5) < 1) {');
  FPack.add('			return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));');
  FPack.add('		}');
  FPack.add('		return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	easeInBounce: function(t) {');
  FPack.add('		return 1 - effects.easeOutBounce(1 - t);');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	easeOutBounce: function(t) {');
  FPack.add('		if (t < (1 / 2.75)) {');
  FPack.add('			return 7.5625 * t * t;');
  FPack.add('		}');
  FPack.add('		if (t < (2 / 2.75)) {');
  FPack.add('			return 7.5625 * (t -= (1.5 / 2.75)) * t + 0.75;');
  FPack.add('		}');
  FPack.add('		if (t < (2.5 / 2.75)) {');
  FPack.add('			return 7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375;');
  FPack.add('		}');
  FPack.add('		return 7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375;');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	easeInOutBounce: function(t) {');
  FPack.add('		if (t < 0.5) {');
  FPack.add('			return effects.easeInBounce(t * 2) * 0.5;');
  FPack.add('		}');
  FPack.add('		return effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;');
  FPack.add('	}');
  FPack.add('};');
  FPack.add('');
  FPack.add('module.exports = {');
  FPack.add('	effects: effects');
  FPack.add('};');
  FPack.add('');
  FPack.add('// DEPRECATIONS');
  FPack.add('');
  FPack.add('/**');
  FPack.add(' * Provided for backward compatibility, use Chart.helpers.easing.effects instead.');
  FPack.add(' * @function Chart.helpers.easingEffects');
  FPack.add(' * @deprecated since version 2.7.0');
  FPack.add(' * @todo remove at version 3');
  FPack.add(' * @private');
  FPack.add(' */');
  FPack.add('helpers.easingEffects = effects;');
  FPack.add('');
  FPack.add('},{"42":42}],44:[function(require,module,exports){');
  FPack.add('''use strict'';');
  FPack.add('');
  FPack.add('var helpers = require(42);');
  FPack.add('');
  FPack.add('/**');
  FPack.add(' * @alias Chart.helpers.options');
  FPack.add(' * @namespace');
  FPack.add(' */');
  FPack.add('module.exports = {');
  FPack.add('	/**');
  FPack.add('	 * Converts the given line height `value` in pixels for a specific font `size`.');
  FPack.add('	 * @param {Number|String} value - The lineHeight to parse (eg. 1.6, ''14px'', ''75%'', ''1.6em'').');
  FPack.add('	 * @param {Number} size - The font size (in pixels) used to resolve relative `value`.');
  FPack.add('	 * @returns {Number} The effective line height in pixels (size * 1.2 if value is invalid).');
  FPack.add('	 * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height');
  FPack.add('	 * @since 2.7.0');
  FPack.add('	 */');
  FPack.add('	toLineHeight: function(value, size) {');
  FPack.add('		var matches = ('''' + value).match(/^(normal|(\d+(?:\.\d+)?)(px|em|%)?)$/);');
  FPack.add('		if (!matches || matches[1] === ''normal'') {');
  FPack.add('			return size * 1.2;');
  FPack.add('		}');
  FPack.add('');
  FPack.add('		value = +matches[2];');
  FPack.add('');
  FPack.add('		switch (matches[3]) {');
  FPack.add('		case ''px'':');
  FPack.add('			return value;');
  FPack.add('		case ''%'':');
  FPack.add('			value /= 100;');
  FPack.add('			break;');
  FPack.add('		default:');
  FPack.add('			break;');
  FPack.add('		}');
  FPack.add('');
  FPack.add('		return size * value;');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	/**');
  FPack.add('	 * Converts the given value into a padding object with pre-computed width/height.');
  FPack.add('	 * @param {Number|Object} value - If a number, set the value to all TRBL component,');
  FPack.add('	 *  else, if and object, use defined properties and sets undefined ones to 0.');
  FPack.add('	 * @returns {Object} The padding values (top, right, bottom, left, width, height)');
  FPack.add('	 * @since 2.7.0');
  FPack.add('	 */');
  FPack.add('	toPadding: function(value) {');
  FPack.add('		var t, r, b, l;');
  FPack.add('');
  FPack.add('		if (helpers.isObject(value)) {');
  FPack.add('			t = +value.top || 0;');
  FPack.add('			r = +value.right || 0;');
  FPack.add('			b = +value.bottom || 0;');
  FPack.add('			l = +value.left || 0;');
  FPack.add('		} else {');
  FPack.add('			t = r = b = l = +value || 0;');
  FPack.add('		}');
  FPack.add('');
  FPack.add('		return {');
  FPack.add('			top: t,');
  FPack.add('			right: r,');
  FPack.add('			bottom: b,');
  FPack.add('			left: l,');
  FPack.add('			height: t + b,');
  FPack.add('			width: l + r');
  FPack.add('		};');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	/**');
  FPack.add('	 * Evaluates the given `inputs` sequentially and returns the first defined value.');
  FPack.add('	 * @param {Array[]} inputs - An array of values, falling back to the last value.');
  FPack.add('	 * @param {Object} [context] - If defined and the current value is a function, the value');
  FPack.add('	 * is called with `context` as first argument and the result becomes the new input.');
  FPack.add('	 * @param {Number} [index] - If defined and the current value is an array, the value');
  FPack.add('	 * at `index` become the new input.');
  FPack.add('	 * @since 2.7.0');
  FPack.add('	 */');
  FPack.add('	resolve: function(inputs, context, index) {');
  FPack.add('		var i, ilen, value;');
  FPack.add('');
  FPack.add('		for (i = 0, ilen = inputs.length; i < ilen; ++i) {');
  FPack.add('			value = inputs[i];');
  FPack.add('			if (value === undefined) {');
  FPack.add('				continue;');
  FPack.add('			}');
  FPack.add('			if (context !== undefined && typeof value === ''function'') {');
  FPack.add('				value = value(context);');
  FPack.add('			}');
  FPack.add('			if (index !== undefined && helpers.isArray(value)) {');
  FPack.add('				value = value[index];');
  FPack.add('			}');
  FPack.add('			if (value !== undefined) {');
  FPack.add('				return value;');
  FPack.add('			}');
  FPack.add('		}');
  FPack.add('	}');
  FPack.add('};');
  FPack.add('');
  FPack.add('},{"42":42}],45:[function(require,module,exports){');
  FPack.add('''use strict'';');
  FPack.add('');
  FPack.add('module.exports = require(42);');
  FPack.add('module.exports.easing = require(43);');
  FPack.add('module.exports.canvas = require(41);');
  FPack.add('module.exports.options = require(44);');
  FPack.add('');
  FPack.add('},{"41":41,"42":42,"43":43,"44":44}],46:[function(require,module,exports){');
  FPack.add('/**');
  FPack.add(' * Platform fallback implementation (minimal).');
  FPack.add(' * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939');
  FPack.add(' */');
  FPack.add('');
  FPack.add('module.exports = {');
  FPack.add('	acquireContext: function(item) {');
  FPack.add('		if (item && item.canvas) {');
  FPack.add('			// Support for any object associated to a canvas (including a context2d)');
  FPack.add('			item = item.canvas;');
  FPack.add('		}');
  FPack.add('');
  FPack.add('		return item && item.getContext(''2d'') || null;');
  FPack.add('	}');
  FPack.add('};');
  FPack.add('');
  FPack.add('},{}],47:[function(require,module,exports){');
  FPack.add('/**');
  FPack.add(' * Chart.Platform implementation for targeting a web browser');
  FPack.add(' */');
  FPack.add('');
  FPack.add('''use strict'';');
  FPack.add('');
  FPack.add('var helpers = require(45);');
  FPack.add('');
  FPack.add('var EXPANDO_KEY = ''$chartjs'';');
  FPack.add('var CSS_PREFIX = ''chartjs-'';');
  FPack.add('var CSS_RENDER_MONITOR = CSS_PREFIX + ''render-monitor'';');
  FPack.add('var CSS_RENDER_ANIMATION = CSS_PREFIX + ''render-animation'';');
  FPack.add('var ANIMATION_START_EVENTS = [''animationstart'', ''webkitAnimationStart''];');
  FPack.add('');
  FPack.add('/**');
  FPack.add(' * DOM event types -> Chart.js event types.');
  FPack.add(' * Note: only events with different types are mapped.');
  FPack.add(' * @see https://developer.mozilla.org/en-US/docs/Web/Events');
  FPack.add(' */');
  FPack.add('var EVENT_TYPES = {');
  FPack.add('	touchstart: ''mousedown'',');
  FPack.add('	touchmove: ''mousemove'',');
  FPack.add('	touchend: ''mouseup'',');
  FPack.add('	pointerenter: ''mouseenter'',');
  FPack.add('	pointerdown: ''mousedown'',');
  FPack.add('	pointermove: ''mousemove'',');
  FPack.add('	pointerup: ''mouseup'',');
  FPack.add('	pointerleave: ''mouseout'',');
  FPack.add('	pointerout: ''mouseout''');
  FPack.add('};');
  FPack.add('');
  FPack.add('/**');
  FPack.add(' * The "used" size is the final value of a dimension property after all calculations have');
  FPack.add(' * been performed. This method uses the computed style of `element` but returns undefined');
  FPack.add(' * if the computed style is not expressed in pixels. That can happen in some cases where');
  FPack.add(' * `element` has a size relative to its parent and this last one is not yet displayed,');
  FPack.add(' * for example because of `display: none` on a parent node.');
  FPack.add(' * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value');
  FPack.add(' * @returns {Number} Size in pixels or undefined if unknown.');
  FPack.add(' */');
  FPack.add('function readUsedSize(element, property) {');
  FPack.add('	var value = helpers.getStyle(element, property);');
  FPack.add('	var matches = value && value.match(/^(\d+)(\.\d+)?px$/);');
  FPack.add('	return matches ? Number(matches[1]) : undefined;');
  FPack.add('}');
  FPack.add('');
  FPack.add('/**');
  FPack.add(' * Initializes the canvas style and render size without modifying the canvas display size,');
  FPack.add(' * since responsiveness is handled by the controller.resize() method. The config is used');
  FPack.add(' * to determine the aspect ratio to apply in case no explicit height has been specified.');
  FPack.add(' */');
  FPack.add('function initCanvas(canvas, config) {');
  FPack.add('	var style = canvas.style;');
  FPack.add('');
  FPack.add('	// NOTE(SB) canvas.getAttribute(''width'') !== canvas.width: in the first case it');
  FPack.add('	// returns null or '''' if no explicit value has been set to the canvas attribute.');
  FPack.add('	var renderHeight = canvas.getAttribute(''height'');');
  FPack.add('	var renderWidth = canvas.getAttribute(''width'');');
  FPack.add('');
  FPack.add('	// Chart.js modifies some canvas values that we want to restore on destroy');
  FPack.add('	canvas[EXPANDO_KEY] = {');
  FPack.add('		initial: {');
  FPack.add('			height: renderHeight,');
  FPack.add('			width: renderWidth,');
  FPack.add('			style: {');
  FPack.add('				display: style.display,');
  FPack.add('				height: style.height,');
  FPack.add('				width: style.width');
  FPack.add('			}');
end;

procedure TChartbundleJS.ChartbundleJS_46;
begin
  FPack.add('		}');
  FPack.add('	};');
  FPack.add('');
  FPack.add('	// Force canvas to display as block to avoid extra space caused by inline');
  FPack.add('	// elements, which would interfere with the responsive resize process.');
  FPack.add('	// https://github.com/chartjs/Chart.js/issues/2538');
  FPack.add('	style.display = style.display || ''block'';');
  FPack.add('');
  FPack.add('	if (renderWidth === null || renderWidth === '''') {');
  FPack.add('		var displayWidth = readUsedSize(canvas, ''width'');');
  FPack.add('		if (displayWidth !== undefined) {');
  FPack.add('			canvas.width = displayWidth;');
  FPack.add('		}');
  FPack.add('	}');
  FPack.add('');
  FPack.add('	if (renderHeight === null || renderHeight === '''') {');
  FPack.add('		if (canvas.style.height === '''') {');
  FPack.add('			// If no explicit render height and style height, let''s apply the aspect ratio,');
  FPack.add('			// which one can be specified by the user but also by charts as default option');
  FPack.add('			// (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.');
  FPack.add('			canvas.height = canvas.width / (config.options.aspectRatio || 2);');
  FPack.add('		} else {');
  FPack.add('			var displayHeight = readUsedSize(canvas, ''height'');');
  FPack.add('			if (displayWidth !== undefined) {');
  FPack.add('				canvas.height = displayHeight;');
  FPack.add('			}');
  FPack.add('		}');
  FPack.add('	}');
  FPack.add('');
  FPack.add('	return canvas;');
  FPack.add('}');
  FPack.add('');
  FPack.add('/**');
  FPack.add(' * Detects support for options object argument in addEventListener.');
  FPack.add(' * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support');
  FPack.add(' * @private');
  FPack.add(' */');
  FPack.add('var supportsEventListenerOptions = (function() {');
  FPack.add('	var supports = false;');
  FPack.add('	try {');
  FPack.add('		var options = Object.defineProperty({}, ''passive'', {');
  FPack.add('			get: function() {');
  FPack.add('				supports = true;');
  FPack.add('			}');
  FPack.add('		});');
  FPack.add('		window.addEventListener(''e'', null, options);');
  FPack.add('	} catch (e) {');
  FPack.add('		// continue regardless of error');
  FPack.add('	}');
  FPack.add('	return supports;');
  FPack.add('}());');
  FPack.add('');
  FPack.add('// Default passive to true as expected by Chrome for ''touchstart'' and ''touchend'' events.');
  FPack.add('// https://github.com/chartjs/Chart.js/issues/4287');
  FPack.add('var eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;');
  FPack.add('');
  FPack.add('function addEventListener(node, type, listener) {');
  FPack.add('	node.addEventListener(type, listener, eventListenerOptions);');
  FPack.add('}');
  FPack.add('');
  FPack.add('function removeEventListener(node, type, listener) {');
  FPack.add('	node.removeEventListener(type, listener, eventListenerOptions);');
  FPack.add('}');
  FPack.add('');
  FPack.add('function createEvent(type, chart, x, y, nativeEvent) {');
  FPack.add('	return {');
  FPack.add('		type: type,');
  FPack.add('		chart: chart,');
  FPack.add('		native: nativeEvent || null,');
  FPack.add('		x: x !== undefined ? x : null,');
  FPack.add('		y: y !== undefined ? y : null,');
  FPack.add('	};');
  FPack.add('}');
  FPack.add('');
  FPack.add('function fromNativeEvent(event, chart) {');
  FPack.add('	var type = EVENT_TYPES[event.type] || event.type;');
  FPack.add('	var pos = helpers.getRelativePosition(event, chart);');
  FPack.add('	return createEvent(type, chart, pos.x, pos.y, event);');
  FPack.add('}');
  FPack.add('');
  FPack.add('function throttled(fn, thisArg) {');
  FPack.add('	var ticking = false;');
  FPack.add('	var args = [];');
  FPack.add('');
  FPack.add('	return function() {');
  FPack.add('		args = Array.prototype.slice.call(arguments);');
  FPack.add('		thisArg = thisArg || this;');
  FPack.add('');
  FPack.add('		if (!ticking) {');
  FPack.add('			ticking = true;');
  FPack.add('			helpers.requestAnimFrame.call(window, function() {');
  FPack.add('				ticking = false;');
  FPack.add('				fn.apply(thisArg, args);');
  FPack.add('			});');
  FPack.add('		}');
  FPack.add('	};');
  FPack.add('}');
  FPack.add('');
  FPack.add('// Implementation based on https://github.com/marcj/css-element-queries');
  FPack.add('function createResizer(handler) {');
  FPack.add('	var resizer = document.createElement(''div'');');
  FPack.add('	var cls = CSS_PREFIX + ''size-monitor'';');
  FPack.add('	var maxSize = 1000000;');
  FPack.add('	var style =');
  FPack.add('		''position:absolute;'' +');
  FPack.add('		''left:0;'' +');
  FPack.add('		''top:0;'' +');
  FPack.add('		''right:0;'' +');
  FPack.add('		''bottom:0;'' +');
  FPack.add('		''overflow:hidden;'' +');
  FPack.add('		''pointer-events:none;'' +');
  FPack.add('		''visibility:hidden;'' +');
  FPack.add('		''z-index:-1;'';');
  FPack.add('');
  FPack.add('	resizer.style.cssText = style;');
  FPack.add('	resizer.className = cls;');
  FPack.add('	resizer.innerHTML =');
  FPack.add('		''<div class="'' + cls + ''-expand" style="'' + style + ''">'' +');
  FPack.add('			''<div style="'' +');
  FPack.add('				''position:absolute;'' +');
  FPack.add('				''width:'' + maxSize + ''px;'' +');
  FPack.add('				''height:'' + maxSize + ''px;'' +');
  FPack.add('				''left:0;'' +');
  FPack.add('				''top:0">'' +');
  FPack.add('			''</div>'' +');
  FPack.add('		''</div>'' +');
  FPack.add('		''<div class="'' + cls + ''-shrink" style="'' + style + ''">'' +');
  FPack.add('			''<div style="'' +');
  FPack.add('				''position:absolute;'' +');
  FPack.add('				''width:200%;'' +');
  FPack.add('				''height:200%;'' +');
  FPack.add('				''left:0; '' +');
  FPack.add('				''top:0">'' +');
  FPack.add('			''</div>'' +');
  FPack.add('		''</div>'';');
  FPack.add('');
  FPack.add('	var expand = resizer.childNodes[0];');
  FPack.add('	var shrink = resizer.childNodes[1];');
  FPack.add('');
  FPack.add('	resizer._reset = function() {');
  FPack.add('		expand.scrollLeft = maxSize;');
  FPack.add('		expand.scrollTop = maxSize;');
  FPack.add('		shrink.scrollLeft = maxSize;');
  FPack.add('		shrink.scrollTop = maxSize;');
  FPack.add('	};');
  FPack.add('	var onScroll = function() {');
  FPack.add('		resizer._reset();');
  FPack.add('		handler();');
  FPack.add('	};');
  FPack.add('');
  FPack.add('	addEventListener(expand, ''scroll'', onScroll.bind(expand, ''expand''));');
  FPack.add('	addEventListener(shrink, ''scroll'', onScroll.bind(shrink, ''shrink''));');
  FPack.add('');
  FPack.add('	return resizer;');
  FPack.add('}');
  FPack.add('');
  FPack.add('// https://davidwalsh.name/detect-node-insertion');
  FPack.add('function watchForRender(node, handler) {');
  FPack.add('	var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});');
  FPack.add('	var proxy = expando.renderProxy = function(e) {');
  FPack.add('		if (e.animationName === CSS_RENDER_ANIMATION) {');
  FPack.add('			handler();');
  FPack.add('		}');
  FPack.add('	};');
  FPack.add('');
  FPack.add('	helpers.each(ANIMATION_START_EVENTS, function(type) {');
  FPack.add('		addEventListener(node, type, proxy);');
  FPack.add('	});');
  FPack.add('');
  FPack.add('	// #4737: Chrome might skip the CSS animation when the CSS_RENDER_MONITOR class');
  FPack.add('	// is removed then added back immediately (same animation frame?). Accessing the');
  FPack.add('	// `offsetParent` property will force a reflow and re-evaluate the CSS animation.');
  FPack.add('	// https://gist.github.com/paulirish/5d52fb081b3570c81e3a#box-metrics');
  FPack.add('	// https://github.com/chartjs/Chart.js/issues/4737');
  FPack.add('	expando.reflow = !!node.offsetParent;');
  FPack.add('');
  FPack.add('	node.classList.add(CSS_RENDER_MONITOR);');
  FPack.add('}');
  FPack.add('');
  FPack.add('function unwatchForRender(node) {');
  FPack.add('	var expando = node[EXPANDO_KEY] || {};');
  FPack.add('	var proxy = expando.renderProxy;');
  FPack.add('');
  FPack.add('	if (proxy) {');
  FPack.add('		helpers.each(ANIMATION_START_EVENTS, function(type) {');
  FPack.add('			removeEventListener(node, type, proxy);');
  FPack.add('		});');
  FPack.add('');
  FPack.add('		delete expando.renderProxy;');
  FPack.add('	}');
  FPack.add('');
  FPack.add('	node.classList.remove(CSS_RENDER_MONITOR);');
  FPack.add('}');
  FPack.add('');
  FPack.add('function addResizeListener(node, listener, chart) {');
  FPack.add('	var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});');
  FPack.add('');
  FPack.add('	// Let''s keep track of this added resizer and thus avoid DOM query when removing it.');
  FPack.add('	var resizer = expando.resizer = createResizer(throttled(function() {');
  FPack.add('		if (expando.resizer) {');
  FPack.add('			return listener(createEvent(''resize'', chart));');
  FPack.add('		}');
  FPack.add('	}));');
  FPack.add('');
  FPack.add('	// The resizer needs to be attached to the node parent, so we first need to be');
  FPack.add('	// sure that `node` is attached to the DOM before injecting the resizer element.');
  FPack.add('	watchForRender(node, function() {');
  FPack.add('		if (expando.resizer) {');
  FPack.add('			var container = node.parentNode;');
  FPack.add('			if (container && container !== resizer.parentNode) {');
  FPack.add('				container.insertBefore(resizer, container.firstChild);');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			// The container size might have changed, let''s reset the resizer state.');
  FPack.add('			resizer._reset();');
  FPack.add('		}');
  FPack.add('	});');
  FPack.add('}');
  FPack.add('');
  FPack.add('function removeResizeListener(node) {');
  FPack.add('	var expando = node[EXPANDO_KEY] || {};');
  FPack.add('	var resizer = expando.resizer;');
  FPack.add('');
  FPack.add('	delete expando.resizer;');
  FPack.add('	unwatchForRender(node);');
  FPack.add('');
  FPack.add('	if (resizer && resizer.parentNode) {');
  FPack.add('		resizer.parentNode.removeChild(resizer);');
  FPack.add('	}');
  FPack.add('}');
  FPack.add('');
  FPack.add('function injectCSS(platform, css) {');
  FPack.add('	// http://stackoverflow.com/q/3922139');
  FPack.add('	var style = platform._style || document.createElement(''style'');');
  FPack.add('	if (!platform._style) {');
  FPack.add('		platform._style = style;');
  FPack.add('		css = ''/* Chart.js */\n'' + css;');
  FPack.add('		style.setAttribute(''type'', ''text/css'');');
  FPack.add('		document.getElementsByTagName(''head'')[0].appendChild(style);');
  FPack.add('	}');
  FPack.add('');
  FPack.add('	style.appendChild(document.createTextNode(css));');
  FPack.add('}');
  FPack.add('');
  FPack.add('module.exports = {');
  FPack.add('	/**');
  FPack.add('	 * This property holds whether this platform is enabled for the current environment.');
  FPack.add('	 * Currently used by platform.js to select the proper implementation.');
  FPack.add('	 * @private');
  FPack.add('	 */');
  FPack.add('	_enabled: typeof window !== ''undefined'' && typeof document !== ''undefined'',');
  FPack.add('');
  FPack.add('	initialize: function() {');
  FPack.add('		var keyframes = ''from{opacity:0.99}to{opacity:1}'';');
  FPack.add('');
  FPack.add('		injectCSS(this,');
  FPack.add('			// DOM rendering detection');
  FPack.add('			// https://davidwalsh.name/detect-node-insertion');
  FPack.add('			''@-webkit-keyframes '' + CSS_RENDER_ANIMATION + ''{'' + keyframes + ''}'' +');
  FPack.add('			''@keyframes '' + CSS_RENDER_ANIMATION + ''{'' + keyframes + ''}'' +');
  FPack.add('			''.'' + CSS_RENDER_MONITOR + ''{'' +');
  FPack.add('				''-webkit-animation:'' + CSS_RENDER_ANIMATION + '' 0.001s;'' +');
  FPack.add('				''animation:'' + CSS_RENDER_ANIMATION + '' 0.001s;'' +');
  FPack.add('			''}''');
  FPack.add('		);');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	acquireContext: function(item, config) {');
  FPack.add('		if (typeof item === ''string'') {');
  FPack.add('			item = document.getElementById(item);');
  FPack.add('		} else if (item.length) {');
  FPack.add('			// Support for array based queries (such as jQuery)');
  FPack.add('			item = item[0];');
  FPack.add('		}');
  FPack.add('');
  FPack.add('		if (item && item.canvas) {');
  FPack.add('			// Support for any object associated to a canvas (including a context2d)');
  FPack.add('			item = item.canvas;');
  FPack.add('		}');
  FPack.add('');
  FPack.add('		// To prevent canvas fingerprinting, some add-ons undefine the getContext');
  FPack.add('		// method, for example: https://github.com/kkapsner/CanvasBlocker');
  FPack.add('		// https://github.com/chartjs/Chart.js/issues/2807');
  FPack.add('		var context = item && item.getContext && item.getContext(''2d'');');
  FPack.add('');
  FPack.add('		// `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the item is');
  FPack.add('		// inside an iframe or when running in a protected environment. We could guess the');
  FPack.add('		// types from their toString() value but let''s keep things flexible and assume it''s');
  FPack.add('		// a sufficient condition if the item has a context2D which has item as `canvas`.');
  FPack.add('		// https://github.com/chartjs/Chart.js/issues/3887');
  FPack.add('		// https://github.com/chartjs/Chart.js/issues/4102');
  FPack.add('		// https://github.com/chartjs/Chart.js/issues/4152');
  FPack.add('		if (context && context.canvas === item) {');
  FPack.add('			initCanvas(item, config);');
  FPack.add('			return context;');
  FPack.add('		}');
  FPack.add('');
  FPack.add('		return null;');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	releaseContext: function(context) {');
  FPack.add('		var canvas = context.canvas;');
  FPack.add('		if (!canvas[EXPANDO_KEY]) {');
  FPack.add('			return;');
  FPack.add('		}');
  FPack.add('');
  FPack.add('		var initial = canvas[EXPANDO_KEY].initial;');
  FPack.add('		[''height'', ''width''].forEach(function(prop) {');
  FPack.add('			var value = initial[prop];');
  FPack.add('			if (helpers.isNullOrUndef(value)) {');
  FPack.add('				canvas.removeAttribute(prop);');
  FPack.add('			} else {');
  FPack.add('				canvas.setAttribute(prop, value);');
  FPack.add('			}');
  FPack.add('		});');
  FPack.add('');
  FPack.add('		helpers.each(initial.style || {}, function(value, key) {');
  FPack.add('			canvas.style[key] = value;');
  FPack.add('		});');
  FPack.add('');
  FPack.add('		// The canvas render size might have been changed (and thus the state stack discarded),');
  FPack.add('		// we can''t use save() and restore() to restore the initial state. So make sure that at');
  FPack.add('		// least the canvas context is reset to the default state by setting the canvas width.');
  FPack.add('		// https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html');
  FPack.add('		canvas.width = canvas.width;');
  FPack.add('');
  FPack.add('		delete canvas[EXPANDO_KEY];');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	addEventListener: function(chart, type, listener) {');
  FPack.add('		var canvas = chart.canvas;');
  FPack.add('		if (type === ''resize'') {');
  FPack.add('			// Note: the resize event is not supported on all browsers.');
  FPack.add('			addResizeListener(canvas, listener, chart);');
  FPack.add('			return;');
  FPack.add('		}');
end;

procedure TChartbundleJS.ChartbundleJS_47;
begin
  FPack.add('');
  FPack.add('		var expando = listener[EXPANDO_KEY] || (listener[EXPANDO_KEY] = {});');
  FPack.add('		var proxies = expando.proxies || (expando.proxies = {});');
  FPack.add('		var proxy = proxies[chart.id + ''_'' + type] = function(event) {');
  FPack.add('			listener(fromNativeEvent(event, chart));');
  FPack.add('		};');
  FPack.add('');
  FPack.add('		addEventListener(canvas, type, proxy);');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	removeEventListener: function(chart, type, listener) {');
  FPack.add('		var canvas = chart.canvas;');
  FPack.add('		if (type === ''resize'') {');
  FPack.add('			// Note: the resize event is not supported on all browsers.');
  FPack.add('			removeResizeListener(canvas, listener);');
  FPack.add('			return;');
  FPack.add('		}');
  FPack.add('');
  FPack.add('		var expando = listener[EXPANDO_KEY] || {};');
  FPack.add('		var proxies = expando.proxies || {};');
  FPack.add('		var proxy = proxies[chart.id + ''_'' + type];');
  FPack.add('		if (!proxy) {');
  FPack.add('			return;');
  FPack.add('		}');
  FPack.add('');
  FPack.add('		removeEventListener(canvas, type, proxy);');
  FPack.add('	}');
  FPack.add('};');
  FPack.add('');
  FPack.add('// DEPRECATIONS');
  FPack.add('');
  FPack.add('/**');
  FPack.add(' * Provided for backward compatibility, use EventTarget.addEventListener instead.');
  FPack.add(' * EventTarget.addEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+');
  FPack.add(' * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener');
  FPack.add(' * @function Chart.helpers.addEvent');
  FPack.add(' * @deprecated since version 2.7.0');
  FPack.add(' * @todo remove at version 3');
  FPack.add(' * @private');
  FPack.add(' */');
  FPack.add('helpers.addEvent = addEventListener;');
  FPack.add('');
  FPack.add('/**');
  FPack.add(' * Provided for backward compatibility, use EventTarget.removeEventListener instead.');
  FPack.add(' * EventTarget.removeEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+');
  FPack.add(' * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener');
  FPack.add(' * @function Chart.helpers.removeEvent');
  FPack.add(' * @deprecated since version 2.7.0');
  FPack.add(' * @todo remove at version 3');
  FPack.add(' * @private');
  FPack.add(' */');
  FPack.add('helpers.removeEvent = removeEventListener;');
  FPack.add('');
  FPack.add('},{"45":45}],48:[function(require,module,exports){');
  FPack.add('''use strict'';');
  FPack.add('');
  FPack.add('var helpers = require(45);');
  FPack.add('var basic = require(46);');
  FPack.add('var dom = require(47);');
  FPack.add('');
  FPack.add('// @TODO Make possible to select another platform at build time.');
  FPack.add('var implementation = dom._enabled ? dom : basic;');
  FPack.add('');
  FPack.add('/**');
  FPack.add(' * @namespace Chart.platform');
  FPack.add(' * @see https://chartjs.gitbooks.io/proposals/content/Platform.html');
  FPack.add(' * @since 2.4.0');
  FPack.add(' */');
  FPack.add('module.exports = helpers.extend({');
  FPack.add('	/**');
  FPack.add('	 * @since 2.7.0');
  FPack.add('	 */');
  FPack.add('	initialize: function() {},');
  FPack.add('');
  FPack.add('	/**');
  FPack.add('	 * Called at chart construction time, returns a context2d instance implementing');
  FPack.add('	 * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.');
  FPack.add('	 * @param {*} item - The native item from which to acquire context (platform specific)');
  FPack.add('	 * @param {Object} options - The chart options');
  FPack.add('	 * @returns {CanvasRenderingContext2D} context2d instance');
  FPack.add('	 */');
  FPack.add('	acquireContext: function() {},');
  FPack.add('');
  FPack.add('	/**');
  FPack.add('	 * Called at chart destruction time, releases any resources associated to the context');
  FPack.add('	 * previously returned by the acquireContext() method.');
  FPack.add('	 * @param {CanvasRenderingContext2D} context - The context2d instance');
  FPack.add('	 * @returns {Boolean} true if the method succeeded, else false');
  FPack.add('	 */');
  FPack.add('	releaseContext: function() {},');
  FPack.add('');
  FPack.add('	/**');
  FPack.add('	 * Registers the specified listener on the given chart.');
  FPack.add('	 * @param {Chart} chart - Chart from which to listen for event');
  FPack.add('	 * @param {String} type - The ({@link IEvent}) type to listen for');
  FPack.add('	 * @param {Function} listener - Receives a notification (an object that implements');
  FPack.add('	 * the {@link IEvent} interface) when an event of the specified type occurs.');
  FPack.add('	 */');
  FPack.add('	addEventListener: function() {},');
  FPack.add('');
  FPack.add('	/**');
  FPack.add('	 * Removes the specified listener previously registered with addEventListener.');
  FPack.add('	 * @param {Chart} chart -Chart from which to remove the listener');
  FPack.add('	 * @param {String} type - The ({@link IEvent}) type to remove');
  FPack.add('	 * @param {Function} listener - The listener function to remove from the event target.');
  FPack.add('	 */');
  FPack.add('	removeEventListener: function() {}');
  FPack.add('');
  FPack.add('}, implementation);');
  FPack.add('');
  FPack.add('/**');
  FPack.add(' * @interface IPlatform');
  FPack.add(' * Allows abstracting platform dependencies away from the chart');
  FPack.add(' * @borrows Chart.platform.acquireContext as acquireContext');
  FPack.add(' * @borrows Chart.platform.releaseContext as releaseContext');
  FPack.add(' * @borrows Chart.platform.addEventListener as addEventListener');
  FPack.add(' * @borrows Chart.platform.removeEventListener as removeEventListener');
  FPack.add(' */');
  FPack.add('');
  FPack.add('/**');
  FPack.add(' * @interface IEvent');
  FPack.add(' * @prop {String} type - The event type name, possible values are:');
  FPack.add(' * ''contextmenu'', ''mouseenter'', ''mousedown'', ''mousemove'', ''mouseup'', ''mouseout'',');
  FPack.add(' * ''click'', ''dblclick'', ''keydown'', ''keypress'', ''keyup'' and ''resize''');
  FPack.add(' * @prop {*} native - The original native event (null for emulated events, e.g. ''resize'')');
  FPack.add(' * @prop {Number} x - The mouse x position, relative to the canvas (null for incompatible events)');
  FPack.add(' * @prop {Number} y - The mouse y position, relative to the canvas (null for incompatible events)');
  FPack.add(' */');
  FPack.add('');
  FPack.add('},{"45":45,"46":46,"47":47}],49:[function(require,module,exports){');
  FPack.add('''use strict'';');
  FPack.add('');
  FPack.add('module.exports = {};');
  FPack.add('module.exports.filler = require(50);');
  FPack.add('module.exports.legend = require(51);');
  FPack.add('module.exports.title = require(52);');
  FPack.add('');
  FPack.add('},{"50":50,"51":51,"52":52}],50:[function(require,module,exports){');
  FPack.add('/**');
  FPack.add(' * Plugin based on discussion from the following Chart.js issues:');
  FPack.add(' * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569');
  FPack.add(' * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897');
  FPack.add(' */');
  FPack.add('');
  FPack.add('''use strict'';');
  FPack.add('');
  FPack.add('var defaults = require(25);');
  FPack.add('var elements = require(40);');
  FPack.add('var helpers = require(45);');
  FPack.add('');
  FPack.add('defaults._set(''global'', {');
  FPack.add('	plugins: {');
  FPack.add('		filler: {');
  FPack.add('			propagate: true');
  FPack.add('		}');
  FPack.add('	}');
  FPack.add('});');
  FPack.add('');
  FPack.add('var mappers = {');
  FPack.add('	dataset: function(source) {');
  FPack.add('		var index = source.fill;');
  FPack.add('		var chart = source.chart;');
  FPack.add('		var meta = chart.getDatasetMeta(index);');
  FPack.add('		var visible = meta && chart.isDatasetVisible(index);');
  FPack.add('		var points = (visible && meta.dataset._children) || [];');
  FPack.add('		var length = points.length || 0;');
  FPack.add('');
  FPack.add('		return !length ? null : function(point, i) {');
  FPack.add('			return (i < length && points[i]._view) || null;');
  FPack.add('		};');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	boundary: function(source) {');
  FPack.add('		var boundary = source.boundary;');
  FPack.add('		var x = boundary ? boundary.x : null;');
  FPack.add('		var y = boundary ? boundary.y : null;');
  FPack.add('');
  FPack.add('		return function(point) {');
  FPack.add('			return {');
  FPack.add('				x: x === null ? point.x : x,');
  FPack.add('				y: y === null ? point.y : y,');
  FPack.add('			};');
  FPack.add('		};');
  FPack.add('	}');
  FPack.add('};');
  FPack.add('');
  FPack.add('// @todo if (fill[0] === ''#'')');
  FPack.add('function decodeFill(el, index, count) {');
  FPack.add('	var model = el._model || {};');
  FPack.add('	var fill = model.fill;');
  FPack.add('	var target;');
  FPack.add('');
  FPack.add('	if (fill === undefined) {');
  FPack.add('		fill = !!model.backgroundColor;');
  FPack.add('	}');
  FPack.add('');
  FPack.add('	if (fill === false || fill === null) {');
  FPack.add('		return false;');
  FPack.add('	}');
  FPack.add('');
  FPack.add('	if (fill === true) {');
  FPack.add('		return ''origin'';');
  FPack.add('	}');
  FPack.add('');
  FPack.add('	target = parseFloat(fill, 10);');
  FPack.add('	if (isFinite(target) && Math.floor(target) === target) {');
  FPack.add('		if (fill[0] === ''-'' || fill[0] === ''+'') {');
  FPack.add('			target = index + target;');
  FPack.add('		}');
  FPack.add('');
  FPack.add('		if (target === index || target < 0 || target >= count) {');
  FPack.add('			return false;');
  FPack.add('		}');
  FPack.add('');
  FPack.add('		return target;');
  FPack.add('	}');
  FPack.add('');
  FPack.add('	switch (fill) {');
  FPack.add('	// compatibility');
  FPack.add('	case ''bottom'':');
  FPack.add('		return ''start'';');
  FPack.add('	case ''top'':');
  FPack.add('		return ''end'';');
  FPack.add('	case ''zero'':');
  FPack.add('		return ''origin'';');
  FPack.add('	// supported boundaries');
  FPack.add('	case ''origin'':');
  FPack.add('	case ''start'':');
  FPack.add('	case ''end'':');
  FPack.add('		return fill;');
  FPack.add('	// invalid fill values');
  FPack.add('	default:');
  FPack.add('		return false;');
  FPack.add('	}');
  FPack.add('}');
  FPack.add('');
  FPack.add('function computeBoundary(source) {');
  FPack.add('	var model = source.el._model || {};');
  FPack.add('	var scale = source.el._scale || {};');
  FPack.add('	var fill = source.fill;');
  FPack.add('	var target = null;');
  FPack.add('	var horizontal;');
  FPack.add('');
  FPack.add('	if (isFinite(fill)) {');
  FPack.add('		return null;');
  FPack.add('	}');
  FPack.add('');
  FPack.add('	// Backward compatibility: until v3, we still need to support boundary values set on');
  FPack.add('	// the model (scaleTop, scaleBottom and scaleZero) because some external plugins and');
  FPack.add('	// controllers might still use it (e.g. the Smith chart).');
  FPack.add('');
  FPack.add('	if (fill === ''start'') {');
  FPack.add('		target = model.scaleBottom === undefined ? scale.bottom : model.scaleBottom;');
  FPack.add('	} else if (fill === ''end'') {');
  FPack.add('		target = model.scaleTop === undefined ? scale.top : model.scaleTop;');
  FPack.add('	} else if (model.scaleZero !== undefined) {');
  FPack.add('		target = model.scaleZero;');
  FPack.add('	} else if (scale.getBasePosition) {');
  FPack.add('		target = scale.getBasePosition();');
  FPack.add('	} else if (scale.getBasePixel) {');
  FPack.add('		target = scale.getBasePixel();');
  FPack.add('	}');
  FPack.add('');
  FPack.add('	if (target !== undefined && target !== null) {');
  FPack.add('		if (target.x !== undefined && target.y !== undefined) {');
  FPack.add('			return target;');
  FPack.add('		}');
  FPack.add('');
  FPack.add('		if (typeof target === ''number'' && isFinite(target)) {');
  FPack.add('			horizontal = scale.isHorizontal();');
  FPack.add('			return {');
  FPack.add('				x: horizontal ? target : null,');
  FPack.add('				y: horizontal ? null : target');
  FPack.add('			};');
  FPack.add('		}');
  FPack.add('	}');
  FPack.add('');
  FPack.add('	return null;');
  FPack.add('}');
  FPack.add('');
  FPack.add('function resolveTarget(sources, index, propagate) {');
  FPack.add('	var source = sources[index];');
  FPack.add('	var fill = source.fill;');
  FPack.add('	var visited = [index];');
  FPack.add('	var target;');
  FPack.add('');
  FPack.add('	if (!propagate) {');
  FPack.add('		return fill;');
  FPack.add('	}');
  FPack.add('');
  FPack.add('	while (fill !== false && visited.indexOf(fill) === -1) {');
  FPack.add('		if (!isFinite(fill)) {');
  FPack.add('			return fill;');
  FPack.add('		}');
  FPack.add('');
  FPack.add('		target = sources[fill];');
  FPack.add('		if (!target) {');
  FPack.add('			return false;');
  FPack.add('		}');
  FPack.add('');
  FPack.add('		if (target.visible) {');
  FPack.add('			return fill;');
  FPack.add('		}');
  FPack.add('');
  FPack.add('		visited.push(fill);');
  FPack.add('		fill = target.fill;');
  FPack.add('	}');
  FPack.add('');
  FPack.add('	return false;');
  FPack.add('}');
  FPack.add('');
  FPack.add('function createMapper(source) {');
  FPack.add('	var fill = source.fill;');
  FPack.add('	var type = ''dataset'';');
  FPack.add('');
  FPack.add('	if (fill === false) {');
  FPack.add('		return null;');
  FPack.add('	}');
  FPack.add('');
  FPack.add('	if (!isFinite(fill)) {');
  FPack.add('		type = ''boundary'';');
  FPack.add('	}');
  FPack.add('');
  FPack.add('	return mappers[type](source);');
  FPack.add('}');
  FPack.add('');
  FPack.add('function isDrawable(point) {');
  FPack.add('	return point && !point.skip;');
  FPack.add('}');
  FPack.add('');
  FPack.add('function drawArea(ctx, curve0, curve1, len0, len1) {');
  FPack.add('	var i;');
  FPack.add('');
  FPack.add('	if (!len0 || !len1) {');
  FPack.add('		return;');
  FPack.add('	}');
end;

procedure TChartbundleJS.ChartbundleJS_48;
begin
  FPack.add('');
  FPack.add('	// building first area curve (normal)');
  FPack.add('	ctx.moveTo(curve0[0].x, curve0[0].y);');
  FPack.add('	for (i = 1; i < len0; ++i) {');
  FPack.add('		helpers.canvas.lineTo(ctx, curve0[i - 1], curve0[i]);');
  FPack.add('	}');
  FPack.add('');
  FPack.add('	// joining the two area curves');
  FPack.add('	ctx.lineTo(curve1[len1 - 1].x, curve1[len1 - 1].y);');
  FPack.add('');
  FPack.add('	// building opposite area curve (reverse)');
  FPack.add('	for (i = len1 - 1; i > 0; --i) {');
  FPack.add('		helpers.canvas.lineTo(ctx, curve1[i], curve1[i - 1], true);');
  FPack.add('	}');
  FPack.add('}');
  FPack.add('');
  FPack.add('function doFill(ctx, points, mapper, view, color, loop) {');
  FPack.add('	var count = points.length;');
  FPack.add('	var span = view.spanGaps;');
  FPack.add('	var curve0 = [];');
  FPack.add('	var curve1 = [];');
  FPack.add('	var len0 = 0;');
  FPack.add('	var len1 = 0;');
  FPack.add('	var i, ilen, index, p0, p1, d0, d1;');
  FPack.add('');
  FPack.add('	ctx.beginPath();');
  FPack.add('');
  FPack.add('	for (i = 0, ilen = (count + !!loop); i < ilen; ++i) {');
  FPack.add('		index = i % count;');
  FPack.add('		p0 = points[index]._view;');
  FPack.add('		p1 = mapper(p0, index, view);');
  FPack.add('		d0 = isDrawable(p0);');
  FPack.add('		d1 = isDrawable(p1);');
  FPack.add('');
  FPack.add('		if (d0 && d1) {');
  FPack.add('			len0 = curve0.push(p0);');
  FPack.add('			len1 = curve1.push(p1);');
  FPack.add('		} else if (len0 && len1) {');
  FPack.add('			if (!span) {');
  FPack.add('				drawArea(ctx, curve0, curve1, len0, len1);');
  FPack.add('				len0 = len1 = 0;');
  FPack.add('				curve0 = [];');
  FPack.add('				curve1 = [];');
  FPack.add('			} else {');
  FPack.add('				if (d0) {');
  FPack.add('					curve0.push(p0);');
  FPack.add('				}');
  FPack.add('				if (d1) {');
  FPack.add('					curve1.push(p1);');
  FPack.add('				}');
  FPack.add('			}');
  FPack.add('		}');
  FPack.add('	}');
  FPack.add('');
  FPack.add('	drawArea(ctx, curve0, curve1, len0, len1);');
  FPack.add('');
  FPack.add('	ctx.closePath();');
  FPack.add('	ctx.fillStyle = color;');
  FPack.add('	ctx.fill();');
  FPack.add('}');
  FPack.add('');
  FPack.add('module.exports = {');
  FPack.add('	id: ''filler'',');
  FPack.add('');
  FPack.add('	afterDatasetsUpdate: function(chart, options) {');
  FPack.add('		var count = (chart.data.datasets || []).length;');
  FPack.add('		var propagate = options.propagate;');
  FPack.add('		var sources = [];');
  FPack.add('		var meta, i, el, source;');
  FPack.add('');
  FPack.add('		for (i = 0; i < count; ++i) {');
  FPack.add('			meta = chart.getDatasetMeta(i);');
  FPack.add('			el = meta.dataset;');
  FPack.add('			source = null;');
  FPack.add('');
  FPack.add('			if (el && el._model && el instanceof elements.Line) {');
  FPack.add('				source = {');
  FPack.add('					visible: chart.isDatasetVisible(i),');
  FPack.add('					fill: decodeFill(el, i, count),');
  FPack.add('					chart: chart,');
  FPack.add('					el: el');
  FPack.add('				};');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			meta.$filler = source;');
  FPack.add('			sources.push(source);');
  FPack.add('		}');
  FPack.add('');
  FPack.add('		for (i = 0; i < count; ++i) {');
  FPack.add('			source = sources[i];');
  FPack.add('			if (!source) {');
  FPack.add('				continue;');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			source.fill = resolveTarget(sources, i, propagate);');
  FPack.add('			source.boundary = computeBoundary(source);');
  FPack.add('			source.mapper = createMapper(source);');
  FPack.add('		}');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	beforeDatasetDraw: function(chart, args) {');
  FPack.add('		var meta = args.meta.$filler;');
  FPack.add('		if (!meta) {');
  FPack.add('			return;');
  FPack.add('		}');
  FPack.add('');
  FPack.add('		var ctx = chart.ctx;');
  FPack.add('		var el = meta.el;');
  FPack.add('		var view = el._view;');
  FPack.add('		var points = el._children || [];');
  FPack.add('		var mapper = meta.mapper;');
  FPack.add('		var color = view.backgroundColor || defaults.global.defaultColor;');
  FPack.add('');
  FPack.add('		if (mapper && color && points.length) {');
  FPack.add('			helpers.canvas.clipArea(ctx, chart.chartArea);');
  FPack.add('			doFill(ctx, points, mapper, view, color, el._loop);');
  FPack.add('			helpers.canvas.unclipArea(ctx);');
  FPack.add('		}');
  FPack.add('	}');
  FPack.add('};');
  FPack.add('');
  FPack.add('},{"25":25,"40":40,"45":45}],51:[function(require,module,exports){');
  FPack.add('''use strict'';');
  FPack.add('');
  FPack.add('var defaults = require(25);');
  FPack.add('var Element = require(26);');
  FPack.add('var helpers = require(45);');
  FPack.add('var layouts = require(30);');
  FPack.add('');
  FPack.add('var noop = helpers.noop;');
  FPack.add('');
  FPack.add('defaults._set(''global'', {');
  FPack.add('	legend: {');
  FPack.add('		display: true,');
  FPack.add('		position: ''top'',');
  FPack.add('		fullWidth: true,');
  FPack.add('		reverse: false,');
  FPack.add('		weight: 1000,');
  FPack.add('');
  FPack.add('		// a callback that will handle');
  FPack.add('		onClick: function(e, legendItem) {');
  FPack.add('			var index = legendItem.datasetIndex;');
  FPack.add('			var ci = this.chart;');
  FPack.add('			var meta = ci.getDatasetMeta(index);');
  FPack.add('');
  FPack.add('			// See controller.isDatasetVisible comment');
  FPack.add('			meta.hidden = meta.hidden === null ? !ci.data.datasets[index].hidden : null;');
  FPack.add('');
  FPack.add('			// We hid a dataset ... rerender the chart');
  FPack.add('			ci.update();');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		onHover: null,');
  FPack.add('');
  FPack.add('		labels: {');
  FPack.add('			boxWidth: 40,');
  FPack.add('			padding: 10,');
  FPack.add('			// Generates labels shown in the legend');
  FPack.add('			// Valid properties to return:');
  FPack.add('			// text : text to display');
  FPack.add('			// fillStyle : fill of coloured box');
  FPack.add('			// strokeStyle: stroke of coloured box');
  FPack.add('			// hidden : if this legend item refers to a hidden item');
  FPack.add('			// lineCap : cap style for line');
  FPack.add('			// lineDash');
  FPack.add('			// lineDashOffset :');
  FPack.add('			// lineJoin :');
  FPack.add('			// lineWidth :');
  FPack.add('			generateLabels: function(chart) {');
  FPack.add('				var data = chart.data;');
  FPack.add('				return helpers.isArray(data.datasets) ? data.datasets.map(function(dataset, i) {');
  FPack.add('					return {');
  FPack.add('						text: dataset.label,');
  FPack.add('						fillStyle: (!helpers.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0]),');
  FPack.add('						hidden: !chart.isDatasetVisible(i),');
  FPack.add('						lineCap: dataset.borderCapStyle,');
  FPack.add('						lineDash: dataset.borderDash,');
  FPack.add('						lineDashOffset: dataset.borderDashOffset,');
  FPack.add('						lineJoin: dataset.borderJoinStyle,');
  FPack.add('						lineWidth: dataset.borderWidth,');
  FPack.add('						strokeStyle: dataset.borderColor,');
  FPack.add('						pointStyle: dataset.pointStyle,');
  FPack.add('');
  FPack.add('						// Below is extra data used for toggling the datasets');
  FPack.add('						datasetIndex: i');
  FPack.add('					};');
  FPack.add('				}, this) : [];');
  FPack.add('			}');
  FPack.add('		}');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	legendCallback: function(chart) {');
  FPack.add('		var text = [];');
  FPack.add('		text.push(''<ul class="'' + chart.id + ''-legend">'');');
  FPack.add('		for (var i = 0; i < chart.data.datasets.length; i++) {');
  FPack.add('			text.push(''<li><span style="background-color:'' + chart.data.datasets[i].backgroundColor + ''"></span>'');');
  FPack.add('			if (chart.data.datasets[i].label) {');
  FPack.add('				text.push(chart.data.datasets[i].label);');
  FPack.add('			}');
  FPack.add('			text.push(''</li>'');');
  FPack.add('		}');
  FPack.add('		text.push(''</ul>'');');
  FPack.add('		return text.join('''');');
  FPack.add('	}');
  FPack.add('});');
  FPack.add('');
  FPack.add('/**');
  FPack.add(' * Helper function to get the box width based on the usePointStyle option');
  FPack.add(' * @param labelopts {Object} the label options on the legend');
  FPack.add(' * @param fontSize {Number} the label font size');
  FPack.add(' * @return {Number} width of the color box area');
  FPack.add(' */');
  FPack.add('function getBoxWidth(labelOpts, fontSize) {');
  FPack.add('	return labelOpts.usePointStyle ?');
  FPack.add('		fontSize * Math.SQRT2 :');
  FPack.add('		labelOpts.boxWidth;');
  FPack.add('}');
  FPack.add('');
  FPack.add('/**');
  FPack.add(' * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!');
  FPack.add(' */');
  FPack.add('var Legend = Element.extend({');
  FPack.add('');
  FPack.add('	initialize: function(config) {');
  FPack.add('		helpers.extend(this, config);');
  FPack.add('');
  FPack.add('		// Contains hit boxes for each dataset (in dataset order)');
  FPack.add('		this.legendHitBoxes = [];');
  FPack.add('');
  FPack.add('		// Are we in doughnut mode which has a different data type');
  FPack.add('		this.doughnutMode = false;');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	// These methods are ordered by lifecycle. Utilities then follow.');
  FPack.add('	// Any function defined here is inherited by all legend types.');
  FPack.add('	// Any function can be extended by the legend type');
  FPack.add('');
  FPack.add('	beforeUpdate: noop,');
  FPack.add('	update: function(maxWidth, maxHeight, margins) {');
  FPack.add('		var me = this;');
  FPack.add('');
  FPack.add('		// Update Lifecycle - Probably don''t want to ever extend or overwrite this function ;)');
  FPack.add('		me.beforeUpdate();');
  FPack.add('');
  FPack.add('		// Absorb the master measurements');
  FPack.add('		me.maxWidth = maxWidth;');
  FPack.add('		me.maxHeight = maxHeight;');
  FPack.add('		me.margins = margins;');
  FPack.add('');
  FPack.add('		// Dimensions');
  FPack.add('		me.beforeSetDimensions();');
  FPack.add('		me.setDimensions();');
  FPack.add('		me.afterSetDimensions();');
  FPack.add('		// Labels');
  FPack.add('		me.beforeBuildLabels();');
  FPack.add('		me.buildLabels();');
  FPack.add('		me.afterBuildLabels();');
  FPack.add('');
  FPack.add('		// Fit');
  FPack.add('		me.beforeFit();');
  FPack.add('		me.fit();');
  FPack.add('		me.afterFit();');
  FPack.add('		//');
  FPack.add('		me.afterUpdate();');
  FPack.add('');
  FPack.add('		return me.minSize;');
  FPack.add('	},');
  FPack.add('	afterUpdate: noop,');
  FPack.add('');
  FPack.add('	//');
  FPack.add('');
  FPack.add('	beforeSetDimensions: noop,');
  FPack.add('	setDimensions: function() {');
  FPack.add('		var me = this;');
  FPack.add('		// Set the unconstrained dimension before label rotation');
  FPack.add('		if (me.isHorizontal()) {');
  FPack.add('			// Reset position before calculating rotation');
  FPack.add('			me.width = me.maxWidth;');
  FPack.add('			me.left = 0;');
  FPack.add('			me.right = me.width;');
  FPack.add('		} else {');
  FPack.add('			me.height = me.maxHeight;');
  FPack.add('');
  FPack.add('			// Reset position before calculating rotation');
  FPack.add('			me.top = 0;');
  FPack.add('			me.bottom = me.height;');
  FPack.add('		}');
  FPack.add('');
  FPack.add('		// Reset padding');
  FPack.add('		me.paddingLeft = 0;');
  FPack.add('		me.paddingTop = 0;');
  FPack.add('		me.paddingRight = 0;');
  FPack.add('		me.paddingBottom = 0;');
  FPack.add('');
  FPack.add('		// Reset minSize');
  FPack.add('		me.minSize = {');
  FPack.add('			width: 0,');
  FPack.add('			height: 0');
  FPack.add('		};');
  FPack.add('	},');
  FPack.add('	afterSetDimensions: noop,');
  FPack.add('');
  FPack.add('	//');
  FPack.add('');
  FPack.add('	beforeBuildLabels: noop,');
  FPack.add('	buildLabels: function() {');
  FPack.add('		var me = this;');
  FPack.add('		var labelOpts = me.options.labels || {};');
  FPack.add('		var legendItems = helpers.callback(labelOpts.generateLabels, [me.chart], me) || [];');
  FPack.add('');
  FPack.add('		if (labelOpts.filter) {');
  FPack.add('			legendItems = legendItems.filter(function(item) {');
  FPack.add('				return labelOpts.filter(item, me.chart.data);');
  FPack.add('			});');
  FPack.add('		}');
  FPack.add('');
  FPack.add('		if (me.options.reverse) {');
  FPack.add('			legendItems.reverse();');
  FPack.add('		}');
  FPack.add('');
  FPack.add('		me.legendItems = legendItems;');
  FPack.add('	},');
  FPack.add('	afterBuildLabels: noop,');
  FPack.add('');
  FPack.add('	//');
  FPack.add('');
  FPack.add('	beforeFit: noop,');
  FPack.add('	fit: function() {');
  FPack.add('		var me = this;');
  FPack.add('		var opts = me.options;');
  FPack.add('		var labelOpts = opts.labels;');
  FPack.add('		var display = opts.display;');
  FPack.add('');
  FPack.add('		var ctx = me.ctx;');
  FPack.add('');
  FPack.add('		var globalDefault = defaults.global;');
end;

procedure TChartbundleJS.ChartbundleJS_49;
begin
  FPack.add('		var valueOrDefault = helpers.valueOrDefault;');
  FPack.add('		var fontSize = valueOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize);');
  FPack.add('		var fontStyle = valueOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle);');
  FPack.add('		var fontFamily = valueOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily);');
  FPack.add('		var labelFont = helpers.fontString(fontSize, fontStyle, fontFamily);');
  FPack.add('');
  FPack.add('		// Reset hit boxes');
  FPack.add('		var hitboxes = me.legendHitBoxes = [];');
  FPack.add('');
  FPack.add('		var minSize = me.minSize;');
  FPack.add('		var isHorizontal = me.isHorizontal();');
  FPack.add('');
  FPack.add('		if (isHorizontal) {');
  FPack.add('			minSize.width = me.maxWidth; // fill all the width');
  FPack.add('			minSize.height = display ? 10 : 0;');
  FPack.add('		} else {');
  FPack.add('			minSize.width = display ? 10 : 0;');
  FPack.add('			minSize.height = me.maxHeight; // fill all the height');
  FPack.add('		}');
  FPack.add('');
  FPack.add('		// Increase sizes here');
  FPack.add('		if (display) {');
  FPack.add('			ctx.font = labelFont;');
  FPack.add('');
  FPack.add('			if (isHorizontal) {');
  FPack.add('				// Labels');
  FPack.add('');
  FPack.add('				// Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one');
  FPack.add('				var lineWidths = me.lineWidths = [0];');
  FPack.add('				var totalHeight = me.legendItems.length ? fontSize + (labelOpts.padding) : 0;');
  FPack.add('');
  FPack.add('				ctx.textAlign = ''left'';');
  FPack.add('				ctx.textBaseline = ''top'';');
  FPack.add('');
  FPack.add('				helpers.each(me.legendItems, function(legendItem, i) {');
  FPack.add('					var boxWidth = getBoxWidth(labelOpts, fontSize);');
  FPack.add('					var width = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;');
  FPack.add('');
  FPack.add('					if (lineWidths[lineWidths.length - 1] + width + labelOpts.padding >= me.width) {');
  FPack.add('						totalHeight += fontSize + (labelOpts.padding);');
  FPack.add('						lineWidths[lineWidths.length] = me.left;');
  FPack.add('					}');
  FPack.add('');
  FPack.add('					// Store the hitbox width and height here. Final position will be updated in `draw`');
  FPack.add('					hitboxes[i] = {');
  FPack.add('						left: 0,');
  FPack.add('						top: 0,');
  FPack.add('						width: width,');
  FPack.add('						height: fontSize');
  FPack.add('					};');
  FPack.add('');
  FPack.add('					lineWidths[lineWidths.length - 1] += width + labelOpts.padding;');
  FPack.add('				});');
  FPack.add('');
  FPack.add('				minSize.height += totalHeight;');
  FPack.add('');
  FPack.add('			} else {');
  FPack.add('				var vPadding = labelOpts.padding;');
  FPack.add('				var columnWidths = me.columnWidths = [];');
  FPack.add('				var totalWidth = labelOpts.padding;');
  FPack.add('				var currentColWidth = 0;');
  FPack.add('				var currentColHeight = 0;');
  FPack.add('				var itemHeight = fontSize + vPadding;');
  FPack.add('');
  FPack.add('				helpers.each(me.legendItems, function(legendItem, i) {');
  FPack.add('					var boxWidth = getBoxWidth(labelOpts, fontSize);');
  FPack.add('					var itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;');
  FPack.add('');
  FPack.add('					// If too tall, go to new column');
  FPack.add('					if (currentColHeight + itemHeight > minSize.height) {');
  FPack.add('						totalWidth += currentColWidth + labelOpts.padding;');
  FPack.add('						columnWidths.push(currentColWidth); // previous column width');
  FPack.add('');
  FPack.add('						currentColWidth = 0;');
  FPack.add('						currentColHeight = 0;');
  FPack.add('					}');
  FPack.add('');
  FPack.add('					// Get max width');
  FPack.add('					currentColWidth = Math.max(currentColWidth, itemWidth);');
  FPack.add('					currentColHeight += itemHeight;');
  FPack.add('');
  FPack.add('					// Store the hitbox width and height here. Final position will be updated in `draw`');
  FPack.add('					hitboxes[i] = {');
  FPack.add('						left: 0,');
  FPack.add('						top: 0,');
  FPack.add('						width: itemWidth,');
  FPack.add('						height: fontSize');
  FPack.add('					};');
  FPack.add('				});');
  FPack.add('');
  FPack.add('				totalWidth += currentColWidth;');
  FPack.add('				columnWidths.push(currentColWidth);');
  FPack.add('				minSize.width += totalWidth;');
  FPack.add('			}');
  FPack.add('		}');
  FPack.add('');
  FPack.add('		me.width = minSize.width;');
  FPack.add('		me.height = minSize.height;');
  FPack.add('	},');
  FPack.add('	afterFit: noop,');
  FPack.add('');
  FPack.add('	// Shared Methods');
  FPack.add('	isHorizontal: function() {');
  FPack.add('		return this.options.position === ''top'' || this.options.position === ''bottom'';');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	// Actually draw the legend on the canvas');
  FPack.add('	draw: function() {');
  FPack.add('		var me = this;');
  FPack.add('		var opts = me.options;');
  FPack.add('		var labelOpts = opts.labels;');
  FPack.add('		var globalDefault = defaults.global;');
  FPack.add('		var lineDefault = globalDefault.elements.line;');
  FPack.add('		var legendWidth = me.width;');
  FPack.add('		var lineWidths = me.lineWidths;');
  FPack.add('');
  FPack.add('		if (opts.display) {');
  FPack.add('			var ctx = me.ctx;');
  FPack.add('			var valueOrDefault = helpers.valueOrDefault;');
  FPack.add('			var fontColor = valueOrDefault(labelOpts.fontColor, globalDefault.defaultFontColor);');
  FPack.add('			var fontSize = valueOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize);');
  FPack.add('			var fontStyle = valueOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle);');
  FPack.add('			var fontFamily = valueOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily);');
  FPack.add('			var labelFont = helpers.fontString(fontSize, fontStyle, fontFamily);');
  FPack.add('			var cursor;');
  FPack.add('');
  FPack.add('			// Canvas setup');
  FPack.add('			ctx.textAlign = ''left'';');
  FPack.add('			ctx.textBaseline = ''middle'';');
  FPack.add('			ctx.lineWidth = 0.5;');
  FPack.add('			ctx.strokeStyle = fontColor; // for strikethrough effect');
  FPack.add('			ctx.fillStyle = fontColor; // render in correct colour');
  FPack.add('			ctx.font = labelFont;');
  FPack.add('');
  FPack.add('			var boxWidth = getBoxWidth(labelOpts, fontSize);');
  FPack.add('			var hitboxes = me.legendHitBoxes;');
  FPack.add('');
  FPack.add('			// current position');
  FPack.add('			var drawLegendBox = function(x, y, legendItem) {');
  FPack.add('				if (isNaN(boxWidth) || boxWidth <= 0) {');
  FPack.add('					return;');
  FPack.add('				}');
  FPack.add('');
  FPack.add('				// Set the ctx for the box');
  FPack.add('				ctx.save();');
  FPack.add('');
  FPack.add('				ctx.fillStyle = valueOrDefault(legendItem.fillStyle, globalDefault.defaultColor);');
  FPack.add('				ctx.lineCap = valueOrDefault(legendItem.lineCap, lineDefault.borderCapStyle);');
  FPack.add('				ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, lineDefault.borderDashOffset);');
  FPack.add('				ctx.lineJoin = valueOrDefault(legendItem.lineJoin, lineDefault.borderJoinStyle);');
  FPack.add('				ctx.lineWidth = valueOrDefault(legendItem.lineWidth, lineDefault.borderWidth);');
  FPack.add('				ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, globalDefault.defaultColor);');
  FPack.add('				var isLineWidthZero = (valueOrDefault(legendItem.lineWidth, lineDefault.borderWidth) === 0);');
  FPack.add('');
  FPack.add('				if (ctx.setLineDash) {');
  FPack.add('					// IE 9 and 10 do not support line dash');
  FPack.add('					ctx.setLineDash(valueOrDefault(legendItem.lineDash, lineDefault.borderDash));');
  FPack.add('				}');
  FPack.add('');
  FPack.add('				if (opts.labels && opts.labels.usePointStyle) {');
  FPack.add('					// Recalculate x and y for drawPoint() because its expecting');
  FPack.add('					// x and y to be center of figure (instead of top left)');
  FPack.add('					var radius = fontSize * Math.SQRT2 / 2;');
  FPack.add('					var offSet = radius / Math.SQRT2;');
  FPack.add('					var centerX = x + offSet;');
  FPack.add('					var centerY = y + offSet;');
  FPack.add('');
  FPack.add('					// Draw pointStyle as legend symbol');
  FPack.add('					helpers.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);');
  FPack.add('				} else {');
  FPack.add('					// Draw box as legend symbol');
  FPack.add('					if (!isLineWidthZero) {');
  FPack.add('						ctx.strokeRect(x, y, boxWidth, fontSize);');
  FPack.add('					}');
  FPack.add('					ctx.fillRect(x, y, boxWidth, fontSize);');
  FPack.add('				}');
  FPack.add('');
  FPack.add('				ctx.restore();');
  FPack.add('			};');
  FPack.add('			var fillText = function(x, y, legendItem, textWidth) {');
  FPack.add('				var halfFontSize = fontSize / 2;');
  FPack.add('				var xLeft = boxWidth + halfFontSize + x;');
  FPack.add('				var yMiddle = y + halfFontSize;');
  FPack.add('');
  FPack.add('				ctx.fillText(legendItem.text, xLeft, yMiddle);');
  FPack.add('');
  FPack.add('				if (legendItem.hidden) {');
  FPack.add('					// Strikethrough the text if hidden');
  FPack.add('					ctx.beginPath();');
  FPack.add('					ctx.lineWidth = 2;');
  FPack.add('					ctx.moveTo(xLeft, yMiddle);');
  FPack.add('					ctx.lineTo(xLeft + textWidth, yMiddle);');
  FPack.add('					ctx.stroke();');
  FPack.add('				}');
  FPack.add('			};');
  FPack.add('');
  FPack.add('			// Horizontal');
  FPack.add('			var isHorizontal = me.isHorizontal();');
  FPack.add('			if (isHorizontal) {');
  FPack.add('				cursor = {');
  FPack.add('					x: me.left + ((legendWidth - lineWidths[0]) / 2),');
  FPack.add('					y: me.top + labelOpts.padding,');
  FPack.add('					line: 0');
  FPack.add('				};');
  FPack.add('			} else {');
  FPack.add('				cursor = {');
  FPack.add('					x: me.left + labelOpts.padding,');
  FPack.add('					y: me.top + labelOpts.padding,');
  FPack.add('					line: 0');
  FPack.add('				};');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			var itemHeight = fontSize + labelOpts.padding;');
  FPack.add('			helpers.each(me.legendItems, function(legendItem, i) {');
  FPack.add('				var textWidth = ctx.measureText(legendItem.text).width;');
  FPack.add('				var width = boxWidth + (fontSize / 2) + textWidth;');
  FPack.add('				var x = cursor.x;');
  FPack.add('				var y = cursor.y;');
  FPack.add('');
  FPack.add('				if (isHorizontal) {');
  FPack.add('					if (x + width >= legendWidth) {');
  FPack.add('						y = cursor.y += itemHeight;');
  FPack.add('						cursor.line++;');
  FPack.add('						x = cursor.x = me.left + ((legendWidth - lineWidths[cursor.line]) / 2);');
  FPack.add('					}');
  FPack.add('				} else if (y + itemHeight > me.bottom) {');
  FPack.add('					x = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;');
  FPack.add('					y = cursor.y = me.top + labelOpts.padding;');
  FPack.add('					cursor.line++;');
  FPack.add('				}');
  FPack.add('');
  FPack.add('				drawLegendBox(x, y, legendItem);');
  FPack.add('');
  FPack.add('				hitboxes[i].left = x;');
  FPack.add('				hitboxes[i].top = y;');
  FPack.add('');
  FPack.add('				// Fill the actual label');
  FPack.add('				fillText(x, y, legendItem, textWidth);');
  FPack.add('');
  FPack.add('				if (isHorizontal) {');
  FPack.add('					cursor.x += width + (labelOpts.padding);');
  FPack.add('				} else {');
  FPack.add('					cursor.y += itemHeight;');
  FPack.add('				}');
  FPack.add('');
  FPack.add('			});');
  FPack.add('		}');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	/**');
  FPack.add('	 * Handle an event');
  FPack.add('	 * @private');
  FPack.add('	 * @param {IEvent} event - The event to handle');
  FPack.add('	 * @return {Boolean} true if a change occured');
  FPack.add('	 */');
  FPack.add('	handleEvent: function(e) {');
  FPack.add('		var me = this;');
  FPack.add('		var opts = me.options;');
  FPack.add('		var type = e.type === ''mouseup'' ? ''click'' : e.type;');
  FPack.add('		var changed = false;');
  FPack.add('');
  FPack.add('		if (type === ''mousemove'') {');
  FPack.add('			if (!opts.onHover) {');
  FPack.add('				return;');
  FPack.add('			}');
  FPack.add('		} else if (type === ''click'') {');
  FPack.add('			if (!opts.onClick) {');
  FPack.add('				return;');
  FPack.add('			}');
  FPack.add('		} else {');
  FPack.add('			return;');
  FPack.add('		}');
  FPack.add('');
  FPack.add('		// Chart event already has relative position in it');
  FPack.add('		var x = e.x;');
  FPack.add('		var y = e.y;');
  FPack.add('');
  FPack.add('		if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {');
  FPack.add('			// See if we are touching one of the dataset boxes');
  FPack.add('			var lh = me.legendHitBoxes;');
  FPack.add('			for (var i = 0; i < lh.length; ++i) {');
  FPack.add('				var hitBox = lh[i];');
  FPack.add('');
  FPack.add('				if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {');
  FPack.add('					// Touching an element');
  FPack.add('					if (type === ''click'') {');
  FPack.add('						// use e.native for backwards compatibility');
  FPack.add('						opts.onClick.call(me, e.native, me.legendItems[i]);');
  FPack.add('						changed = true;');
  FPack.add('						break;');
  FPack.add('					} else if (type === ''mousemove'') {');
  FPack.add('						// use e.native for backwards compatibility');
  FPack.add('						opts.onHover.call(me, e.native, me.legendItems[i]);');
  FPack.add('						changed = true;');
  FPack.add('						break;');
  FPack.add('					}');
  FPack.add('				}');
  FPack.add('			}');
  FPack.add('		}');
  FPack.add('');
  FPack.add('		return changed;');
  FPack.add('	}');
  FPack.add('});');
  FPack.add('');
  FPack.add('function createNewLegendAndAttach(chart, legendOpts) {');
  FPack.add('	var legend = new Legend({');
  FPack.add('		ctx: chart.ctx,');
  FPack.add('		options: legendOpts,');
  FPack.add('		chart: chart');
  FPack.add('	});');
  FPack.add('');
  FPack.add('	layouts.configure(chart, legend, legendOpts);');
  FPack.add('	layouts.addBox(chart, legend);');
  FPack.add('	chart.legend = legend;');
  FPack.add('}');
  FPack.add('');
  FPack.add('module.exports = {');
  FPack.add('	id: ''legend'',');
  FPack.add('');
  FPack.add('	/**');
  FPack.add('	 * Backward compatibility: since 2.1.5, the legend is registered as a plugin, making');
  FPack.add('	 * Chart.Legend obsolete. To avoid a breaking change, we export the Legend as part of');
  FPack.add('	 * the plugin, which one will be re-exposed in the chart.js file.');
  FPack.add('	 * https://github.com/chartjs/Chart.js/pull/2640');
  FPack.add('	 * @private');
  FPack.add('	 */');
  FPack.add('	_element: Legend,');
  FPack.add('');
  FPack.add('	beforeInit: function(chart) {');
  FPack.add('		var legendOpts = chart.options.legend;');
  FPack.add('');
  FPack.add('		if (legendOpts) {');
  FPack.add('			createNewLegendAndAttach(chart, legendOpts);');
  FPack.add('		}');
  FPack.add('	},');
  FPack.add('');
end;

procedure TChartbundleJS.ChartbundleJS_50;
begin
  FPack.add('	beforeUpdate: function(chart) {');
  FPack.add('		var legendOpts = chart.options.legend;');
  FPack.add('		var legend = chart.legend;');
  FPack.add('');
  FPack.add('		if (legendOpts) {');
  FPack.add('			helpers.mergeIf(legendOpts, defaults.global.legend);');
  FPack.add('');
  FPack.add('			if (legend) {');
  FPack.add('				layouts.configure(chart, legend, legendOpts);');
  FPack.add('				legend.options = legendOpts;');
  FPack.add('			} else {');
  FPack.add('				createNewLegendAndAttach(chart, legendOpts);');
  FPack.add('			}');
  FPack.add('		} else if (legend) {');
  FPack.add('			layouts.removeBox(chart, legend);');
  FPack.add('			delete chart.legend;');
  FPack.add('		}');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	afterEvent: function(chart, e) {');
  FPack.add('		var legend = chart.legend;');
  FPack.add('		if (legend) {');
  FPack.add('			legend.handleEvent(e);');
  FPack.add('		}');
  FPack.add('	}');
  FPack.add('};');
  FPack.add('');
  FPack.add('},{"25":25,"26":26,"30":30,"45":45}],52:[function(require,module,exports){');
  FPack.add('''use strict'';');
  FPack.add('');
  FPack.add('var defaults = require(25);');
  FPack.add('var Element = require(26);');
  FPack.add('var helpers = require(45);');
  FPack.add('var layouts = require(30);');
  FPack.add('');
  FPack.add('var noop = helpers.noop;');
  FPack.add('');
  FPack.add('defaults._set(''global'', {');
  FPack.add('	title: {');
  FPack.add('		display: false,');
  FPack.add('		fontStyle: ''bold'',');
  FPack.add('		fullWidth: true,');
  FPack.add('		lineHeight: 1.2,');
  FPack.add('		padding: 10,');
  FPack.add('		position: ''top'',');
  FPack.add('		text: '''',');
  FPack.add('		weight: 2000         // by default greater than legend (1000) to be above');
  FPack.add('	}');
  FPack.add('});');
  FPack.add('');
  FPack.add('/**');
  FPack.add(' * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!');
  FPack.add(' */');
  FPack.add('var Title = Element.extend({');
  FPack.add('	initialize: function(config) {');
  FPack.add('		var me = this;');
  FPack.add('		helpers.extend(me, config);');
  FPack.add('');
  FPack.add('		// Contains hit boxes for each dataset (in dataset order)');
  FPack.add('		me.legendHitBoxes = [];');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	// These methods are ordered by lifecycle. Utilities then follow.');
  FPack.add('');
  FPack.add('	beforeUpdate: noop,');
  FPack.add('	update: function(maxWidth, maxHeight, margins) {');
  FPack.add('		var me = this;');
  FPack.add('');
  FPack.add('		// Update Lifecycle - Probably don''t want to ever extend or overwrite this function ;)');
  FPack.add('		me.beforeUpdate();');
  FPack.add('');
  FPack.add('		// Absorb the master measurements');
  FPack.add('		me.maxWidth = maxWidth;');
  FPack.add('		me.maxHeight = maxHeight;');
  FPack.add('		me.margins = margins;');
  FPack.add('');
  FPack.add('		// Dimensions');
  FPack.add('		me.beforeSetDimensions();');
  FPack.add('		me.setDimensions();');
  FPack.add('		me.afterSetDimensions();');
  FPack.add('		// Labels');
  FPack.add('		me.beforeBuildLabels();');
  FPack.add('		me.buildLabels();');
  FPack.add('		me.afterBuildLabels();');
  FPack.add('');
  FPack.add('		// Fit');
  FPack.add('		me.beforeFit();');
  FPack.add('		me.fit();');
  FPack.add('		me.afterFit();');
  FPack.add('		//');
  FPack.add('		me.afterUpdate();');
  FPack.add('');
  FPack.add('		return me.minSize;');
  FPack.add('');
  FPack.add('	},');
  FPack.add('	afterUpdate: noop,');
  FPack.add('');
  FPack.add('	//');
  FPack.add('');
  FPack.add('	beforeSetDimensions: noop,');
  FPack.add('	setDimensions: function() {');
  FPack.add('		var me = this;');
  FPack.add('		// Set the unconstrained dimension before label rotation');
  FPack.add('		if (me.isHorizontal()) {');
  FPack.add('			// Reset position before calculating rotation');
  FPack.add('			me.width = me.maxWidth;');
  FPack.add('			me.left = 0;');
  FPack.add('			me.right = me.width;');
  FPack.add('		} else {');
  FPack.add('			me.height = me.maxHeight;');
  FPack.add('');
  FPack.add('			// Reset position before calculating rotation');
  FPack.add('			me.top = 0;');
  FPack.add('			me.bottom = me.height;');
  FPack.add('		}');
  FPack.add('');
  FPack.add('		// Reset padding');
  FPack.add('		me.paddingLeft = 0;');
  FPack.add('		me.paddingTop = 0;');
  FPack.add('		me.paddingRight = 0;');
  FPack.add('		me.paddingBottom = 0;');
  FPack.add('');
  FPack.add('		// Reset minSize');
  FPack.add('		me.minSize = {');
  FPack.add('			width: 0,');
  FPack.add('			height: 0');
  FPack.add('		};');
  FPack.add('	},');
  FPack.add('	afterSetDimensions: noop,');
  FPack.add('');
  FPack.add('	//');
  FPack.add('');
  FPack.add('	beforeBuildLabels: noop,');
  FPack.add('	buildLabels: noop,');
  FPack.add('	afterBuildLabels: noop,');
  FPack.add('');
  FPack.add('	//');
  FPack.add('');
  FPack.add('	beforeFit: noop,');
  FPack.add('	fit: function() {');
  FPack.add('		var me = this;');
  FPack.add('		var valueOrDefault = helpers.valueOrDefault;');
  FPack.add('		var opts = me.options;');
  FPack.add('		var display = opts.display;');
  FPack.add('		var fontSize = valueOrDefault(opts.fontSize, defaults.global.defaultFontSize);');
  FPack.add('		var minSize = me.minSize;');
  FPack.add('		var lineCount = helpers.isArray(opts.text) ? opts.text.length : 1;');
  FPack.add('		var lineHeight = helpers.options.toLineHeight(opts.lineHeight, fontSize);');
  FPack.add('		var textSize = display ? (lineCount * lineHeight) + (opts.padding * 2) : 0;');
  FPack.add('');
  FPack.add('		if (me.isHorizontal()) {');
  FPack.add('			minSize.width = me.maxWidth; // fill all the width');
  FPack.add('			minSize.height = textSize;');
  FPack.add('		} else {');
  FPack.add('			minSize.width = textSize;');
  FPack.add('			minSize.height = me.maxHeight; // fill all the height');
  FPack.add('		}');
  FPack.add('');
  FPack.add('		me.width = minSize.width;');
  FPack.add('		me.height = minSize.height;');
  FPack.add('');
  FPack.add('	},');
  FPack.add('	afterFit: noop,');
  FPack.add('');
  FPack.add('	// Shared Methods');
  FPack.add('	isHorizontal: function() {');
  FPack.add('		var pos = this.options.position;');
  FPack.add('		return pos === ''top'' || pos === ''bottom'';');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	// Actually draw the title block on the canvas');
  FPack.add('	draw: function() {');
  FPack.add('		var me = this;');
  FPack.add('		var ctx = me.ctx;');
  FPack.add('		var valueOrDefault = helpers.valueOrDefault;');
  FPack.add('		var opts = me.options;');
  FPack.add('		var globalDefaults = defaults.global;');
  FPack.add('');
  FPack.add('		if (opts.display) {');
  FPack.add('			var fontSize = valueOrDefault(opts.fontSize, globalDefaults.defaultFontSize);');
  FPack.add('			var fontStyle = valueOrDefault(opts.fontStyle, globalDefaults.defaultFontStyle);');
  FPack.add('			var fontFamily = valueOrDefault(opts.fontFamily, globalDefaults.defaultFontFamily);');
  FPack.add('			var titleFont = helpers.fontString(fontSize, fontStyle, fontFamily);');
  FPack.add('			var lineHeight = helpers.options.toLineHeight(opts.lineHeight, fontSize);');
  FPack.add('			var offset = lineHeight / 2 + opts.padding;');
  FPack.add('			var rotation = 0;');
  FPack.add('			var top = me.top;');
  FPack.add('			var left = me.left;');
  FPack.add('			var bottom = me.bottom;');
  FPack.add('			var right = me.right;');
  FPack.add('			var maxWidth, titleX, titleY;');
  FPack.add('');
  FPack.add('			ctx.fillStyle = valueOrDefault(opts.fontColor, globalDefaults.defaultFontColor); // render in correct colour');
  FPack.add('			ctx.font = titleFont;');
  FPack.add('');
  FPack.add('			// Horizontal');
  FPack.add('			if (me.isHorizontal()) {');
  FPack.add('				titleX = left + ((right - left) / 2); // midpoint of the width');
  FPack.add('				titleY = top + offset;');
  FPack.add('				maxWidth = right - left;');
  FPack.add('			} else {');
  FPack.add('				titleX = opts.position === ''left'' ? left + offset : right - offset;');
  FPack.add('				titleY = top + ((bottom - top) / 2);');
  FPack.add('				maxWidth = bottom - top;');
  FPack.add('				rotation = Math.PI * (opts.position === ''left'' ? -0.5 : 0.5);');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			ctx.save();');
  FPack.add('			ctx.translate(titleX, titleY);');
  FPack.add('			ctx.rotate(rotation);');
  FPack.add('			ctx.textAlign = ''center'';');
  FPack.add('			ctx.textBaseline = ''middle'';');
  FPack.add('');
  FPack.add('			var text = opts.text;');
  FPack.add('			if (helpers.isArray(text)) {');
  FPack.add('				var y = 0;');
  FPack.add('				for (var i = 0; i < text.length; ++i) {');
  FPack.add('					ctx.fillText(text[i], 0, y, maxWidth);');
  FPack.add('					y += lineHeight;');
  FPack.add('				}');
  FPack.add('			} else {');
  FPack.add('				ctx.fillText(text, 0, 0, maxWidth);');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			ctx.restore();');
  FPack.add('		}');
  FPack.add('	}');
  FPack.add('});');
  FPack.add('');
  FPack.add('function createNewTitleBlockAndAttach(chart, titleOpts) {');
  FPack.add('	var title = new Title({');
  FPack.add('		ctx: chart.ctx,');
  FPack.add('		options: titleOpts,');
  FPack.add('		chart: chart');
  FPack.add('	});');
  FPack.add('');
  FPack.add('	layouts.configure(chart, title, titleOpts);');
  FPack.add('	layouts.addBox(chart, title);');
  FPack.add('	chart.titleBlock = title;');
  FPack.add('}');
  FPack.add('');
  FPack.add('module.exports = {');
  FPack.add('	id: ''title'',');
  FPack.add('');
  FPack.add('	/**');
  FPack.add('	 * Backward compatibility: since 2.1.5, the title is registered as a plugin, making');
  FPack.add('	 * Chart.Title obsolete. To avoid a breaking change, we export the Title as part of');
  FPack.add('	 * the plugin, which one will be re-exposed in the chart.js file.');
  FPack.add('	 * https://github.com/chartjs/Chart.js/pull/2640');
  FPack.add('	 * @private');
  FPack.add('	 */');
  FPack.add('	_element: Title,');
  FPack.add('');
  FPack.add('	beforeInit: function(chart) {');
  FPack.add('		var titleOpts = chart.options.title;');
  FPack.add('');
  FPack.add('		if (titleOpts) {');
  FPack.add('			createNewTitleBlockAndAttach(chart, titleOpts);');
  FPack.add('		}');
  FPack.add('	},');
  FPack.add('');
  FPack.add('	beforeUpdate: function(chart) {');
  FPack.add('		var titleOpts = chart.options.title;');
  FPack.add('		var titleBlock = chart.titleBlock;');
  FPack.add('');
  FPack.add('		if (titleOpts) {');
  FPack.add('			helpers.mergeIf(titleOpts, defaults.global.title);');
  FPack.add('');
  FPack.add('			if (titleBlock) {');
  FPack.add('				layouts.configure(chart, titleBlock, titleOpts);');
  FPack.add('				titleBlock.options = titleOpts;');
  FPack.add('			} else {');
  FPack.add('				createNewTitleBlockAndAttach(chart, titleOpts);');
  FPack.add('			}');
  FPack.add('		} else if (titleBlock) {');
  FPack.add('			layouts.removeBox(chart, titleBlock);');
  FPack.add('			delete chart.titleBlock;');
  FPack.add('		}');
  FPack.add('	}');
  FPack.add('};');
  FPack.add('');
  FPack.add('},{"25":25,"26":26,"30":30,"45":45}],53:[function(require,module,exports){');
  FPack.add('''use strict'';');
  FPack.add('');
  FPack.add('module.exports = function(Chart) {');
  FPack.add('');
  FPack.add('	// Default config for a category scale');
  FPack.add('	var defaultConfig = {');
  FPack.add('		position: ''bottom''');
  FPack.add('	};');
  FPack.add('');
  FPack.add('	var DatasetScale = Chart.Scale.extend({');
  FPack.add('		/**');
  FPack.add('		* Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use those');
  FPack.add('		* else fall back to data.labels');
  FPack.add('		* @private');
  FPack.add('		*/');
  FPack.add('		getLabels: function() {');
  FPack.add('			var data = this.chart.data;');
  FPack.add('			return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		determineDataLimits: function() {');
  FPack.add('			var me = this;');
  FPack.add('			var labels = me.getLabels();');
  FPack.add('			me.minIndex = 0;');
  FPack.add('			me.maxIndex = labels.length - 1;');
  FPack.add('			var findIndex;');
  FPack.add('');
  FPack.add('			if (me.options.ticks.min !== undefined) {');
  FPack.add('				// user specified min value');
  FPack.add('				findIndex = labels.indexOf(me.options.ticks.min);');
  FPack.add('				me.minIndex = findIndex !== -1 ? findIndex : me.minIndex;');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			if (me.options.ticks.max !== undefined) {');
  FPack.add('				// user specified max value');
  FPack.add('				findIndex = labels.indexOf(me.options.ticks.max);');
  FPack.add('				me.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			me.min = labels[me.minIndex];');
  FPack.add('			me.max = labels[me.maxIndex];');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		buildTicks: function() {');
  FPack.add('			var me = this;');
  FPack.add('			var labels = me.getLabels();');
  FPack.add('			// If we are viewing some subset of labels, slice the original array');
  FPack.add('			me.ticks = (me.minIndex === 0 && me.maxIndex === labels.length - 1) ? labels : labels.slice(me.minIndex, me.maxIndex + 1);');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		getLabelForIndex: function(index, datasetIndex) {');
  FPack.add('			var me = this;');
  FPack.add('			var data = me.chart.data;');
  FPack.add('			var isHorizontal = me.isHorizontal();');
end;

procedure TChartbundleJS.ChartbundleJS_51;
begin
  FPack.add('');
  FPack.add('			if (data.yLabels && !isHorizontal) {');
  FPack.add('				return me.getRightValue(data.datasets[datasetIndex].data[index]);');
  FPack.add('			}');
  FPack.add('			return me.ticks[index - me.minIndex];');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		// Used to get data value locations.  Value can either be an index or a numerical value');
  FPack.add('		getPixelForValue: function(value, index) {');
  FPack.add('			var me = this;');
  FPack.add('			var offset = me.options.offset;');
  FPack.add('			// 1 is added because we need the length but we have the indexes');
  FPack.add('			var offsetAmt = Math.max((me.maxIndex + 1 - me.minIndex - (offset ? 0 : 1)), 1);');
  FPack.add('');
  FPack.add('			// If value is a data object, then index is the index in the data array,');
  FPack.add('			// not the index of the scale. We need to change that.');
  FPack.add('			var valueCategory;');
  FPack.add('			if (value !== undefined && value !== null) {');
  FPack.add('				valueCategory = me.isHorizontal() ? value.x : value.y;');
  FPack.add('			}');
  FPack.add('			if (valueCategory !== undefined || (value !== undefined && isNaN(index))) {');
  FPack.add('				var labels = me.getLabels();');
  FPack.add('				value = valueCategory || value;');
  FPack.add('				var idx = labels.indexOf(value);');
  FPack.add('				index = idx !== -1 ? idx : index;');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			if (me.isHorizontal()) {');
  FPack.add('				var valueWidth = me.width / offsetAmt;');
  FPack.add('				var widthOffset = (valueWidth * (index - me.minIndex));');
  FPack.add('');
  FPack.add('				if (offset) {');
  FPack.add('					widthOffset += (valueWidth / 2);');
  FPack.add('				}');
  FPack.add('');
  FPack.add('				return me.left + Math.round(widthOffset);');
  FPack.add('			}');
  FPack.add('			var valueHeight = me.height / offsetAmt;');
  FPack.add('			var heightOffset = (valueHeight * (index - me.minIndex));');
  FPack.add('');
  FPack.add('			if (offset) {');
  FPack.add('				heightOffset += (valueHeight / 2);');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			return me.top + Math.round(heightOffset);');
  FPack.add('		},');
  FPack.add('		getPixelForTick: function(index) {');
  FPack.add('			return this.getPixelForValue(this.ticks[index], index + this.minIndex, null);');
  FPack.add('		},');
  FPack.add('		getValueForPixel: function(pixel) {');
  FPack.add('			var me = this;');
  FPack.add('			var offset = me.options.offset;');
  FPack.add('			var value;');
  FPack.add('			var offsetAmt = Math.max((me._ticks.length - (offset ? 0 : 1)), 1);');
  FPack.add('			var horz = me.isHorizontal();');
  FPack.add('			var valueDimension = (horz ? me.width : me.height) / offsetAmt;');
  FPack.add('');
  FPack.add('			pixel -= horz ? me.left : me.top;');
  FPack.add('');
  FPack.add('			if (offset) {');
  FPack.add('				pixel -= (valueDimension / 2);');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			if (pixel <= 0) {');
  FPack.add('				value = 0;');
  FPack.add('			} else {');
  FPack.add('				value = Math.round(pixel / valueDimension);');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			return value + me.minIndex;');
  FPack.add('		},');
  FPack.add('		getBasePixel: function() {');
  FPack.add('			return this.bottom;');
  FPack.add('		}');
  FPack.add('	});');
  FPack.add('');
  FPack.add('	Chart.scaleService.registerScaleType(''category'', DatasetScale, defaultConfig);');
  FPack.add('');
  FPack.add('};');
  FPack.add('');
  FPack.add('},{}],54:[function(require,module,exports){');
  FPack.add('''use strict'';');
  FPack.add('');
  FPack.add('var defaults = require(25);');
  FPack.add('var helpers = require(45);');
  FPack.add('var Ticks = require(34);');
  FPack.add('');
  FPack.add('module.exports = function(Chart) {');
  FPack.add('');
  FPack.add('	var defaultConfig = {');
  FPack.add('		position: ''left'',');
  FPack.add('		ticks: {');
  FPack.add('			callback: Ticks.formatters.linear');
  FPack.add('		}');
  FPack.add('	};');
  FPack.add('');
  FPack.add('	var LinearScale = Chart.LinearScaleBase.extend({');
  FPack.add('');
  FPack.add('		determineDataLimits: function() {');
  FPack.add('			var me = this;');
  FPack.add('			var opts = me.options;');
  FPack.add('			var chart = me.chart;');
  FPack.add('			var data = chart.data;');
  FPack.add('			var datasets = data.datasets;');
  FPack.add('			var isHorizontal = me.isHorizontal();');
  FPack.add('			var DEFAULT_MIN = 0;');
  FPack.add('			var DEFAULT_MAX = 1;');
  FPack.add('');
  FPack.add('			function IDMatches(meta) {');
  FPack.add('				return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			// First Calculate the range');
  FPack.add('			me.min = null;');
  FPack.add('			me.max = null;');
  FPack.add('');
  FPack.add('			var hasStacks = opts.stacked;');
  FPack.add('			if (hasStacks === undefined) {');
  FPack.add('				helpers.each(datasets, function(dataset, datasetIndex) {');
  FPack.add('					if (hasStacks) {');
  FPack.add('						return;');
  FPack.add('					}');
  FPack.add('');
  FPack.add('					var meta = chart.getDatasetMeta(datasetIndex);');
  FPack.add('					if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) &&');
  FPack.add('						meta.stack !== undefined) {');
  FPack.add('						hasStacks = true;');
  FPack.add('					}');
  FPack.add('				});');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			if (opts.stacked || hasStacks) {');
  FPack.add('				var valuesPerStack = {};');
  FPack.add('');
  FPack.add('				helpers.each(datasets, function(dataset, datasetIndex) {');
  FPack.add('					var meta = chart.getDatasetMeta(datasetIndex);');
  FPack.add('					var key = [');
  FPack.add('						meta.type,');
  FPack.add('						// we have a separate stack for stack=undefined datasets when the opts.stacked is undefined');
  FPack.add('						((opts.stacked === undefined && meta.stack === undefined) ? datasetIndex : ''''),');
  FPack.add('						meta.stack');
  FPack.add('					].join(''.'');');
  FPack.add('');
  FPack.add('					if (valuesPerStack[key] === undefined) {');
  FPack.add('						valuesPerStack[key] = {');
  FPack.add('							positiveValues: [],');
  FPack.add('							negativeValues: []');
  FPack.add('						};');
  FPack.add('					}');
  FPack.add('');
  FPack.add('					// Store these per type');
  FPack.add('					var positiveValues = valuesPerStack[key].positiveValues;');
  FPack.add('					var negativeValues = valuesPerStack[key].negativeValues;');
  FPack.add('');
  FPack.add('					if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {');
  FPack.add('						helpers.each(dataset.data, function(rawValue, index) {');
  FPack.add('							var value = +me.getRightValue(rawValue);');
  FPack.add('							if (isNaN(value) || meta.data[index].hidden) {');
  FPack.add('								return;');
  FPack.add('							}');
  FPack.add('');
  FPack.add('							positiveValues[index] = positiveValues[index] || 0;');
  FPack.add('							negativeValues[index] = negativeValues[index] || 0;');
  FPack.add('');
  FPack.add('							if (opts.relativePoints) {');
  FPack.add('								positiveValues[index] = 100;');
  FPack.add('							} else if (value < 0) {');
  FPack.add('								negativeValues[index] += value;');
  FPack.add('							} else {');
  FPack.add('								positiveValues[index] += value;');
  FPack.add('							}');
  FPack.add('						});');
  FPack.add('					}');
  FPack.add('				});');
  FPack.add('');
  FPack.add('				helpers.each(valuesPerStack, function(valuesForType) {');
  FPack.add('					var values = valuesForType.positiveValues.concat(valuesForType.negativeValues);');
  FPack.add('					var minVal = helpers.min(values);');
  FPack.add('					var maxVal = helpers.max(values);');
  FPack.add('					me.min = me.min === null ? minVal : Math.min(me.min, minVal);');
  FPack.add('					me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);');
  FPack.add('				});');
  FPack.add('');
  FPack.add('			} else {');
  FPack.add('				helpers.each(datasets, function(dataset, datasetIndex) {');
  FPack.add('					var meta = chart.getDatasetMeta(datasetIndex);');
  FPack.add('					if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {');
  FPack.add('						helpers.each(dataset.data, function(rawValue, index) {');
  FPack.add('							var value = +me.getRightValue(rawValue);');
  FPack.add('							if (isNaN(value) || meta.data[index].hidden) {');
  FPack.add('								return;');
  FPack.add('							}');
  FPack.add('');
  FPack.add('							if (me.min === null) {');
  FPack.add('								me.min = value;');
  FPack.add('							} else if (value < me.min) {');
  FPack.add('								me.min = value;');
  FPack.add('							}');
  FPack.add('');
  FPack.add('							if (me.max === null) {');
  FPack.add('								me.max = value;');
  FPack.add('							} else if (value > me.max) {');
  FPack.add('								me.max = value;');
  FPack.add('							}');
  FPack.add('						});');
  FPack.add('					}');
  FPack.add('				});');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			me.min = isFinite(me.min) && !isNaN(me.min) ? me.min : DEFAULT_MIN;');
  FPack.add('			me.max = isFinite(me.max) && !isNaN(me.max) ? me.max : DEFAULT_MAX;');
  FPack.add('');
  FPack.add('			// Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero');
  FPack.add('			this.handleTickRangeOptions();');
  FPack.add('		},');
  FPack.add('		getTickLimit: function() {');
  FPack.add('			var maxTicks;');
  FPack.add('			var me = this;');
  FPack.add('			var tickOpts = me.options.ticks;');
  FPack.add('');
  FPack.add('			if (me.isHorizontal()) {');
  FPack.add('				maxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.width / 50));');
  FPack.add('			} else {');
  FPack.add('				// The factor of 2 used to scale the font size has been experimentally determined.');
  FPack.add('				var tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, defaults.global.defaultFontSize);');
  FPack.add('				maxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.height / (2 * tickFontSize)));');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			return maxTicks;');
  FPack.add('		},');
  FPack.add('		// Called after the ticks are built. We need');
  FPack.add('		handleDirectionalChanges: function() {');
  FPack.add('			if (!this.isHorizontal()) {');
  FPack.add('				// We are in a vertical orientation. The top value is the highest. So reverse the array');
  FPack.add('				this.ticks.reverse();');
  FPack.add('			}');
  FPack.add('		},');
  FPack.add('		getLabelForIndex: function(index, datasetIndex) {');
  FPack.add('			return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);');
  FPack.add('		},');
  FPack.add('		// Utils');
  FPack.add('		getPixelForValue: function(value) {');
  FPack.add('			// This must be called after fit has been run so that');
  FPack.add('			// this.left, this.top, this.right, and this.bottom have been defined');
  FPack.add('			var me = this;');
  FPack.add('			var start = me.start;');
  FPack.add('');
  FPack.add('			var rightValue = +me.getRightValue(value);');
  FPack.add('			var pixel;');
  FPack.add('			var range = me.end - start;');
  FPack.add('');
  FPack.add('			if (me.isHorizontal()) {');
  FPack.add('				pixel = me.left + (me.width / range * (rightValue - start));');
  FPack.add('			} else {');
  FPack.add('				pixel = me.bottom - (me.height / range * (rightValue - start));');
  FPack.add('			}');
  FPack.add('			return pixel;');
  FPack.add('		},');
  FPack.add('		getValueForPixel: function(pixel) {');
  FPack.add('			var me = this;');
  FPack.add('			var isHorizontal = me.isHorizontal();');
  FPack.add('			var innerDimension = isHorizontal ? me.width : me.height;');
  FPack.add('			var offset = (isHorizontal ? pixel - me.left : me.bottom - pixel) / innerDimension;');
  FPack.add('			return me.start + ((me.end - me.start) * offset);');
  FPack.add('		},');
  FPack.add('		getPixelForTick: function(index) {');
  FPack.add('			return this.getPixelForValue(this.ticksAsNumbers[index]);');
  FPack.add('		}');
  FPack.add('	});');
  FPack.add('	Chart.scaleService.registerScaleType(''linear'', LinearScale, defaultConfig);');
  FPack.add('');
  FPack.add('};');
  FPack.add('');
  FPack.add('},{"25":25,"34":34,"45":45}],55:[function(require,module,exports){');
  FPack.add('''use strict'';');
  FPack.add('');
  FPack.add('var helpers = require(45);');
  FPack.add('');
  FPack.add('/**');
  FPack.add(' * Generate a set of linear ticks');
  FPack.add(' * @param generationOptions the options used to generate the ticks');
  FPack.add(' * @param dataRange the range of the data');
  FPack.add(' * @returns {Array<Number>} array of tick values');
  FPack.add(' */');
  FPack.add('function generateTicks(generationOptions, dataRange) {');
  FPack.add('	var ticks = [];');
  FPack.add('	// To get a "nice" value for the tick spacing, we will use the appropriately named');
  FPack.add('	// "nice number" algorithm. See http://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks');
  FPack.add('	// for details.');
  FPack.add('');
  FPack.add('	var spacing;');
  FPack.add('	if (generationOptions.stepSize && generationOptions.stepSize > 0) {');
  FPack.add('		spacing = generationOptions.stepSize;');
  FPack.add('	} else {');
  FPack.add('		var niceRange = helpers.niceNum(dataRange.max - dataRange.min, false);');
  FPack.add('		spacing = helpers.niceNum(niceRange / (generationOptions.maxTicks - 1), true);');
  FPack.add('	}');
  FPack.add('	var niceMin = Math.floor(dataRange.min / spacing) * spacing;');
  FPack.add('	var niceMax = Math.ceil(dataRange.max / spacing) * spacing;');
  FPack.add('');
  FPack.add('	// If min, max and stepSize is set and they make an evenly spaced scale use it.');
  FPack.add('	if (generationOptions.min && generationOptions.max && generationOptions.stepSize) {');
  FPack.add('		// If very close to our whole number, use it.');
  FPack.add('		if (helpers.almostWhole((generationOptions.max - generationOptions.min) / generationOptions.stepSize, spacing / 1000)) {');
  FPack.add('			niceMin = generationOptions.min;');
  FPack.add('			niceMax = generationOptions.max;');
  FPack.add('		}');
  FPack.add('	}');
  FPack.add('');
  FPack.add('	var numSpaces = (niceMax - niceMin) / spacing;');
  FPack.add('	// If very close to our rounded value, use it.');
  FPack.add('	if (helpers.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {');
  FPack.add('		numSpaces = Math.round(numSpaces);');
  FPack.add('	} else {');
  FPack.add('		numSpaces = Math.ceil(numSpaces);');
  FPack.add('	}');
  FPack.add('');
  FPack.add('	var precision = 1;');
  FPack.add('	if (spacing < 1) {');
  FPack.add('		precision = Math.pow(10, spacing.toString().length - 2);');
  FPack.add('		niceMin = Math.round(niceMin * precision) / precision;');
  FPack.add('		niceMax = Math.round(niceMax * precision) / precision;');
  FPack.add('	}');
  FPack.add('	ticks.push(generationOptions.min !== undefined ? generationOptions.min : niceMin);');
  FPack.add('	for (var j = 1; j < numSpaces; ++j) {');
  FPack.add('		ticks.push(Math.round((niceMin + j * spacing) * precision) / precision);');
  FPack.add('	}');
  FPack.add('	ticks.push(generationOptions.max !== undefined ? generationOptions.max : niceMax);');
  FPack.add('');
  FPack.add('	return ticks;');
  FPack.add('}');
  FPack.add('');
  FPack.add('');
  FPack.add('module.exports = function(Chart) {');
  FPack.add('');
  FPack.add('	var noop = helpers.noop;');
end;

procedure TChartbundleJS.ChartbundleJS_52;
begin
  FPack.add('');
  FPack.add('	Chart.LinearScaleBase = Chart.Scale.extend({');
  FPack.add('		getRightValue: function(value) {');
  FPack.add('			if (typeof value === ''string'') {');
  FPack.add('				return +value;');
  FPack.add('			}');
  FPack.add('			return Chart.Scale.prototype.getRightValue.call(this, value);');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		handleTickRangeOptions: function() {');
  FPack.add('			var me = this;');
  FPack.add('			var opts = me.options;');
  FPack.add('			var tickOpts = opts.ticks;');
  FPack.add('');
  FPack.add('			// If we are forcing it to begin at 0, but 0 will already be rendered on the chart,');
  FPack.add('			// do nothing since that would make the chart weird. If the user really wants a weird chart');
  FPack.add('			// axis, they can manually override it');
  FPack.add('			if (tickOpts.beginAtZero) {');
  FPack.add('				var minSign = helpers.sign(me.min);');
  FPack.add('				var maxSign = helpers.sign(me.max);');
  FPack.add('');
  FPack.add('				if (minSign < 0 && maxSign < 0) {');
  FPack.add('					// move the top up to 0');
  FPack.add('					me.max = 0;');
  FPack.add('				} else if (minSign > 0 && maxSign > 0) {');
  FPack.add('					// move the bottom down to 0');
  FPack.add('					me.min = 0;');
  FPack.add('				}');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			var setMin = tickOpts.min !== undefined || tickOpts.suggestedMin !== undefined;');
  FPack.add('			var setMax = tickOpts.max !== undefined || tickOpts.suggestedMax !== undefined;');
  FPack.add('');
  FPack.add('			if (tickOpts.min !== undefined) {');
  FPack.add('				me.min = tickOpts.min;');
  FPack.add('			} else if (tickOpts.suggestedMin !== undefined) {');
  FPack.add('				if (me.min === null) {');
  FPack.add('					me.min = tickOpts.suggestedMin;');
  FPack.add('				} else {');
  FPack.add('					me.min = Math.min(me.min, tickOpts.suggestedMin);');
  FPack.add('				}');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			if (tickOpts.max !== undefined) {');
  FPack.add('				me.max = tickOpts.max;');
  FPack.add('			} else if (tickOpts.suggestedMax !== undefined) {');
  FPack.add('				if (me.max === null) {');
  FPack.add('					me.max = tickOpts.suggestedMax;');
  FPack.add('				} else {');
  FPack.add('					me.max = Math.max(me.max, tickOpts.suggestedMax);');
  FPack.add('				}');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			if (setMin !== setMax) {');
  FPack.add('				// We set the min or the max but not both.');
  FPack.add('				// So ensure that our range is good');
  FPack.add('				// Inverted or 0 length range can happen when');
  FPack.add('				// ticks.min is set, and no datasets are visible');
  FPack.add('				if (me.min >= me.max) {');
  FPack.add('					if (setMin) {');
  FPack.add('						me.max = me.min + 1;');
  FPack.add('					} else {');
  FPack.add('						me.min = me.max - 1;');
  FPack.add('					}');
  FPack.add('				}');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			if (me.min === me.max) {');
  FPack.add('				me.max++;');
  FPack.add('');
  FPack.add('				if (!tickOpts.beginAtZero) {');
  FPack.add('					me.min--;');
  FPack.add('				}');
  FPack.add('			}');
  FPack.add('		},');
  FPack.add('		getTickLimit: noop,');
  FPack.add('		handleDirectionalChanges: noop,');
  FPack.add('');
  FPack.add('		buildTicks: function() {');
  FPack.add('			var me = this;');
  FPack.add('			var opts = me.options;');
  FPack.add('			var tickOpts = opts.ticks;');
  FPack.add('');
  FPack.add('			// Figure out what the max number of ticks we can support it is based on the size of');
  FPack.add('			// the axis area. For now, we say that the minimum tick spacing in pixels must be 50');
  FPack.add('			// We also limit the maximum number of ticks to 11 which gives a nice 10 squares on');
  FPack.add('			// the graph. Make sure we always have at least 2 ticks');
  FPack.add('			var maxTicks = me.getTickLimit();');
  FPack.add('			maxTicks = Math.max(2, maxTicks);');
  FPack.add('');
  FPack.add('			var numericGeneratorOptions = {');
  FPack.add('				maxTicks: maxTicks,');
  FPack.add('				min: tickOpts.min,');
  FPack.add('				max: tickOpts.max,');
  FPack.add('				stepSize: helpers.valueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)');
  FPack.add('			};');
  FPack.add('			var ticks = me.ticks = generateTicks(numericGeneratorOptions, me);');
  FPack.add('');
  FPack.add('			me.handleDirectionalChanges();');
  FPack.add('');
  FPack.add('			// At this point, we need to update our max and min given the tick values since we have expanded the');
  FPack.add('			// range of the scale');
  FPack.add('			me.max = helpers.max(ticks);');
  FPack.add('			me.min = helpers.min(ticks);');
  FPack.add('');
  FPack.add('			if (tickOpts.reverse) {');
  FPack.add('				ticks.reverse();');
  FPack.add('');
  FPack.add('				me.start = me.max;');
  FPack.add('				me.end = me.min;');
  FPack.add('			} else {');
  FPack.add('				me.start = me.min;');
  FPack.add('				me.end = me.max;');
  FPack.add('			}');
  FPack.add('		},');
  FPack.add('		convertTicksToLabels: function() {');
  FPack.add('			var me = this;');
  FPack.add('			me.ticksAsNumbers = me.ticks.slice();');
  FPack.add('			me.zeroLineIndex = me.ticks.indexOf(0);');
  FPack.add('');
  FPack.add('			Chart.Scale.prototype.convertTicksToLabels.call(me);');
  FPack.add('		}');
  FPack.add('	});');
  FPack.add('};');
  FPack.add('');
  FPack.add('},{"45":45}],56:[function(require,module,exports){');
  FPack.add('''use strict'';');
  FPack.add('');
  FPack.add('var helpers = require(45);');
  FPack.add('var Ticks = require(34);');
  FPack.add('');
  FPack.add('/**');
  FPack.add(' * Generate a set of logarithmic ticks');
  FPack.add(' * @param generationOptions the options used to generate the ticks');
  FPack.add(' * @param dataRange the range of the data');
  FPack.add(' * @returns {Array<Number>} array of tick values');
  FPack.add(' */');
  FPack.add('function generateTicks(generationOptions, dataRange) {');
  FPack.add('	var ticks = [];');
  FPack.add('	var valueOrDefault = helpers.valueOrDefault;');
  FPack.add('');
  FPack.add('	// Figure out what the max number of ticks we can support it is based on the size of');
  FPack.add('	// the axis area. For now, we say that the minimum tick spacing in pixels must be 50');
  FPack.add('	// We also limit the maximum number of ticks to 11 which gives a nice 10 squares on');
  FPack.add('	// the graph');
  FPack.add('	var tickVal = valueOrDefault(generationOptions.min, Math.pow(10, Math.floor(helpers.log10(dataRange.min))));');
  FPack.add('');
  FPack.add('	var endExp = Math.floor(helpers.log10(dataRange.max));');
  FPack.add('	var endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));');
  FPack.add('	var exp, significand;');
  FPack.add('');
  FPack.add('	if (tickVal === 0) {');
  FPack.add('		exp = Math.floor(helpers.log10(dataRange.minNotZero));');
  FPack.add('		significand = Math.floor(dataRange.minNotZero / Math.pow(10, exp));');
  FPack.add('');
  FPack.add('		ticks.push(tickVal);');
  FPack.add('		tickVal = significand * Math.pow(10, exp);');
  FPack.add('	} else {');
  FPack.add('		exp = Math.floor(helpers.log10(tickVal));');
  FPack.add('		significand = Math.floor(tickVal / Math.pow(10, exp));');
  FPack.add('	}');
  FPack.add('	var precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;');
  FPack.add('');
  FPack.add('	do {');
  FPack.add('		ticks.push(tickVal);');
  FPack.add('');
  FPack.add('		++significand;');
  FPack.add('		if (significand === 10) {');
  FPack.add('			significand = 1;');
  FPack.add('			++exp;');
  FPack.add('			precision = exp >= 0 ? 1 : precision;');
  FPack.add('		}');
  FPack.add('');
  FPack.add('		tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;');
  FPack.add('	} while (exp < endExp || (exp === endExp && significand < endSignificand));');
  FPack.add('');
  FPack.add('	var lastTick = valueOrDefault(generationOptions.max, tickVal);');
  FPack.add('	ticks.push(lastTick);');
  FPack.add('');
  FPack.add('	return ticks;');
  FPack.add('}');
  FPack.add('');
  FPack.add('');
  FPack.add('module.exports = function(Chart) {');
  FPack.add('');
  FPack.add('	var defaultConfig = {');
  FPack.add('		position: ''left'',');
  FPack.add('');
  FPack.add('		// label settings');
  FPack.add('		ticks: {');
  FPack.add('			callback: Ticks.formatters.logarithmic');
  FPack.add('		}');
  FPack.add('	};');
  FPack.add('');
  FPack.add('	var LogarithmicScale = Chart.Scale.extend({');
  FPack.add('		determineDataLimits: function() {');
  FPack.add('			var me = this;');
  FPack.add('			var opts = me.options;');
  FPack.add('			var chart = me.chart;');
  FPack.add('			var data = chart.data;');
  FPack.add('			var datasets = data.datasets;');
  FPack.add('			var isHorizontal = me.isHorizontal();');
  FPack.add('			function IDMatches(meta) {');
  FPack.add('				return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			// Calculate Range');
  FPack.add('			me.min = null;');
  FPack.add('			me.max = null;');
  FPack.add('			me.minNotZero = null;');
  FPack.add('');
  FPack.add('			var hasStacks = opts.stacked;');
  FPack.add('			if (hasStacks === undefined) {');
  FPack.add('				helpers.each(datasets, function(dataset, datasetIndex) {');
  FPack.add('					if (hasStacks) {');
  FPack.add('						return;');
  FPack.add('					}');
  FPack.add('');
  FPack.add('					var meta = chart.getDatasetMeta(datasetIndex);');
  FPack.add('					if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) &&');
  FPack.add('						meta.stack !== undefined) {');
  FPack.add('						hasStacks = true;');
  FPack.add('					}');
  FPack.add('				});');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			if (opts.stacked || hasStacks) {');
  FPack.add('				var valuesPerStack = {};');
  FPack.add('');
  FPack.add('				helpers.each(datasets, function(dataset, datasetIndex) {');
  FPack.add('					var meta = chart.getDatasetMeta(datasetIndex);');
  FPack.add('					var key = [');
  FPack.add('						meta.type,');
  FPack.add('						// we have a separate stack for stack=undefined datasets when the opts.stacked is undefined');
  FPack.add('						((opts.stacked === undefined && meta.stack === undefined) ? datasetIndex : ''''),');
  FPack.add('						meta.stack');
  FPack.add('					].join(''.'');');
  FPack.add('');
  FPack.add('					if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {');
  FPack.add('						if (valuesPerStack[key] === undefined) {');
  FPack.add('							valuesPerStack[key] = [];');
  FPack.add('						}');
  FPack.add('');
  FPack.add('						helpers.each(dataset.data, function(rawValue, index) {');
  FPack.add('							var values = valuesPerStack[key];');
  FPack.add('							var value = +me.getRightValue(rawValue);');
  FPack.add('							// invalid, hidden and negative values are ignored');
  FPack.add('							if (isNaN(value) || meta.data[index].hidden || value < 0) {');
  FPack.add('								return;');
  FPack.add('							}');
  FPack.add('							values[index] = values[index] || 0;');
  FPack.add('							values[index] += value;');
  FPack.add('						});');
  FPack.add('					}');
  FPack.add('				});');
  FPack.add('');
  FPack.add('				helpers.each(valuesPerStack, function(valuesForType) {');
  FPack.add('					if (valuesForType.length > 0) {');
  FPack.add('						var minVal = helpers.min(valuesForType);');
  FPack.add('						var maxVal = helpers.max(valuesForType);');
  FPack.add('						me.min = me.min === null ? minVal : Math.min(me.min, minVal);');
  FPack.add('						me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);');
  FPack.add('					}');
  FPack.add('				});');
  FPack.add('');
  FPack.add('			} else {');
  FPack.add('				helpers.each(datasets, function(dataset, datasetIndex) {');
  FPack.add('					var meta = chart.getDatasetMeta(datasetIndex);');
  FPack.add('					if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {');
  FPack.add('						helpers.each(dataset.data, function(rawValue, index) {');
  FPack.add('							var value = +me.getRightValue(rawValue);');
  FPack.add('							// invalid, hidden and negative values are ignored');
  FPack.add('							if (isNaN(value) || meta.data[index].hidden || value < 0) {');
  FPack.add('								return;');
  FPack.add('							}');
  FPack.add('');
  FPack.add('							if (me.min === null) {');
  FPack.add('								me.min = value;');
  FPack.add('							} else if (value < me.min) {');
  FPack.add('								me.min = value;');
  FPack.add('							}');
  FPack.add('');
  FPack.add('							if (me.max === null) {');
  FPack.add('								me.max = value;');
  FPack.add('							} else if (value > me.max) {');
  FPack.add('								me.max = value;');
  FPack.add('							}');
  FPack.add('');
  FPack.add('							if (value !== 0 && (me.minNotZero === null || value < me.minNotZero)) {');
  FPack.add('								me.minNotZero = value;');
  FPack.add('							}');
  FPack.add('						});');
  FPack.add('					}');
  FPack.add('				});');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			// Common base implementation to handle ticks.min, ticks.max');
  FPack.add('			this.handleTickRangeOptions();');
  FPack.add('		},');
  FPack.add('		handleTickRangeOptions: function() {');
  FPack.add('			var me = this;');
  FPack.add('			var opts = me.options;');
  FPack.add('			var tickOpts = opts.ticks;');
  FPack.add('			var valueOrDefault = helpers.valueOrDefault;');
  FPack.add('			var DEFAULT_MIN = 1;');
  FPack.add('			var DEFAULT_MAX = 10;');
  FPack.add('');
  FPack.add('			me.min = valueOrDefault(tickOpts.min, me.min);');
  FPack.add('			me.max = valueOrDefault(tickOpts.max, me.max);');
  FPack.add('');
  FPack.add('			if (me.min === me.max) {');
  FPack.add('				if (me.min !== 0 && me.min !== null) {');
  FPack.add('					me.min = Math.pow(10, Math.floor(helpers.log10(me.min)) - 1);');
  FPack.add('					me.max = Math.pow(10, Math.floor(helpers.log10(me.max)) + 1);');
  FPack.add('				} else {');
  FPack.add('					me.min = DEFAULT_MIN;');
  FPack.add('					me.max = DEFAULT_MAX;');
  FPack.add('				}');
  FPack.add('			}');
  FPack.add('			if (me.min === null) {');
  FPack.add('				me.min = Math.pow(10, Math.floor(helpers.log10(me.max)) - 1);');
  FPack.add('			}');
  FPack.add('			if (me.max === null) {');
  FPack.add('				me.max = me.min !== 0');
  FPack.add('					? Math.pow(10, Math.floor(helpers.log10(me.min)) + 1)');
  FPack.add('					: DEFAULT_MAX;');
  FPack.add('			}');
  FPack.add('			if (me.minNotZero === null) {');
  FPack.add('				if (me.min > 0) {');
  FPack.add('					me.minNotZero = me.min;');
  FPack.add('				} else if (me.max < 1) {');
  FPack.add('					me.minNotZero = Math.pow(10, Math.floor(helpers.log10(me.max)));');
  FPack.add('				} else {');
  FPack.add('					me.minNotZero = DEFAULT_MIN;');
  FPack.add('				}');
  FPack.add('			}');
end;

procedure TChartbundleJS.ChartbundleJS_53;
begin
  FPack.add('		},');
  FPack.add('		buildTicks: function() {');
  FPack.add('			var me = this;');
  FPack.add('			var opts = me.options;');
  FPack.add('			var tickOpts = opts.ticks;');
  FPack.add('			var reverse = !me.isHorizontal();');
  FPack.add('');
  FPack.add('			var generationOptions = {');
  FPack.add('				min: tickOpts.min,');
  FPack.add('				max: tickOpts.max');
  FPack.add('			};');
  FPack.add('			var ticks = me.ticks = generateTicks(generationOptions, me);');
  FPack.add('');
  FPack.add('			// At this point, we need to update our max and min given the tick values since we have expanded the');
  FPack.add('			// range of the scale');
  FPack.add('			me.max = helpers.max(ticks);');
  FPack.add('			me.min = helpers.min(ticks);');
  FPack.add('');
  FPack.add('			if (tickOpts.reverse) {');
  FPack.add('				reverse = !reverse;');
  FPack.add('				me.start = me.max;');
  FPack.add('				me.end = me.min;');
  FPack.add('			} else {');
  FPack.add('				me.start = me.min;');
  FPack.add('				me.end = me.max;');
  FPack.add('			}');
  FPack.add('			if (reverse) {');
  FPack.add('				ticks.reverse();');
  FPack.add('			}');
  FPack.add('		},');
  FPack.add('		convertTicksToLabels: function() {');
  FPack.add('			this.tickValues = this.ticks.slice();');
  FPack.add('');
  FPack.add('			Chart.Scale.prototype.convertTicksToLabels.call(this);');
  FPack.add('		},');
  FPack.add('		// Get the correct tooltip label');
  FPack.add('		getLabelForIndex: function(index, datasetIndex) {');
  FPack.add('			return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);');
  FPack.add('		},');
  FPack.add('		getPixelForTick: function(index) {');
  FPack.add('			return this.getPixelForValue(this.tickValues[index]);');
  FPack.add('		},');
  FPack.add('		/**');
  FPack.add('		 * Returns the value of the first tick.');
  FPack.add('		 * @param {Number} value - The minimum not zero value.');
  FPack.add('		 * @return {Number} The first tick value.');
  FPack.add('		 * @private');
  FPack.add('		 */');
  FPack.add('		_getFirstTickValue: function(value) {');
  FPack.add('			var exp = Math.floor(helpers.log10(value));');
  FPack.add('			var significand = Math.floor(value / Math.pow(10, exp));');
  FPack.add('');
  FPack.add('			return significand * Math.pow(10, exp);');
  FPack.add('		},');
  FPack.add('		getPixelForValue: function(value) {');
  FPack.add('			var me = this;');
  FPack.add('			var reverse = me.options.ticks.reverse;');
  FPack.add('			var log10 = helpers.log10;');
  FPack.add('			var firstTickValue = me._getFirstTickValue(me.minNotZero);');
  FPack.add('			var offset = 0;');
  FPack.add('			var innerDimension, pixel, start, end, sign;');
  FPack.add('');
  FPack.add('			value = +me.getRightValue(value);');
  FPack.add('			if (reverse) {');
  FPack.add('				start = me.end;');
  FPack.add('				end = me.start;');
  FPack.add('				sign = -1;');
  FPack.add('			} else {');
  FPack.add('				start = me.start;');
  FPack.add('				end = me.end;');
  FPack.add('				sign = 1;');
  FPack.add('			}');
  FPack.add('			if (me.isHorizontal()) {');
  FPack.add('				innerDimension = me.width;');
  FPack.add('				pixel = reverse ? me.right : me.left;');
  FPack.add('			} else {');
  FPack.add('				innerDimension = me.height;');
  FPack.add('				sign *= -1; // invert, since the upper-left corner of the canvas is at pixel (0, 0)');
  FPack.add('				pixel = reverse ? me.top : me.bottom;');
  FPack.add('			}');
  FPack.add('			if (value !== start) {');
  FPack.add('				if (start === 0) { // include zero tick');
  FPack.add('					offset = helpers.getValueOrDefault(');
  FPack.add('						me.options.ticks.fontSize,');
  FPack.add('						Chart.defaults.global.defaultFontSize');
  FPack.add('					);');
  FPack.add('					innerDimension -= offset;');
  FPack.add('					start = firstTickValue;');
  FPack.add('				}');
  FPack.add('				if (value !== 0) {');
  FPack.add('					offset += innerDimension / (log10(end) - log10(start)) * (log10(value) - log10(start));');
  FPack.add('				}');
  FPack.add('				pixel += sign * offset;');
  FPack.add('			}');
  FPack.add('			return pixel;');
  FPack.add('		},');
  FPack.add('		getValueForPixel: function(pixel) {');
  FPack.add('			var me = this;');
  FPack.add('			var reverse = me.options.ticks.reverse;');
  FPack.add('			var log10 = helpers.log10;');
  FPack.add('			var firstTickValue = me._getFirstTickValue(me.minNotZero);');
  FPack.add('			var innerDimension, start, end, value;');
  FPack.add('');
  FPack.add('			if (reverse) {');
  FPack.add('				start = me.end;');
  FPack.add('				end = me.start;');
  FPack.add('			} else {');
  FPack.add('				start = me.start;');
  FPack.add('				end = me.end;');
  FPack.add('			}');
  FPack.add('			if (me.isHorizontal()) {');
  FPack.add('				innerDimension = me.width;');
  FPack.add('				value = reverse ? me.right - pixel : pixel - me.left;');
  FPack.add('			} else {');
  FPack.add('				innerDimension = me.height;');
  FPack.add('				value = reverse ? pixel - me.top : me.bottom - pixel;');
  FPack.add('			}');
  FPack.add('			if (value !== start) {');
  FPack.add('				if (start === 0) { // include zero tick');
  FPack.add('					var offset = helpers.getValueOrDefault(');
  FPack.add('						me.options.ticks.fontSize,');
  FPack.add('						Chart.defaults.global.defaultFontSize');
  FPack.add('					);');
  FPack.add('					value -= offset;');
  FPack.add('					innerDimension -= offset;');
  FPack.add('					start = firstTickValue;');
  FPack.add('				}');
  FPack.add('				value *= log10(end) - log10(start);');
  FPack.add('				value /= innerDimension;');
  FPack.add('				value = Math.pow(10, log10(start) + value);');
  FPack.add('			}');
  FPack.add('			return value;');
  FPack.add('		}');
  FPack.add('	});');
  FPack.add('	Chart.scaleService.registerScaleType(''logarithmic'', LogarithmicScale, defaultConfig);');
  FPack.add('');
  FPack.add('};');
  FPack.add('');
  FPack.add('},{"34":34,"45":45}],57:[function(require,module,exports){');
  FPack.add('''use strict'';');
  FPack.add('');
  FPack.add('var defaults = require(25);');
  FPack.add('var helpers = require(45);');
  FPack.add('var Ticks = require(34);');
  FPack.add('');
  FPack.add('module.exports = function(Chart) {');
  FPack.add('');
  FPack.add('	var globalDefaults = defaults.global;');
  FPack.add('');
  FPack.add('	var defaultConfig = {');
  FPack.add('		display: true,');
  FPack.add('');
  FPack.add('		// Boolean - Whether to animate scaling the chart from the centre');
  FPack.add('		animate: true,');
  FPack.add('		position: ''chartArea'',');
  FPack.add('');
  FPack.add('		angleLines: {');
  FPack.add('			display: true,');
  FPack.add('			color: ''rgba(0, 0, 0, 0.1)'',');
  FPack.add('			lineWidth: 1');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		gridLines: {');
  FPack.add('			circular: false');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		// label settings');
  FPack.add('		ticks: {');
  FPack.add('			// Boolean - Show a backdrop to the scale label');
  FPack.add('			showLabelBackdrop: true,');
  FPack.add('');
  FPack.add('			// String - The colour of the label backdrop');
  FPack.add('			backdropColor: ''rgba(255,255,255,0.75)'',');
  FPack.add('');
  FPack.add('			// Number - The backdrop padding above & below the label in pixels');
  FPack.add('			backdropPaddingY: 2,');
  FPack.add('');
  FPack.add('			// Number - The backdrop padding to the side of the label in pixels');
  FPack.add('			backdropPaddingX: 2,');
  FPack.add('');
  FPack.add('			callback: Ticks.formatters.linear');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		pointLabels: {');
  FPack.add('			// Boolean - if true, show point labels');
  FPack.add('			display: true,');
  FPack.add('');
  FPack.add('			// Number - Point label font size in pixels');
  FPack.add('			fontSize: 10,');
  FPack.add('');
  FPack.add('			// Function - Used to convert point labels');
  FPack.add('			callback: function(label) {');
  FPack.add('				return label;');
  FPack.add('			}');
  FPack.add('		}');
  FPack.add('	};');
  FPack.add('');
  FPack.add('	function getValueCount(scale) {');
  FPack.add('		var opts = scale.options;');
  FPack.add('		return opts.angleLines.display || opts.pointLabels.display ? scale.chart.data.labels.length : 0;');
  FPack.add('	}');
  FPack.add('');
  FPack.add('	function getPointLabelFontOptions(scale) {');
  FPack.add('		var pointLabelOptions = scale.options.pointLabels;');
  FPack.add('		var fontSize = helpers.valueOrDefault(pointLabelOptions.fontSize, globalDefaults.defaultFontSize);');
  FPack.add('		var fontStyle = helpers.valueOrDefault(pointLabelOptions.fontStyle, globalDefaults.defaultFontStyle);');
  FPack.add('		var fontFamily = helpers.valueOrDefault(pointLabelOptions.fontFamily, globalDefaults.defaultFontFamily);');
  FPack.add('		var font = helpers.fontString(fontSize, fontStyle, fontFamily);');
  FPack.add('');
  FPack.add('		return {');
  FPack.add('			size: fontSize,');
  FPack.add('			style: fontStyle,');
  FPack.add('			family: fontFamily,');
  FPack.add('			font: font');
  FPack.add('		};');
  FPack.add('	}');
  FPack.add('');
  FPack.add('	function measureLabelSize(ctx, fontSize, label) {');
  FPack.add('		if (helpers.isArray(label)) {');
  FPack.add('			return {');
  FPack.add('				w: helpers.longestText(ctx, ctx.font, label),');
  FPack.add('				h: (label.length * fontSize) + ((label.length - 1) * 1.5 * fontSize)');
  FPack.add('			};');
  FPack.add('		}');
  FPack.add('');
  FPack.add('		return {');
  FPack.add('			w: ctx.measureText(label).width,');
  FPack.add('			h: fontSize');
  FPack.add('		};');
  FPack.add('	}');
  FPack.add('');
  FPack.add('	function determineLimits(angle, pos, size, min, max) {');
  FPack.add('		if (angle === min || angle === max) {');
  FPack.add('			return {');
  FPack.add('				start: pos - (size / 2),');
  FPack.add('				end: pos + (size / 2)');
  FPack.add('			};');
  FPack.add('		} else if (angle < min || angle > max) {');
  FPack.add('			return {');
  FPack.add('				start: pos - size - 5,');
  FPack.add('				end: pos');
  FPack.add('			};');
  FPack.add('		}');
  FPack.add('');
  FPack.add('		return {');
  FPack.add('			start: pos,');
  FPack.add('			end: pos + size + 5');
  FPack.add('		};');
  FPack.add('	}');
  FPack.add('');
  FPack.add('	/**');
  FPack.add('	 * Helper function to fit a radial linear scale with point labels');
  FPack.add('	 */');
  FPack.add('	function fitWithPointLabels(scale) {');
  FPack.add('		/*');
  FPack.add('		 * Right, this is really confusing and there is a lot of maths going on here');
  FPack.add('		 * The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9');
  FPack.add('		 *');
  FPack.add('		 * Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif');
  FPack.add('		 *');
  FPack.add('		 * Solution:');
  FPack.add('		 *');
  FPack.add('		 * We assume the radius of the polygon is half the size of the canvas at first');
  FPack.add('		 * at each index we check if the text overlaps.');
  FPack.add('		 *');
  FPack.add('		 * Where it does, we store that angle and that index.');
  FPack.add('		 *');
  FPack.add('		 * After finding the largest index and angle we calculate how much we need to remove');
  FPack.add('		 * from the shape radius to move the point inwards by that x.');
  FPack.add('		 *');
  FPack.add('		 * We average the left and right distances to get the maximum shape radius that can fit in the box');
  FPack.add('		 * along with labels.');
  FPack.add('		 *');
  FPack.add('		 * Once we have that, we can find the centre point for the chart, by taking the x text protrusion');
  FPack.add('		 * on each side, removing that from the size, halving it and adding the left x protrusion width.');
  FPack.add('		 *');
  FPack.add('		 * This will mean we have a shape fitted to the canvas, as large as it can be with the labels');
  FPack.add('		 * and position it in the most space efficient manner');
  FPack.add('		 *');
  FPack.add('		 * https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif');
  FPack.add('		 */');
  FPack.add('');
  FPack.add('		var plFont = getPointLabelFontOptions(scale);');
  FPack.add('');
  FPack.add('		// Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.');
  FPack.add('		// Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points');
  FPack.add('		var largestPossibleRadius = Math.min(scale.height / 2, scale.width / 2);');
  FPack.add('		var furthestLimits = {');
  FPack.add('			r: scale.width,');
  FPack.add('			l: 0,');
  FPack.add('			t: scale.height,');
  FPack.add('			b: 0');
  FPack.add('		};');
  FPack.add('		var furthestAngles = {};');
  FPack.add('		var i, textSize, pointPosition;');
  FPack.add('');
  FPack.add('		scale.ctx.font = plFont.font;');
  FPack.add('		scale._pointLabelSizes = [];');
  FPack.add('');
  FPack.add('		var valueCount = getValueCount(scale);');
  FPack.add('		for (i = 0; i < valueCount; i++) {');
  FPack.add('			pointPosition = scale.getPointPosition(i, largestPossibleRadius);');
  FPack.add('			textSize = measureLabelSize(scale.ctx, plFont.size, scale.pointLabels[i] || '''');');
  FPack.add('			scale._pointLabelSizes[i] = textSize;');
  FPack.add('');
  FPack.add('			// Add quarter circle to make degree 0 mean top of circle');
  FPack.add('			var angleRadians = scale.getIndexAngle(i);');
  FPack.add('			var angle = helpers.toDegrees(angleRadians) % 360;');
  FPack.add('			var hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);');
  FPack.add('			var vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);');
  FPack.add('');
  FPack.add('			if (hLimits.start < furthestLimits.l) {');
  FPack.add('				furthestLimits.l = hLimits.start;');
  FPack.add('				furthestAngles.l = angleRadians;');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			if (hLimits.end > furthestLimits.r) {');
  FPack.add('				furthestLimits.r = hLimits.end;');
  FPack.add('				furthestAngles.r = angleRadians;');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			if (vLimits.start < furthestLimits.t) {');
  FPack.add('				furthestLimits.t = vLimits.start;');
  FPack.add('				furthestAngles.t = angleRadians;');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			if (vLimits.end > furthestLimits.b) {');
  FPack.add('				furthestLimits.b = vLimits.end;');
  FPack.add('				furthestAngles.b = angleRadians;');
  FPack.add('			}');
  FPack.add('		}');
  FPack.add('');
  FPack.add('		scale.setReductions(largestPossibleRadius, furthestLimits, furthestAngles);');
  FPack.add('	}');
  FPack.add('');
  FPack.add('	/**');
end;

procedure TChartbundleJS.ChartbundleJS_54;
begin
  FPack.add('	 * Helper function to fit a radial linear scale with no point labels');
  FPack.add('	 */');
  FPack.add('	function fit(scale) {');
  FPack.add('		var largestPossibleRadius = Math.min(scale.height / 2, scale.width / 2);');
  FPack.add('		scale.drawingArea = Math.round(largestPossibleRadius);');
  FPack.add('		scale.setCenterPoint(0, 0, 0, 0);');
  FPack.add('	}');
  FPack.add('');
  FPack.add('	function getTextAlignForAngle(angle) {');
  FPack.add('		if (angle === 0 || angle === 180) {');
  FPack.add('			return ''center'';');
  FPack.add('		} else if (angle < 180) {');
  FPack.add('			return ''left'';');
  FPack.add('		}');
  FPack.add('');
  FPack.add('		return ''right'';');
  FPack.add('	}');
  FPack.add('');
  FPack.add('	function fillText(ctx, text, position, fontSize) {');
  FPack.add('		if (helpers.isArray(text)) {');
  FPack.add('			var y = position.y;');
  FPack.add('			var spacing = 1.5 * fontSize;');
  FPack.add('');
  FPack.add('			for (var i = 0; i < text.length; ++i) {');
  FPack.add('				ctx.fillText(text[i], position.x, y);');
  FPack.add('				y += spacing;');
  FPack.add('			}');
  FPack.add('		} else {');
  FPack.add('			ctx.fillText(text, position.x, position.y);');
  FPack.add('		}');
  FPack.add('	}');
  FPack.add('');
  FPack.add('	function adjustPointPositionForLabelHeight(angle, textSize, position) {');
  FPack.add('		if (angle === 90 || angle === 270) {');
  FPack.add('			position.y -= (textSize.h / 2);');
  FPack.add('		} else if (angle > 270 || angle < 90) {');
  FPack.add('			position.y -= textSize.h;');
  FPack.add('		}');
  FPack.add('	}');
  FPack.add('');
  FPack.add('	function drawPointLabels(scale) {');
  FPack.add('		var ctx = scale.ctx;');
  FPack.add('		var opts = scale.options;');
  FPack.add('		var angleLineOpts = opts.angleLines;');
  FPack.add('		var pointLabelOpts = opts.pointLabels;');
  FPack.add('');
  FPack.add('		ctx.lineWidth = angleLineOpts.lineWidth;');
  FPack.add('		ctx.strokeStyle = angleLineOpts.color;');
  FPack.add('');
  FPack.add('		var outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max);');
  FPack.add('');
  FPack.add('		// Point Label Font');
  FPack.add('		var plFont = getPointLabelFontOptions(scale);');
  FPack.add('');
  FPack.add('		ctx.textBaseline = ''top'';');
  FPack.add('');
  FPack.add('		for (var i = getValueCount(scale) - 1; i >= 0; i--) {');
  FPack.add('			if (angleLineOpts.display) {');
  FPack.add('				var outerPosition = scale.getPointPosition(i, outerDistance);');
  FPack.add('				ctx.beginPath();');
  FPack.add('				ctx.moveTo(scale.xCenter, scale.yCenter);');
  FPack.add('				ctx.lineTo(outerPosition.x, outerPosition.y);');
  FPack.add('				ctx.stroke();');
  FPack.add('				ctx.closePath();');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			if (pointLabelOpts.display) {');
  FPack.add('				// Extra 3px out for some label spacing');
  FPack.add('				var pointLabelPosition = scale.getPointPosition(i, outerDistance + 5);');
  FPack.add('');
  FPack.add('				// Keep this in loop since we may support array properties here');
  FPack.add('				var pointLabelFontColor = helpers.valueAtIndexOrDefault(pointLabelOpts.fontColor, i, globalDefaults.defaultFontColor);');
  FPack.add('				ctx.font = plFont.font;');
  FPack.add('				ctx.fillStyle = pointLabelFontColor;');
  FPack.add('');
  FPack.add('				var angleRadians = scale.getIndexAngle(i);');
  FPack.add('				var angle = helpers.toDegrees(angleRadians);');
  FPack.add('				ctx.textAlign = getTextAlignForAngle(angle);');
  FPack.add('				adjustPointPositionForLabelHeight(angle, scale._pointLabelSizes[i], pointLabelPosition);');
  FPack.add('				fillText(ctx, scale.pointLabels[i] || '''', pointLabelPosition, plFont.size);');
  FPack.add('			}');
  FPack.add('		}');
  FPack.add('	}');
  FPack.add('');
  FPack.add('	function drawRadiusLine(scale, gridLineOpts, radius, index) {');
  FPack.add('		var ctx = scale.ctx;');
  FPack.add('		ctx.strokeStyle = helpers.valueAtIndexOrDefault(gridLineOpts.color, index - 1);');
  FPack.add('		ctx.lineWidth = helpers.valueAtIndexOrDefault(gridLineOpts.lineWidth, index - 1);');
  FPack.add('');
  FPack.add('		if (scale.options.gridLines.circular) {');
  FPack.add('			// Draw circular arcs between the points');
  FPack.add('			ctx.beginPath();');
  FPack.add('			ctx.arc(scale.xCenter, scale.yCenter, radius, 0, Math.PI * 2);');
  FPack.add('			ctx.closePath();');
  FPack.add('			ctx.stroke();');
  FPack.add('		} else {');
  FPack.add('			// Draw straight lines connecting each index');
  FPack.add('			var valueCount = getValueCount(scale);');
  FPack.add('');
  FPack.add('			if (valueCount === 0) {');
  FPack.add('				return;');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			ctx.beginPath();');
  FPack.add('			var pointPosition = scale.getPointPosition(0, radius);');
  FPack.add('			ctx.moveTo(pointPosition.x, pointPosition.y);');
  FPack.add('');
  FPack.add('			for (var i = 1; i < valueCount; i++) {');
  FPack.add('				pointPosition = scale.getPointPosition(i, radius);');
  FPack.add('				ctx.lineTo(pointPosition.x, pointPosition.y);');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			ctx.closePath();');
  FPack.add('			ctx.stroke();');
  FPack.add('		}');
  FPack.add('	}');
  FPack.add('');
  FPack.add('	function numberOrZero(param) {');
  FPack.add('		return helpers.isNumber(param) ? param : 0;');
  FPack.add('	}');
  FPack.add('');
  FPack.add('	var LinearRadialScale = Chart.LinearScaleBase.extend({');
  FPack.add('		setDimensions: function() {');
  FPack.add('			var me = this;');
  FPack.add('			var opts = me.options;');
  FPack.add('			var tickOpts = opts.ticks;');
  FPack.add('			// Set the unconstrained dimension before label rotation');
  FPack.add('			me.width = me.maxWidth;');
  FPack.add('			me.height = me.maxHeight;');
  FPack.add('			me.xCenter = Math.round(me.width / 2);');
  FPack.add('			me.yCenter = Math.round(me.height / 2);');
  FPack.add('');
  FPack.add('			var minSize = helpers.min([me.height, me.width]);');
  FPack.add('			var tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);');
  FPack.add('			me.drawingArea = opts.display ? (minSize / 2) - (tickFontSize / 2 + tickOpts.backdropPaddingY) : (minSize / 2);');
  FPack.add('		},');
  FPack.add('		determineDataLimits: function() {');
  FPack.add('			var me = this;');
  FPack.add('			var chart = me.chart;');
  FPack.add('			var min = Number.POSITIVE_INFINITY;');
  FPack.add('			var max = Number.NEGATIVE_INFINITY;');
  FPack.add('');
  FPack.add('			helpers.each(chart.data.datasets, function(dataset, datasetIndex) {');
  FPack.add('				if (chart.isDatasetVisible(datasetIndex)) {');
  FPack.add('					var meta = chart.getDatasetMeta(datasetIndex);');
  FPack.add('');
  FPack.add('					helpers.each(dataset.data, function(rawValue, index) {');
  FPack.add('						var value = +me.getRightValue(rawValue);');
  FPack.add('						if (isNaN(value) || meta.data[index].hidden) {');
  FPack.add('							return;');
  FPack.add('						}');
  FPack.add('');
  FPack.add('						min = Math.min(value, min);');
  FPack.add('						max = Math.max(value, max);');
  FPack.add('					});');
  FPack.add('				}');
  FPack.add('			});');
  FPack.add('');
  FPack.add('			me.min = (min === Number.POSITIVE_INFINITY ? 0 : min);');
  FPack.add('			me.max = (max === Number.NEGATIVE_INFINITY ? 0 : max);');
  FPack.add('');
  FPack.add('			// Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero');
  FPack.add('			me.handleTickRangeOptions();');
  FPack.add('		},');
  FPack.add('		getTickLimit: function() {');
  FPack.add('			var tickOpts = this.options.ticks;');
  FPack.add('			var tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);');
  FPack.add('			return Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(this.drawingArea / (1.5 * tickFontSize)));');
  FPack.add('		},');
  FPack.add('		convertTicksToLabels: function() {');
  FPack.add('			var me = this;');
  FPack.add('');
  FPack.add('			Chart.LinearScaleBase.prototype.convertTicksToLabels.call(me);');
  FPack.add('');
  FPack.add('			// Point labels');
  FPack.add('			me.pointLabels = me.chart.data.labels.map(me.options.pointLabels.callback, me);');
  FPack.add('		},');
  FPack.add('		getLabelForIndex: function(index, datasetIndex) {');
  FPack.add('			return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);');
  FPack.add('		},');
  FPack.add('		fit: function() {');
  FPack.add('			if (this.options.pointLabels.display) {');
  FPack.add('				fitWithPointLabels(this);');
  FPack.add('			} else {');
  FPack.add('				fit(this);');
  FPack.add('			}');
  FPack.add('		},');
  FPack.add('		/**');
  FPack.add('		 * Set radius reductions and determine new radius and center point');
  FPack.add('		 * @private');
  FPack.add('		 */');
  FPack.add('		setReductions: function(largestPossibleRadius, furthestLimits, furthestAngles) {');
  FPack.add('			var me = this;');
  FPack.add('			var radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);');
  FPack.add('			var radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);');
  FPack.add('			var radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);');
  FPack.add('			var radiusReductionBottom = -Math.max(furthestLimits.b - me.height, 0) / Math.cos(furthestAngles.b);');
  FPack.add('');
  FPack.add('			radiusReductionLeft = numberOrZero(radiusReductionLeft);');
  FPack.add('			radiusReductionRight = numberOrZero(radiusReductionRight);');
  FPack.add('			radiusReductionTop = numberOrZero(radiusReductionTop);');
  FPack.add('			radiusReductionBottom = numberOrZero(radiusReductionBottom);');
  FPack.add('');
  FPack.add('			me.drawingArea = Math.min(');
  FPack.add('				Math.round(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2),');
  FPack.add('				Math.round(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2));');
  FPack.add('			me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);');
  FPack.add('		},');
  FPack.add('		setCenterPoint: function(leftMovement, rightMovement, topMovement, bottomMovement) {');
  FPack.add('			var me = this;');
  FPack.add('			var maxRight = me.width - rightMovement - me.drawingArea;');
  FPack.add('			var maxLeft = leftMovement + me.drawingArea;');
  FPack.add('			var maxTop = topMovement + me.drawingArea;');
  FPack.add('			var maxBottom = me.height - bottomMovement - me.drawingArea;');
  FPack.add('');
  FPack.add('			me.xCenter = Math.round(((maxLeft + maxRight) / 2) + me.left);');
  FPack.add('			me.yCenter = Math.round(((maxTop + maxBottom) / 2) + me.top);');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		getIndexAngle: function(index) {');
  FPack.add('			var angleMultiplier = (Math.PI * 2) / getValueCount(this);');
  FPack.add('			var startAngle = this.chart.options && this.chart.options.startAngle ?');
  FPack.add('				this.chart.options.startAngle :');
  FPack.add('				0;');
  FPack.add('');
  FPack.add('			var startAngleRadians = startAngle * Math.PI * 2 / 360;');
  FPack.add('');
  FPack.add('			// Start from the top instead of right, so remove a quarter of the circle');
  FPack.add('			return index * angleMultiplier + startAngleRadians;');
  FPack.add('		},');
  FPack.add('		getDistanceFromCenterForValue: function(value) {');
  FPack.add('			var me = this;');
  FPack.add('');
  FPack.add('			if (value === null) {');
  FPack.add('				return 0; // null always in center');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			// Take into account half font size + the yPadding of the top value');
  FPack.add('			var scalingFactor = me.drawingArea / (me.max - me.min);');
  FPack.add('			if (me.options.ticks.reverse) {');
  FPack.add('				return (me.max - value) * scalingFactor;');
  FPack.add('			}');
  FPack.add('			return (value - me.min) * scalingFactor;');
  FPack.add('		},');
  FPack.add('		getPointPosition: function(index, distanceFromCenter) {');
  FPack.add('			var me = this;');
  FPack.add('			var thisAngle = me.getIndexAngle(index) - (Math.PI / 2);');
  FPack.add('			return {');
  FPack.add('				x: Math.round(Math.cos(thisAngle) * distanceFromCenter) + me.xCenter,');
  FPack.add('				y: Math.round(Math.sin(thisAngle) * distanceFromCenter) + me.yCenter');
  FPack.add('			};');
  FPack.add('		},');
  FPack.add('		getPointPositionForValue: function(index, value) {');
  FPack.add('			return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		getBasePosition: function() {');
  FPack.add('			var me = this;');
  FPack.add('			var min = me.min;');
  FPack.add('			var max = me.max;');
  FPack.add('');
  FPack.add('			return me.getPointPositionForValue(0,');
  FPack.add('				me.beginAtZero ? 0 :');
  FPack.add('				min < 0 && max < 0 ? max :');
  FPack.add('				min > 0 && max > 0 ? min :');
  FPack.add('				0);');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		draw: function() {');
  FPack.add('			var me = this;');
  FPack.add('			var opts = me.options;');
  FPack.add('			var gridLineOpts = opts.gridLines;');
  FPack.add('			var tickOpts = opts.ticks;');
  FPack.add('			var valueOrDefault = helpers.valueOrDefault;');
  FPack.add('');
  FPack.add('			if (opts.display) {');
  FPack.add('				var ctx = me.ctx;');
  FPack.add('				var startAngle = this.getIndexAngle(0);');
  FPack.add('');
  FPack.add('				// Tick Font');
  FPack.add('				var tickFontSize = valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);');
  FPack.add('				var tickFontStyle = valueOrDefault(tickOpts.fontStyle, globalDefaults.defaultFontStyle);');
  FPack.add('				var tickFontFamily = valueOrDefault(tickOpts.fontFamily, globalDefaults.defaultFontFamily);');
  FPack.add('				var tickLabelFont = helpers.fontString(tickFontSize, tickFontStyle, tickFontFamily);');
  FPack.add('');
  FPack.add('				helpers.each(me.ticks, function(label, index) {');
  FPack.add('					// Don''t draw a centre value (if it is minimum)');
  FPack.add('					if (index > 0 || tickOpts.reverse) {');
  FPack.add('						var yCenterOffset = me.getDistanceFromCenterForValue(me.ticksAsNumbers[index]);');
  FPack.add('');
  FPack.add('						// Draw circular lines around the scale');
  FPack.add('						if (gridLineOpts.display && index !== 0) {');
  FPack.add('							drawRadiusLine(me, gridLineOpts, yCenterOffset, index);');
  FPack.add('						}');
  FPack.add('');
  FPack.add('						if (tickOpts.display) {');
  FPack.add('							var tickFontColor = valueOrDefault(tickOpts.fontColor, globalDefaults.defaultFontColor);');
  FPack.add('							ctx.font = tickLabelFont;');
  FPack.add('');
  FPack.add('							ctx.save();');
  FPack.add('							ctx.translate(me.xCenter, me.yCenter);');
  FPack.add('							ctx.rotate(startAngle);');
  FPack.add('');
  FPack.add('							if (tickOpts.showLabelBackdrop) {');
  FPack.add('								var labelWidth = ctx.measureText(label).width;');
  FPack.add('								ctx.fillStyle = tickOpts.backdropColor;');
  FPack.add('								ctx.fillRect(');
  FPack.add('									-labelWidth / 2 - tickOpts.backdropPaddingX,');
  FPack.add('									-yCenterOffset - tickFontSize / 2 - tickOpts.backdropPaddingY,');
  FPack.add('									labelWidth + tickOpts.backdropPaddingX * 2,');
  FPack.add('									tickFontSize + tickOpts.backdropPaddingY * 2');
  FPack.add('								);');
  FPack.add('							}');
  FPack.add('');
  FPack.add('							ctx.textAlign = ''center'';');
  FPack.add('							ctx.textBaseline = ''middle'';');
  FPack.add('							ctx.fillStyle = tickFontColor;');
  FPack.add('							ctx.fillText(label, 0, -yCenterOffset);');
  FPack.add('							ctx.restore();');
  FPack.add('						}');
  FPack.add('					}');
  FPack.add('				});');
  FPack.add('');
  FPack.add('				if (opts.angleLines.display || opts.pointLabels.display) {');
  FPack.add('					drawPointLabels(me);');
  FPack.add('				}');
  FPack.add('			}');
  FPack.add('		}');
  FPack.add('	});');
  FPack.add('	Chart.scaleService.registerScaleType(''radialLinear'', LinearRadialScale, defaultConfig);');
  FPack.add('');
  FPack.add('};');
  FPack.add('');
  FPack.add('},{"25":25,"34":34,"45":45}],58:[function(require,module,exports){');
  FPack.add('/* global window: false */');
  FPack.add('''use strict'';');
end;

procedure TChartbundleJS.ChartbundleJS_55;
begin
  FPack.add('');
  FPack.add('var moment = require(6);');
  FPack.add('moment = typeof moment === ''function'' ? moment : window.moment;');
  FPack.add('');
  FPack.add('var defaults = require(25);');
  FPack.add('var helpers = require(45);');
  FPack.add('');
  FPack.add('// Integer constants are from the ES6 spec.');
  FPack.add('var MIN_INTEGER = Number.MIN_SAFE_INTEGER || -9007199254740991;');
  FPack.add('var MAX_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;');
  FPack.add('');
  FPack.add('var INTERVALS = {');
  FPack.add('	millisecond: {');
  FPack.add('		common: true,');
  FPack.add('		size: 1,');
  FPack.add('		steps: [1, 2, 5, 10, 20, 50, 100, 250, 500]');
  FPack.add('	},');
  FPack.add('	second: {');
  FPack.add('		common: true,');
  FPack.add('		size: 1000,');
  FPack.add('		steps: [1, 2, 5, 10, 30]');
  FPack.add('	},');
  FPack.add('	minute: {');
  FPack.add('		common: true,');
  FPack.add('		size: 60000,');
  FPack.add('		steps: [1, 2, 5, 10, 30]');
  FPack.add('	},');
  FPack.add('	hour: {');
  FPack.add('		common: true,');
  FPack.add('		size: 3600000,');
  FPack.add('		steps: [1, 2, 3, 6, 12]');
  FPack.add('	},');
  FPack.add('	day: {');
  FPack.add('		common: true,');
  FPack.add('		size: 86400000,');
  FPack.add('		steps: [1, 2, 5]');
  FPack.add('	},');
  FPack.add('	week: {');
  FPack.add('		common: false,');
  FPack.add('		size: 604800000,');
  FPack.add('		steps: [1, 2, 3, 4]');
  FPack.add('	},');
  FPack.add('	month: {');
  FPack.add('		common: true,');
  FPack.add('		size: 2.628e9,');
  FPack.add('		steps: [1, 2, 3]');
  FPack.add('	},');
  FPack.add('	quarter: {');
  FPack.add('		common: false,');
  FPack.add('		size: 7.884e9,');
  FPack.add('		steps: [1, 2, 3, 4]');
  FPack.add('	},');
  FPack.add('	year: {');
  FPack.add('		common: true,');
  FPack.add('		size: 3.154e10');
  FPack.add('	}');
  FPack.add('};');
  FPack.add('');
  FPack.add('var UNITS = Object.keys(INTERVALS);');
  FPack.add('');
  FPack.add('function sorter(a, b) {');
  FPack.add('	return a - b;');
  FPack.add('}');
  FPack.add('');
  FPack.add('function arrayUnique(items) {');
  FPack.add('	var hash = {};');
  FPack.add('	var out = [];');
  FPack.add('	var i, ilen, item;');
  FPack.add('');
  FPack.add('	for (i = 0, ilen = items.length; i < ilen; ++i) {');
  FPack.add('		item = items[i];');
  FPack.add('		if (!hash[item]) {');
  FPack.add('			hash[item] = true;');
  FPack.add('			out.push(item);');
  FPack.add('		}');
  FPack.add('	}');
  FPack.add('');
  FPack.add('	return out;');
  FPack.add('}');
  FPack.add('');
  FPack.add('/**');
  FPack.add(' * Returns an array of {time, pos} objects used to interpolate a specific `time` or position');
  FPack.add(' * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is');
  FPack.add(' * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other');
  FPack.add(' * extremity (left + width or top + height). Note that it would be more optimized to directly');
  FPack.add(' * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need');
  FPack.add(' * to create the lookup table. The table ALWAYS contains at least two items: min and max.');
  FPack.add(' *');
  FPack.add(' * @param {Number[]} timestamps - timestamps sorted from lowest to highest.');
  FPack.add(' * @param {String} distribution - If ''linear'', timestamps will be spread linearly along the min');
  FPack.add(' * and max range, so basically, the table will contains only two items: {min, 0} and {max, 1}.');
  FPack.add(' * If ''series'', timestamps will be positioned at the same distance from each other. In this');
  FPack.add(' * case, only timestamps that break the time linearity are registered, meaning that in the');
  FPack.add(' * best case, all timestamps are linear, the table contains only min and max.');
  FPack.add(' */');
  FPack.add('function buildLookupTable(timestamps, min, max, distribution) {');
  FPack.add('	if (distribution === ''linear'' || !timestamps.length) {');
  FPack.add('		return [');
  FPack.add('			{time: min, pos: 0},');
  FPack.add('			{time: max, pos: 1}');
  FPack.add('		];');
  FPack.add('	}');
  FPack.add('');
  FPack.add('	var table = [];');
  FPack.add('	var items = [min];');
  FPack.add('	var i, ilen, prev, curr, next;');
  FPack.add('');
  FPack.add('	for (i = 0, ilen = timestamps.length; i < ilen; ++i) {');
  FPack.add('		curr = timestamps[i];');
  FPack.add('		if (curr > min && curr < max) {');
  FPack.add('			items.push(curr);');
  FPack.add('		}');
  FPack.add('	}');
  FPack.add('');
  FPack.add('	items.push(max);');
  FPack.add('');
  FPack.add('	for (i = 0, ilen = items.length; i < ilen; ++i) {');
  FPack.add('		next = items[i + 1];');
  FPack.add('		prev = items[i - 1];');
  FPack.add('		curr = items[i];');
  FPack.add('');
  FPack.add('		// only add points that breaks the scale linearity');
  FPack.add('		if (prev === undefined || next === undefined || Math.round((next + prev) / 2) !== curr) {');
  FPack.add('			table.push({time: curr, pos: i / (ilen - 1)});');
  FPack.add('		}');
  FPack.add('	}');
  FPack.add('');
  FPack.add('	return table;');
  FPack.add('}');
  FPack.add('');
  FPack.add('// @see adapted from http://www.anujgakhar.com/2014/03/01/binary-search-in-javascript/');
  FPack.add('function lookup(table, key, value) {');
  FPack.add('	var lo = 0;');
  FPack.add('	var hi = table.length - 1;');
  FPack.add('	var mid, i0, i1;');
  FPack.add('');
  FPack.add('	while (lo >= 0 && lo <= hi) {');
  FPack.add('		mid = (lo + hi) >> 1;');
  FPack.add('		i0 = table[mid - 1] || null;');
  FPack.add('		i1 = table[mid];');
  FPack.add('');
  FPack.add('		if (!i0) {');
  FPack.add('			// given value is outside table (before first item)');
  FPack.add('			return {lo: null, hi: i1};');
  FPack.add('		} else if (i1[key] < value) {');
  FPack.add('			lo = mid + 1;');
  FPack.add('		} else if (i0[key] > value) {');
  FPack.add('			hi = mid - 1;');
  FPack.add('		} else {');
  FPack.add('			return {lo: i0, hi: i1};');
  FPack.add('		}');
  FPack.add('	}');
  FPack.add('');
  FPack.add('	// given value is outside table (after last item)');
  FPack.add('	return {lo: i1, hi: null};');
  FPack.add('}');
  FPack.add('');
  FPack.add('/**');
  FPack.add(' * Linearly interpolates the given source `value` using the table items `skey` values and');
  FPack.add(' * returns the associated `tkey` value. For example, interpolate(table, ''time'', 42, ''pos'')');
  FPack.add(' * returns the position for a timestamp equal to 42. If value is out of bounds, values at');
  FPack.add(' * index [0, 1] or [n - 1, n] are used for the interpolation.');
  FPack.add(' */');
  FPack.add('function interpolate(table, skey, sval, tkey) {');
  FPack.add('	var range = lookup(table, skey, sval);');
  FPack.add('');
  FPack.add('	// Note: the lookup table ALWAYS contains at least 2 items (min and max)');
  FPack.add('	var prev = !range.lo ? table[0] : !range.hi ? table[table.length - 2] : range.lo;');
  FPack.add('	var next = !range.lo ? table[1] : !range.hi ? table[table.length - 1] : range.hi;');
  FPack.add('');
  FPack.add('	var span = next[skey] - prev[skey];');
  FPack.add('	var ratio = span ? (sval - prev[skey]) / span : 0;');
  FPack.add('	var offset = (next[tkey] - prev[tkey]) * ratio;');
  FPack.add('');
  FPack.add('	return prev[tkey] + offset;');
  FPack.add('}');
  FPack.add('');
  FPack.add('/**');
  FPack.add(' * Convert the given value to a moment object using the given time options.');
  FPack.add(' * @see http://momentjs.com/docs/#/parsing/');
  FPack.add(' */');
  FPack.add('function momentify(value, options) {');
  FPack.add('	var parser = options.parser;');
  FPack.add('	var format = options.parser || options.format;');
  FPack.add('');
  FPack.add('	if (typeof parser === ''function'') {');
  FPack.add('		return parser(value);');
  FPack.add('	}');
  FPack.add('');
  FPack.add('	if (typeof value === ''string'' && typeof format === ''string'') {');
  FPack.add('		return moment(value, format);');
  FPack.add('	}');
  FPack.add('');
  FPack.add('	if (!(value instanceof moment)) {');
  FPack.add('		value = moment(value);');
  FPack.add('	}');
  FPack.add('');
  FPack.add('	if (value.isValid()) {');
  FPack.add('		return value;');
  FPack.add('	}');
  FPack.add('');
  FPack.add('	// Labels are in an incompatible moment format and no `parser` has been provided.');
  FPack.add('	// The user might still use the deprecated `format` option to convert his inputs.');
  FPack.add('	if (typeof format === ''function'') {');
  FPack.add('		return format(value);');
  FPack.add('	}');
  FPack.add('');
  FPack.add('	return value;');
  FPack.add('}');
  FPack.add('');
  FPack.add('function parse(input, scale) {');
  FPack.add('	if (helpers.isNullOrUndef(input)) {');
  FPack.add('		return null;');
  FPack.add('	}');
  FPack.add('');
  FPack.add('	var options = scale.options.time;');
  FPack.add('	var value = momentify(scale.getRightValue(input), options);');
  FPack.add('	if (!value.isValid()) {');
  FPack.add('		return null;');
  FPack.add('	}');
  FPack.add('');
  FPack.add('	if (options.round) {');
  FPack.add('		value.startOf(options.round);');
  FPack.add('	}');
  FPack.add('');
  FPack.add('	return value.valueOf();');
  FPack.add('}');
  FPack.add('');
  FPack.add('/**');
  FPack.add(' * Returns the number of unit to skip to be able to display up to `capacity` number of ticks');
  FPack.add(' * in `unit` for the given `min` / `max` range and respecting the interval steps constraints.');
  FPack.add(' */');
  FPack.add('function determineStepSize(min, max, unit, capacity) {');
  FPack.add('	var range = max - min;');
  FPack.add('	var interval = INTERVALS[unit];');
  FPack.add('	var milliseconds = interval.size;');
  FPack.add('	var steps = interval.steps;');
  FPack.add('	var i, ilen, factor;');
  FPack.add('');
  FPack.add('	if (!steps) {');
  FPack.add('		return Math.ceil(range / (capacity * milliseconds));');
  FPack.add('	}');
  FPack.add('');
  FPack.add('	for (i = 0, ilen = steps.length; i < ilen; ++i) {');
  FPack.add('		factor = steps[i];');
  FPack.add('		if (Math.ceil(range / (milliseconds * factor)) <= capacity) {');
  FPack.add('			break;');
  FPack.add('		}');
  FPack.add('	}');
  FPack.add('');
  FPack.add('	return factor;');
  FPack.add('}');
  FPack.add('');
  FPack.add('/**');
  FPack.add(' * Figures out what unit results in an appropriate number of auto-generated ticks');
  FPack.add(' */');
  FPack.add('function determineUnitForAutoTicks(minUnit, min, max, capacity) {');
  FPack.add('	var ilen = UNITS.length;');
  FPack.add('	var i, interval, factor;');
  FPack.add('');
  FPack.add('	for (i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {');
  FPack.add('		interval = INTERVALS[UNITS[i]];');
  FPack.add('		factor = interval.steps ? interval.steps[interval.steps.length - 1] : MAX_INTEGER;');
  FPack.add('');
  FPack.add('		if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {');
  FPack.add('			return UNITS[i];');
  FPack.add('		}');
  FPack.add('	}');
  FPack.add('');
  FPack.add('	return UNITS[ilen - 1];');
  FPack.add('}');
  FPack.add('');
  FPack.add('/**');
  FPack.add(' * Figures out what unit to format a set of ticks with');
  FPack.add(' */');
  FPack.add('function determineUnitForFormatting(ticks, minUnit, min, max) {');
  FPack.add('	var duration = moment.duration(moment(max).diff(moment(min)));');
  FPack.add('	var ilen = UNITS.length;');
  FPack.add('	var i, unit;');
  FPack.add('');
  FPack.add('	for (i = ilen - 1; i >= UNITS.indexOf(minUnit); i--) {');
  FPack.add('		unit = UNITS[i];');
  FPack.add('		if (INTERVALS[unit].common && duration.as(unit) >= ticks.length) {');
  FPack.add('			return unit;');
  FPack.add('		}');
  FPack.add('	}');
  FPack.add('');
  FPack.add('	return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];');
  FPack.add('}');
  FPack.add('');
  FPack.add('function determineMajorUnit(unit) {');
  FPack.add('	for (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {');
  FPack.add('		if (INTERVALS[UNITS[i]].common) {');
  FPack.add('			return UNITS[i];');
  FPack.add('		}');
  FPack.add('	}');
  FPack.add('}');
  FPack.add('');
  FPack.add('/**');
  FPack.add(' * Generates a maximum of `capacity` timestamps between min and max, rounded to the');
  FPack.add(' * `minor` unit, aligned on the `major` unit and using the given scale time `options`.');
  FPack.add(' * Important: this method can return ticks outside the min and max range, it''s the');
  FPack.add(' * responsibility of the calling code to clamp values if needed.');
  FPack.add(' */');
  FPack.add('function generate(min, max, capacity, options) {');
  FPack.add('	var timeOpts = options.time;');
  FPack.add('	var minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, capacity);');
  FPack.add('	var major = determineMajorUnit(minor);');
  FPack.add('	var stepSize = helpers.valueOrDefault(timeOpts.stepSize, timeOpts.unitStepSize);');
  FPack.add('	var weekday = minor === ''week'' ? timeOpts.isoWeekday : false;');
  FPack.add('	var majorTicksEnabled = options.ticks.major.enabled;');
  FPack.add('	var interval = INTERVALS[minor];');
  FPack.add('	var first = moment(min);');
  FPack.add('	var last = moment(max);');
  FPack.add('	var ticks = [];');
  FPack.add('	var time;');
  FPack.add('');
  FPack.add('	if (!stepSize) {');
  FPack.add('		stepSize = determineStepSize(min, max, minor, capacity);');
  FPack.add('	}');
  FPack.add('');
  FPack.add('	// For ''week'' unit, handle the first day of week option');
  FPack.add('	if (weekday) {');
  FPack.add('		first = first.isoWeekday(weekday);');
  FPack.add('		last = last.isoWeekday(weekday);');
  FPack.add('	}');
  FPack.add('');
  FPack.add('	// Align first/last ticks on unit');
  FPack.add('	first = first.startOf(weekday ? ''day'' : minor);');
  FPack.add('	last = last.startOf(weekday ? ''day'' : minor);');
  FPack.add('');
  FPack.add('	// Make sure that the last tick include max');
  FPack.add('	if (last < max) {');
  FPack.add('		last.add(1, minor);');
  FPack.add('	}');
  FPack.add('');
end;

procedure TChartbundleJS.ChartbundleJS_56;
begin
  FPack.add('	time = moment(first);');
  FPack.add('');
  FPack.add('	if (majorTicksEnabled && major && !weekday && !timeOpts.round) {');
  FPack.add('		// Align the first tick on the previous `minor` unit aligned on the `major` unit:');
  FPack.add('		// we first aligned time on the previous `major` unit then add the number of full');
  FPack.add('		// stepSize there is between first and the previous major time.');
  FPack.add('		time.startOf(major);');
  FPack.add('		time.add(~~((first - time) / (interval.size * stepSize)) * stepSize, minor);');
  FPack.add('	}');
  FPack.add('');
  FPack.add('	for (; time < last; time.add(stepSize, minor)) {');
  FPack.add('		ticks.push(+time);');
  FPack.add('	}');
  FPack.add('');
  FPack.add('	ticks.push(+time);');
  FPack.add('');
  FPack.add('	return ticks;');
  FPack.add('}');
  FPack.add('');
  FPack.add('/**');
  FPack.add(' * Returns the right and left offsets from edges in the form of {left, right}.');
  FPack.add(' * Offsets are added when the `offset` option is true.');
  FPack.add(' */');
  FPack.add('function computeOffsets(table, ticks, min, max, options) {');
  FPack.add('	var left = 0;');
  FPack.add('	var right = 0;');
  FPack.add('	var upper, lower;');
  FPack.add('');
  FPack.add('	if (options.offset && ticks.length) {');
  FPack.add('		if (!options.time.min) {');
  FPack.add('			upper = ticks.length > 1 ? ticks[1] : max;');
  FPack.add('			lower = ticks[0];');
  FPack.add('			left = (');
  FPack.add('				interpolate(table, ''time'', upper, ''pos'') -');
  FPack.add('				interpolate(table, ''time'', lower, ''pos'')');
  FPack.add('			) / 2;');
  FPack.add('		}');
  FPack.add('		if (!options.time.max) {');
  FPack.add('			upper = ticks[ticks.length - 1];');
  FPack.add('			lower = ticks.length > 1 ? ticks[ticks.length - 2] : min;');
  FPack.add('			right = (');
  FPack.add('				interpolate(table, ''time'', upper, ''pos'') -');
  FPack.add('				interpolate(table, ''time'', lower, ''pos'')');
  FPack.add('			) / 2;');
  FPack.add('		}');
  FPack.add('	}');
  FPack.add('');
  FPack.add('	return {left: left, right: right};');
  FPack.add('}');
  FPack.add('');
  FPack.add('function ticksFromTimestamps(values, majorUnit) {');
  FPack.add('	var ticks = [];');
  FPack.add('	var i, ilen, value, major;');
  FPack.add('');
  FPack.add('	for (i = 0, ilen = values.length; i < ilen; ++i) {');
  FPack.add('		value = values[i];');
  FPack.add('		major = majorUnit ? value === +moment(value).startOf(majorUnit) : false;');
  FPack.add('');
  FPack.add('		ticks.push({');
  FPack.add('			value: value,');
  FPack.add('			major: major');
  FPack.add('		});');
  FPack.add('	}');
  FPack.add('');
  FPack.add('	return ticks;');
  FPack.add('}');
  FPack.add('');
  FPack.add('function determineLabelFormat(data, timeOpts) {');
  FPack.add('	var i, momentDate, hasTime;');
  FPack.add('	var ilen = data.length;');
  FPack.add('');
  FPack.add('	// find the label with the most parts (milliseconds, minutes, etc.)');
  FPack.add('	// format all labels with the same level of detail as the most specific label');
  FPack.add('	for (i = 0; i < ilen; i++) {');
  FPack.add('		momentDate = momentify(data[i], timeOpts);');
  FPack.add('		if (momentDate.millisecond() !== 0) {');
  FPack.add('			return ''MMM D, YYYY h:mm:ss.SSS a'';');
  FPack.add('		}');
  FPack.add('		if (momentDate.second() !== 0 || momentDate.minute() !== 0 || momentDate.hour() !== 0) {');
  FPack.add('			hasTime = true;');
  FPack.add('		}');
  FPack.add('	}');
  FPack.add('	if (hasTime) {');
  FPack.add('		return ''MMM D, YYYY h:mm:ss a'';');
  FPack.add('	}');
  FPack.add('	return ''MMM D, YYYY'';');
  FPack.add('}');
  FPack.add('');
  FPack.add('module.exports = function(Chart) {');
  FPack.add('');
  FPack.add('	var defaultConfig = {');
  FPack.add('		position: ''bottom'',');
  FPack.add('');
  FPack.add('		/**');
  FPack.add('		 * Data distribution along the scale:');
  FPack.add('		 * - ''linear'': data are spread according to their time (distances can vary),');
  FPack.add('		 * - ''series'': data are spread at the same distance from each other.');
  FPack.add('		 * @see https://github.com/chartjs/Chart.js/pull/4507');
  FPack.add('		 * @since 2.7.0');
  FPack.add('		 */');
  FPack.add('		distribution: ''linear'',');
  FPack.add('');
  FPack.add('		/**');
  FPack.add('		 * Scale boundary strategy (bypassed by min/max time options)');
  FPack.add('		 * - `data`: make sure data are fully visible, ticks outside are removed');
  FPack.add('		 * - `ticks`: make sure ticks are fully visible, data outside are truncated');
  FPack.add('		 * @see https://github.com/chartjs/Chart.js/pull/4556');
  FPack.add('		 * @since 2.7.0');
  FPack.add('		 */');
  FPack.add('		bounds: ''data'',');
  FPack.add('');
  FPack.add('		time: {');
  FPack.add('			parser: false, // false == a pattern string from http://momentjs.com/docs/#/parsing/string-format/ or a custom callback that converts its argument to a moment');
  FPack.add('			format: false, // DEPRECATED false == date objects, moment object, callback or a pattern string from http://momentjs.com/docs/#/parsing/string-format/');
  FPack.add('			unit: false, // false == automatic or override with week, month, year, etc.');
  FPack.add('			round: false, // none, or override with week, month, year, etc.');
  FPack.add('			displayFormat: false, // DEPRECATED');
  FPack.add('			isoWeekday: false, // override week start day - see http://momentjs.com/docs/#/get-set/iso-weekday/');
  FPack.add('			minUnit: ''millisecond'',');
  FPack.add('');
  FPack.add('			// defaults to unit''s corresponding unitFormat below or override using pattern string from http://momentjs.com/docs/#/displaying/format/');
  FPack.add('			displayFormats: {');
  FPack.add('				millisecond: ''h:mm:ss.SSS a'', // 11:20:01.123 AM,');
  FPack.add('				second: ''h:mm:ss a'', // 11:20:01 AM');
  FPack.add('				minute: ''h:mm a'', // 11:20 AM');
  FPack.add('				hour: ''hA'', // 5PM');
  FPack.add('				day: ''MMM D'', // Sep 4');
  FPack.add('				week: ''ll'', // Week 46, or maybe "[W]WW - YYYY" ?');
  FPack.add('				month: ''MMM YYYY'', // Sept 2015');
  FPack.add('				quarter: ''[Q]Q - YYYY'', // Q3');
  FPack.add('				year: ''YYYY'' // 2015');
  FPack.add('			},');
  FPack.add('		},');
  FPack.add('		ticks: {');
  FPack.add('			autoSkip: false,');
  FPack.add('');
  FPack.add('			/**');
  FPack.add('			 * Ticks generation input values:');
  FPack.add('			 * - ''auto'': generates "optimal" ticks based on scale size and time options.');
  FPack.add('			 * - ''data'': generates ticks from data (including labels from data {t|x|y} objects).');
  FPack.add('			 * - ''labels'': generates ticks from user given `data.labels` values ONLY.');
  FPack.add('			 * @see https://github.com/chartjs/Chart.js/pull/4507');
  FPack.add('			 * @since 2.7.0');
  FPack.add('			 */');
  FPack.add('			source: ''auto'',');
  FPack.add('');
  FPack.add('			major: {');
  FPack.add('				enabled: false');
  FPack.add('			}');
  FPack.add('		}');
  FPack.add('	};');
  FPack.add('');
  FPack.add('	var TimeScale = Chart.Scale.extend({');
  FPack.add('		initialize: function() {');
  FPack.add('			if (!moment) {');
  FPack.add('				throw new Error(''Chart.js - Moment.js could not be found! You must include it before Chart.js to use the time scale. Download at https://momentjs.com'');');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			this.mergeTicksOptions();');
  FPack.add('');
  FPack.add('			Chart.Scale.prototype.initialize.call(this);');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		update: function() {');
  FPack.add('			var me = this;');
  FPack.add('			var options = me.options;');
  FPack.add('');
  FPack.add('			// DEPRECATIONS: output a message only one time per update');
  FPack.add('			if (options.time && options.time.format) {');
  FPack.add('				console.warn(''options.time.format is deprecated and replaced by options.time.parser.'');');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			return Chart.Scale.prototype.update.apply(me, arguments);');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		/**');
  FPack.add('		 * Allows data to be referenced via ''t'' attribute');
  FPack.add('		 */');
  FPack.add('		getRightValue: function(rawValue) {');
  FPack.add('			if (rawValue && rawValue.t !== undefined) {');
  FPack.add('				rawValue = rawValue.t;');
  FPack.add('			}');
  FPack.add('			return Chart.Scale.prototype.getRightValue.call(this, rawValue);');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		determineDataLimits: function() {');
  FPack.add('			var me = this;');
  FPack.add('			var chart = me.chart;');
  FPack.add('			var timeOpts = me.options.time;');
  FPack.add('			var unit = timeOpts.unit || ''day'';');
  FPack.add('			var min = MAX_INTEGER;');
  FPack.add('			var max = MIN_INTEGER;');
  FPack.add('			var timestamps = [];');
  FPack.add('			var datasets = [];');
  FPack.add('			var labels = [];');
  FPack.add('			var i, j, ilen, jlen, data, timestamp;');
  FPack.add('');
  FPack.add('			// Convert labels to timestamps');
  FPack.add('			for (i = 0, ilen = chart.data.labels.length; i < ilen; ++i) {');
  FPack.add('				labels.push(parse(chart.data.labels[i], me));');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			// Convert data to timestamps');
  FPack.add('			for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {');
  FPack.add('				if (chart.isDatasetVisible(i)) {');
  FPack.add('					data = chart.data.datasets[i].data;');
  FPack.add('');
  FPack.add('					// Let''s consider that all data have the same format.');
  FPack.add('					if (helpers.isObject(data[0])) {');
  FPack.add('						datasets[i] = [];');
  FPack.add('');
  FPack.add('						for (j = 0, jlen = data.length; j < jlen; ++j) {');
  FPack.add('							timestamp = parse(data[j], me);');
  FPack.add('							timestamps.push(timestamp);');
  FPack.add('							datasets[i][j] = timestamp;');
  FPack.add('						}');
  FPack.add('					} else {');
  FPack.add('						timestamps.push.apply(timestamps, labels);');
  FPack.add('						datasets[i] = labels.slice(0);');
  FPack.add('					}');
  FPack.add('				} else {');
  FPack.add('					datasets[i] = [];');
  FPack.add('				}');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			if (labels.length) {');
  FPack.add('				// Sort labels **after** data have been converted');
  FPack.add('				labels = arrayUnique(labels).sort(sorter);');
  FPack.add('				min = Math.min(min, labels[0]);');
  FPack.add('				max = Math.max(max, labels[labels.length - 1]);');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			if (timestamps.length) {');
  FPack.add('				timestamps = arrayUnique(timestamps).sort(sorter);');
  FPack.add('				min = Math.min(min, timestamps[0]);');
  FPack.add('				max = Math.max(max, timestamps[timestamps.length - 1]);');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			min = parse(timeOpts.min, me) || min;');
  FPack.add('			max = parse(timeOpts.max, me) || max;');
  FPack.add('');
  FPack.add('			// In case there is no valid min/max, set limits based on unit time option');
  FPack.add('			min = min === MAX_INTEGER ? +moment().startOf(unit) : min;');
  FPack.add('			max = max === MIN_INTEGER ? +moment().endOf(unit) + 1 : max;');
  FPack.add('');
  FPack.add('			// Make sure that max is strictly higher than min (required by the lookup table)');
  FPack.add('			me.min = Math.min(min, max);');
  FPack.add('			me.max = Math.max(min + 1, max);');
  FPack.add('');
  FPack.add('			// PRIVATE');
  FPack.add('			me._horizontal = me.isHorizontal();');
  FPack.add('			me._table = [];');
  FPack.add('			me._timestamps = {');
  FPack.add('				data: timestamps,');
  FPack.add('				datasets: datasets,');
  FPack.add('				labels: labels');
  FPack.add('			};');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		buildTicks: function() {');
  FPack.add('			var me = this;');
  FPack.add('			var min = me.min;');
  FPack.add('			var max = me.max;');
  FPack.add('			var options = me.options;');
  FPack.add('			var timeOpts = options.time;');
  FPack.add('			var timestamps = [];');
  FPack.add('			var ticks = [];');
  FPack.add('			var i, ilen, timestamp;');
  FPack.add('');
  FPack.add('			switch (options.ticks.source) {');
  FPack.add('			case ''data'':');
  FPack.add('				timestamps = me._timestamps.data;');
  FPack.add('				break;');
  FPack.add('			case ''labels'':');
  FPack.add('				timestamps = me._timestamps.labels;');
  FPack.add('				break;');
  FPack.add('			case ''auto'':');
  FPack.add('			default:');
  FPack.add('				timestamps = generate(min, max, me.getLabelCapacity(min), options);');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			if (options.bounds === ''ticks'' && timestamps.length) {');
  FPack.add('				min = timestamps[0];');
  FPack.add('				max = timestamps[timestamps.length - 1];');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			// Enforce limits with user min/max options');
  FPack.add('			min = parse(timeOpts.min, me) || min;');
  FPack.add('			max = parse(timeOpts.max, me) || max;');
  FPack.add('');
  FPack.add('			// Remove ticks outside the min/max range');
  FPack.add('			for (i = 0, ilen = timestamps.length; i < ilen; ++i) {');
  FPack.add('				timestamp = timestamps[i];');
  FPack.add('				if (timestamp >= min && timestamp <= max) {');
  FPack.add('					ticks.push(timestamp);');
  FPack.add('				}');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			me.min = min;');
  FPack.add('			me.max = max;');
  FPack.add('');
  FPack.add('			// PRIVATE');
  FPack.add('			me._unit = timeOpts.unit || determineUnitForFormatting(ticks, timeOpts.minUnit, me.min, me.max);');
  FPack.add('			me._majorUnit = determineMajorUnit(me._unit);');
  FPack.add('			me._table = buildLookupTable(me._timestamps.data, min, max, options.distribution);');
  FPack.add('			me._offsets = computeOffsets(me._table, ticks, min, max, options);');
  FPack.add('			me._labelFormat = determineLabelFormat(me._timestamps.data, timeOpts);');
  FPack.add('');
  FPack.add('			return ticksFromTimestamps(ticks, me._majorUnit);');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		getLabelForIndex: function(index, datasetIndex) {');
  FPack.add('			var me = this;');
  FPack.add('			var data = me.chart.data;');
  FPack.add('			var timeOpts = me.options.time;');
  FPack.add('			var label = data.labels && index < data.labels.length ? data.labels[index] : '''';');
  FPack.add('			var value = data.datasets[datasetIndex].data[index];');
  FPack.add('');
  FPack.add('			if (helpers.isObject(value)) {');
  FPack.add('				label = me.getRightValue(value);');
  FPack.add('			}');
  FPack.add('			if (timeOpts.tooltipFormat) {');
  FPack.add('				return momentify(label, timeOpts).format(timeOpts.tooltipFormat);');
  FPack.add('			}');
  FPack.add('			if (typeof label === ''string'') {');
  FPack.add('				return label;');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			return momentify(label, timeOpts).format(me._labelFormat);');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		/**');
  FPack.add('		 * Function to format an individual tick mark');
  FPack.add('		 * @private');
  FPack.add('		 */');
  FPack.add('		tickFormatFunction: function(tick, index, ticks, formatOverride) {');
end;

procedure TChartbundleJS.ChartbundleJS_57;
begin
  FPack.add('			var me = this;');
  FPack.add('			var options = me.options;');
  FPack.add('			var time = tick.valueOf();');
  FPack.add('			var formats = options.time.displayFormats;');
  FPack.add('			var minorFormat = formats[me._unit];');
  FPack.add('			var majorUnit = me._majorUnit;');
  FPack.add('			var majorFormat = formats[majorUnit];');
  FPack.add('			var majorTime = tick.clone().startOf(majorUnit).valueOf();');
  FPack.add('			var majorTickOpts = options.ticks.major;');
  FPack.add('			var major = majorTickOpts.enabled && majorUnit && majorFormat && time === majorTime;');
  FPack.add('			var label = tick.format(formatOverride ? formatOverride : major ? majorFormat : minorFormat);');
  FPack.add('			var tickOpts = major ? majorTickOpts : options.ticks.minor;');
  FPack.add('			var formatter = helpers.valueOrDefault(tickOpts.callback, tickOpts.userCallback);');
  FPack.add('');
  FPack.add('			return formatter ? formatter(label, index, ticks) : label;');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		convertTicksToLabels: function(ticks) {');
  FPack.add('			var labels = [];');
  FPack.add('			var i, ilen;');
  FPack.add('');
  FPack.add('			for (i = 0, ilen = ticks.length; i < ilen; ++i) {');
  FPack.add('				labels.push(this.tickFormatFunction(moment(ticks[i].value), i, ticks));');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			return labels;');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		/**');
  FPack.add('		 * @private');
  FPack.add('		 */');
  FPack.add('		getPixelForOffset: function(time) {');
  FPack.add('			var me = this;');
  FPack.add('			var size = me._horizontal ? me.width : me.height;');
  FPack.add('			var start = me._horizontal ? me.left : me.top;');
  FPack.add('			var pos = interpolate(me._table, ''time'', time, ''pos'');');
  FPack.add('');
  FPack.add('			return start + size * (me._offsets.left + pos) / (me._offsets.left + 1 + me._offsets.right);');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		getPixelForValue: function(value, index, datasetIndex) {');
  FPack.add('			var me = this;');
  FPack.add('			var time = null;');
  FPack.add('');
  FPack.add('			if (index !== undefined && datasetIndex !== undefined) {');
  FPack.add('				time = me._timestamps.datasets[datasetIndex][index];');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			if (time === null) {');
  FPack.add('				time = parse(value, me);');
  FPack.add('			}');
  FPack.add('');
  FPack.add('			if (time !== null) {');
  FPack.add('				return me.getPixelForOffset(time);');
  FPack.add('			}');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		getPixelForTick: function(index) {');
  FPack.add('			var ticks = this.getTicks();');
  FPack.add('			return index >= 0 && index < ticks.length ?');
  FPack.add('				this.getPixelForOffset(ticks[index].value) :');
  FPack.add('				null;');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		getValueForPixel: function(pixel) {');
  FPack.add('			var me = this;');
  FPack.add('			var size = me._horizontal ? me.width : me.height;');
  FPack.add('			var start = me._horizontal ? me.left : me.top;');
  FPack.add('			var pos = (size ? (pixel - start) / size : 0) * (me._offsets.left + 1 + me._offsets.left) - me._offsets.right;');
  FPack.add('			var time = interpolate(me._table, ''pos'', pos, ''time'');');
  FPack.add('');
  FPack.add('			return moment(time);');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		/**');
  FPack.add('		 * Crude approximation of what the label width might be');
  FPack.add('		 * @private');
  FPack.add('		 */');
  FPack.add('		getLabelWidth: function(label) {');
  FPack.add('			var me = this;');
  FPack.add('			var ticksOpts = me.options.ticks;');
  FPack.add('			var tickLabelWidth = me.ctx.measureText(label).width;');
  FPack.add('			var angle = helpers.toRadians(ticksOpts.maxRotation);');
  FPack.add('			var cosRotation = Math.cos(angle);');
  FPack.add('			var sinRotation = Math.sin(angle);');
  FPack.add('			var tickFontSize = helpers.valueOrDefault(ticksOpts.fontSize, defaults.global.defaultFontSize);');
  FPack.add('');
  FPack.add('			return (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation);');
  FPack.add('		},');
  FPack.add('');
  FPack.add('		/**');
  FPack.add('		 * @private');
  FPack.add('		 */');
  FPack.add('		getLabelCapacity: function(exampleTime) {');
  FPack.add('			var me = this;');
  FPack.add('');
  FPack.add('			var formatOverride = me.options.time.displayFormats.millisecond;	// Pick the longest format for guestimation');
  FPack.add('');
  FPack.add('			var exampleLabel = me.tickFormatFunction(moment(exampleTime), 0, [], formatOverride);');
  FPack.add('			var tickLabelWidth = me.getLabelWidth(exampleLabel);');
  FPack.add('			var innerWidth = me.isHorizontal() ? me.width : me.height;');
  FPack.add('');
  FPack.add('			var capacity = Math.floor(innerWidth / tickLabelWidth);');
  FPack.add('			return capacity > 0 ? capacity : 1;');
  FPack.add('		}');
  FPack.add('	});');
  FPack.add('');
  FPack.add('	Chart.scaleService.registerScaleType(''time'', TimeScale, defaultConfig);');
  FPack.add('};');
  FPack.add('');
  FPack.add('},{"25":25,"45":45,"6":6}]},{},[7])(7)');
  FPack.add('});');
  FPack.Add('</script>'+#13);
 end;

function TChartbundleJS.PackJS: String;
begin
  ChartbundleJS_1;
  ChartbundleJS_2;
  ChartbundleJS_3;
  ChartbundleJS_4;
  ChartbundleJS_5;
  ChartbundleJS_6;
  ChartbundleJS_7;
  ChartbundleJS_8;
  ChartbundleJS_9;
  ChartbundleJS_10;
  ChartbundleJS_11;
  ChartbundleJS_12;
  ChartbundleJS_13;
  ChartbundleJS_14;
  ChartbundleJS_15;
  ChartbundleJS_16;
  ChartbundleJS_17;
  ChartbundleJS_18;
  ChartbundleJS_19;
  ChartbundleJS_20;
  ChartbundleJS_21;
  ChartbundleJS_22;
  ChartbundleJS_23;
  ChartbundleJS_24;
  ChartbundleJS_25;
  ChartbundleJS_26;
  ChartbundleJS_27;
  ChartbundleJS_28;
  ChartbundleJS_29;
  ChartbundleJS_30;
  ChartbundleJS_31;
  ChartbundleJS_32;
  ChartbundleJS_33;
  ChartbundleJS_34;
  ChartbundleJS_35;
  ChartbundleJS_36;
  ChartbundleJS_37;
  ChartbundleJS_38;
  ChartbundleJS_39;
  ChartbundleJS_40;
  ChartbundleJS_41;
  ChartbundleJS_42;
  ChartbundleJS_43;
  ChartbundleJS_44;
  ChartbundleJS_45;
  ChartbundleJS_46;
  ChartbundleJS_47;
  ChartbundleJS_48;
  ChartbundleJS_49;
  ChartbundleJS_50;
  ChartbundleJS_51;
  ChartbundleJS_52;
  ChartbundleJS_53;
  ChartbundleJS_54;
  ChartbundleJS_55;
  ChartbundleJS_56;
  ChartbundleJS_57;
  Result := FPack.Text;
end;

end.
